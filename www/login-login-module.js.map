{"version":3,"sources":["../src/constants.ts","../src/functions.ts","../src/logger.ts","../src/helpers.ts","../src/errors.ts","../src/get-config.ts","../src/initialize-ids.ts","../src/factory.ts","../index.ts","./src/app/login/components/forget-password/forget-password.component.ts","./src/app/login/components/forget-password/forget-password.component.html","../src/core/storage/DOMStorageWrapper.ts","../src/core/storage/MemoryStorage.ts","../src/core/storage/storage.ts","../src/core/util/util.ts","../src/core/util/Path.ts","../src/realtime/Constants.ts","../src/core/RepoInfo.ts","../src/core/util/libs/parser.ts","../src/core/util/validation.ts","../src/api/onDisconnect.ts","../src/api/TransactionResult.ts","../src/core/util/NextPushId.ts","../src/core/snap/Node.ts","../src/core/snap/indexes/Index.ts","../src/core/snap/indexes/KeyIndex.ts","../src/core/snap/snap.ts","../src/core/snap/LeafNode.ts","../src/core/snap/indexes/PriorityIndex.ts","../src/core/util/SortedMap.ts","../src/core/snap/childSet.ts","../src/core/snap/IndexMap.ts","../src/core/snap/comparators.ts","../src/core/snap/ChildrenNode.ts","../src/core/snap/nodeFromJSON.ts","../src/core/snap/indexes/ValueIndex.ts","../src/core/snap/indexes/PathIndex.ts","../src/api/DataSnapshot.ts","../src/core/view/Event.ts","../src/core/view/EventRegistration.ts","../src/core/view/Change.ts","../src/core/view/filter/IndexedFilter.ts","../src/core/view/filter/RangedFilter.ts","../src/core/view/filter/LimitedFilter.ts","../src/core/view/QueryParams.ts","../src/api/Query.ts","../src/core/util/ServerValues.ts","../src/core/SparseSnapshotTree.ts","../src/core/operation/Operation.ts","../src/core/operation/AckUserWrite.ts","../src/core/util/ImmutableTree.ts","../src/core/operation/ListenComplete.ts","../src/core/operation/Overwrite.ts","../src/core/operation/Merge.ts","../src/core/view/CacheNode.ts","../src/core/view/ViewCache.ts","../src/core/view/ChildChangeAccumulator.ts","../src/core/view/CompleteChildSource.ts","../src/core/view/ViewProcessor.ts","../src/core/view/EventGenerator.ts","../src/core/view/View.ts","../src/core/SyncPoint.ts","../src/core/CompoundWrite.ts","../src/core/WriteTree.ts","../src/core/SyncTree.ts","../src/core/SnapshotHolder.ts","../src/core/stats/StatsCollection.ts","../src/core/stats/StatsManager.ts","../src/core/stats/StatsListener.ts","../src/core/stats/StatsReporter.ts","../src/core/view/EventQueue.ts","../src/core/util/EventEmitter.ts","../src/core/util/VisibilityMonitor.ts","../src/core/util/OnlineMonitor.ts","../src/realtime/polling/PacketReceiver.ts","../src/realtime/BrowserPollConnection.ts","../src/core/version.ts","../src/realtime/WebSocketConnection.ts","../src/realtime/TransportManager.ts","../src/realtime/Connection.ts","../src/core/ServerActions.ts","../src/core/PersistentConnection.ts","../src/core/ReadonlyRestClient.ts","../src/core/util/Tree.ts","../src/core/Repo.ts","../src/api/Reference.ts","../src/core/AuthTokenProvider.ts","../src/core/RepoManager.ts","../src/api/Database.ts","../src/api/internal.ts","../src/api/test_access.ts","./src/app/login/services/window.service.ts","./src/app/login/components/register/register.component.ts","./src/app/login/components/register/register.component.html","../app/index.ts","../src/index.ts","../src/utils/errors.ts","../src/utils/console_logger.ts","../src/services/api_service.ts","../src/utils/string_merger.ts","../src/services/settings_service.ts","../src/services/iid_service.ts","../src/utils/attributes_utils.ts","../src/services/remote_config_service.ts","../src/services/initialization_service.ts","../src/services/transport_service.ts","../src/services/perf_logger.ts","../src/utils/metric_utils.ts","../src/resources/trace.ts","../src/resources/network_request.ts","../src/services/oob_resources_service.ts","../src/controllers/perf.ts","./src/app/login/login.module.ts","../src/client/caching_client.ts","../src/language.ts","../src/client/rest_client.ts","../src/client/remote_config_fetch_client.ts","../src/value.ts","../src/remote_config.ts","../src/storage/storage.ts","../src/storage/storage_cache.ts","../src/client/retrying_client.ts","./src/app/login/login-routing.module.ts","../src/util/constants.ts","../src/util/errors.ts","../src/api/common.ts","../src/api/create-installation-request.ts","../src/util/sleep.ts","../src/helpers/buffer-to-base64-url-safe.ts","../src/helpers/generate-fid.ts","../src/util/get-key.ts","../src/helpers/fid-changed.ts","../src/helpers/idb-manager.ts","../src/helpers/get-installation-entry.ts","../src/api/generate-auth-token-request.ts","../src/helpers/refresh-auth-token.ts","../src/functions/get-id.ts","../src/functions/get-token.ts","../src/api/delete-installation-request.ts","../src/functions/delete-installation.ts","../src/functions/on-id-change.ts","../src/helpers/extract-app-config.ts","../src/api/error.ts","../src/context.ts","../src/serializer.ts","../src/api/service.ts","../src/config.ts","../src/interfaces/internal-message-payload.ts","../src/helpers/array-base64-translator.ts","../src/helpers/migrate-old-database.ts","../src/core/api.ts","../src/core/token-management.ts","../src/helpers/externalizePayload.ts","../src/helpers/is-console-message.ts","../src/helpers/sleep.ts","../src/controllers/sw-controller.ts","../src/controllers/window-controller.ts","./node_modules/idb/build/idb.js","./src/app/login/login.component.ts","./src/app/login/login.component.html","../../index.bundle.ts"],"names":["errorPrefixFxn","errorPrefix","MAX_NODE","setMaxNode","setPriorityMaxNode","nodeFromJSON","__referenceConstructor","name","version","FirebaseLogLevel","packageName","global","factory","exports","toArray","arr","Array","prototype","slice","call","promisifyRequest","request","Promise","resolve","reject","onsuccess","result","onerror","error","promisifyRequestCall","obj","method","args","p","apply","then","promisifyCursorRequestCall","value","Cursor","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","Object","defineProperty","get","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","Index","index","_index","IDBIndex","cursor","_cursor","_request","IDBCursor","methodName","ObjectStore","store","_store","createIndex","IDBObjectStore","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","objectStore","IDBTransaction","UpgradeDB","db","oldVersion","transaction","_db","createObjectStore","IDBDatabase","DB","funcName","replace","callback","length","nativeObject","getAll","query","count","instance","items","iterateCursor","push","undefined","continue","openDb","upgradeCallback","indexedDB","onupgradeneeded","event","deleteDb","registerBundle","loadBundle","namedQuery","Firestore"],"mappings":"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","file":"login-login-module.js","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { version } from '../package.json';\n\nexport const SDK_VERSION = version;\n/** The prefix for start User Timing marks used for creating Traces. */\nexport const TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\n/** The prefix for stop User Timing marks used for creating Traces. */\nexport const TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\n/** The prefix for User Timing measure used for creating Traces. */\nexport const TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\n/** The prefix for out of the box page load Trace name. */\nexport const OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\n\nexport const FIRST_PAINT_COUNTER_NAME = '_fp';\n\nexport const FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\n\nexport const FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\n\nexport const CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\n\nexport const CONFIG_EXPIRY_LOCAL_STORAGE_KEY =\n  '@firebase/performance/configexpire';\n\nexport const SERVICE = 'performance';\nexport const SERVICE_NAME = 'Performance';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AnalyticsCallOptions,\n  Gtag,\n  CustomParams,\n  ControlParams,\n  EventParams\n} from '@firebase/analytics-types';\nimport { GtagCommand } from './constants';\n/**\n * Logs an analytics event through the Firebase SDK.\n *\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\n * @param eventName Google Analytics event name, choose from standard list or use a custom string.\n * @param eventParams Analytics event parameters.\n */\nexport async function logEvent(\n  gtagFunction: Gtag,\n  initializationPromise: Promise<string>,\n  eventName: string,\n  eventParams?: EventParams,\n  options?: AnalyticsCallOptions\n): Promise<void> {\n  if (options && options.global) {\n    gtagFunction(GtagCommand.EVENT, eventName, eventParams);\n    return;\n  } else {\n    const measurementId = await initializationPromise;\n    const params: EventParams | ControlParams = {\n      ...eventParams,\n      'send_to': measurementId\n    };\n    gtagFunction(GtagCommand.EVENT, eventName, params);\n  }\n}\n\n/**\n * Set screen_name parameter for this Google Analytics ID.\n *\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\n * @param screenName Screen name string to set.\n */\nexport async function setCurrentScreen(\n  gtagFunction: Gtag,\n  initializationPromise: Promise<string>,\n  screenName: string | null,\n  options?: AnalyticsCallOptions\n): Promise<void> {\n  if (options && options.global) {\n    gtagFunction(GtagCommand.SET, { 'screen_name': screenName });\n    return Promise.resolve();\n  } else {\n    const measurementId = await initializationPromise;\n    gtagFunction(GtagCommand.CONFIG, measurementId, {\n      update: true,\n      'screen_name': screenName\n    });\n  }\n}\n\n/**\n * Set user_id parameter for this Google Analytics ID.\n *\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\n * @param id User ID string to set\n */\nexport async function setUserId(\n  gtagFunction: Gtag,\n  initializationPromise: Promise<string>,\n  id: string | null,\n  options?: AnalyticsCallOptions\n): Promise<void> {\n  if (options && options.global) {\n    gtagFunction(GtagCommand.SET, { 'user_id': id });\n    return Promise.resolve();\n  } else {\n    const measurementId = await initializationPromise;\n    gtagFunction(GtagCommand.CONFIG, measurementId, {\n      update: true,\n      'user_id': id\n    });\n  }\n}\n\n/**\n * Set all other user properties other than user_id and screen_name.\n *\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\n * @param properties Map of user properties to set\n */\nexport async function setUserProperties(\n  gtagFunction: Gtag,\n  initializationPromise: Promise<string>,\n  properties: CustomParams,\n  options?: AnalyticsCallOptions\n): Promise<void> {\n  if (options && options.global) {\n    const flatProperties: { [key: string]: unknown } = {};\n    for (const key of Object.keys(properties)) {\n      // use dot notation for merge behavior in gtag.js\n      flatProperties[`user_properties.${key}`] = properties[key];\n    }\n    gtagFunction(GtagCommand.SET, flatProperties);\n    return Promise.resolve();\n  } else {\n    const measurementId = await initializationPromise;\n    gtagFunction(GtagCommand.CONFIG, measurementId, {\n      update: true,\n      'user_properties': properties\n    });\n  }\n}\n\n/**\n * Set whether collection is enabled for this ID.\n *\n * @param enabled If true, collection is enabled for this ID.\n */\nexport async function setAnalyticsCollectionEnabled(\n  initializationPromise: Promise<string>,\n  enabled: boolean\n): Promise<void> {\n  const measurementId = await initializationPromise;\n  window[`ga-disable-${measurementId}`] = !enabled;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/analytics');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DynamicConfig,\n  DataLayer,\n  Gtag,\n  CustomParams,\n  ControlParams,\n  EventParams,\n  MinimalDynamicConfig\n} from '@firebase/analytics-types';\nimport { GtagCommand, GTAG_URL } from './constants';\nimport { logger } from './logger';\n\n/**\n * Inserts gtag script tag into the page to asynchronously download gtag.\n * @param dataLayerName Name of datalayer (most often the default, \"_dataLayer\").\n */\nexport function insertScriptTag(\n  dataLayerName: string,\n  measurementId: string\n): void {\n  const script = document.createElement('script');\n  script.src = `${GTAG_URL}?l=${dataLayerName}&id=${measurementId}`;\n  script.async = true;\n  document.head.appendChild(script);\n}\n\n/**\n * Get reference to, or create, global datalayer.\n * @param dataLayerName Name of datalayer (most often the default, \"_dataLayer\").\n */\nexport function getOrCreateDataLayer(dataLayerName: string): DataLayer {\n  // Check for existing dataLayer and create if needed.\n  let dataLayer: DataLayer = [];\n  if (Array.isArray(window[dataLayerName])) {\n    dataLayer = window[dataLayerName] as DataLayer;\n  } else {\n    window[dataLayerName] = dataLayer;\n  }\n  return dataLayer;\n}\n\n/**\n * Wrapped gtag logic when gtag is called with 'config' command.\n *\n * @param gtagCore Basic gtag function that just appends to dataLayer.\n * @param initializationPromisesMap Map of appIds to their initialization promises.\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\n * @param measurementId GA Measurement ID to set config for.\n * @param gtagParams Gtag config params to set.\n */\nasync function gtagOnConfig(\n  gtagCore: Gtag,\n  initializationPromisesMap: { [appId: string]: Promise<string> },\n  dynamicConfigPromisesList: Array<\n    Promise<DynamicConfig | MinimalDynamicConfig>\n  >,\n  measurementIdToAppId: { [measurementId: string]: string },\n  measurementId: string,\n  gtagParams?: ControlParams & EventParams & CustomParams\n): Promise<void> {\n  // If config is already fetched, we know the appId and can use it to look up what FID promise we\n  /// are waiting for, and wait only on that one.\n  const correspondingAppId = measurementIdToAppId[measurementId as string];\n  try {\n    if (correspondingAppId) {\n      await initializationPromisesMap[correspondingAppId];\n    } else {\n      // If config is not fetched yet, wait for all configs (we don't know which one we need) and\n      // find the appId (if any) corresponding to this measurementId. If there is one, wait on\n      // that appId's initialization promise. If there is none, promise resolves and gtag\n      // call goes through.\n      const dynamicConfigResults = await Promise.all(dynamicConfigPromisesList);\n      const foundConfig = dynamicConfigResults.find(\n        config => config.measurementId === measurementId\n      );\n      if (foundConfig) {\n        await initializationPromisesMap[foundConfig.appId];\n      }\n    }\n  } catch (e) {\n    logger.error(e);\n  }\n  gtagCore(GtagCommand.CONFIG, measurementId, gtagParams);\n}\n\n/**\n * Wrapped gtag logic when gtag is called with 'event' command.\n *\n * @param gtagCore Basic gtag function that just appends to dataLayer.\n * @param initializationPromisesMap Map of appIds to their initialization promises.\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\n * @param measurementId GA Measurement ID to log event to.\n * @param gtagParams Params to log with this event.\n */\nasync function gtagOnEvent(\n  gtagCore: Gtag,\n  initializationPromisesMap: { [appId: string]: Promise<string> },\n  dynamicConfigPromisesList: Array<\n    Promise<DynamicConfig | MinimalDynamicConfig>\n  >,\n  measurementId: string,\n  gtagParams?: ControlParams & EventParams & CustomParams\n): Promise<void> {\n  try {\n    let initializationPromisesToWaitFor: Array<Promise<string>> = [];\n\n    // If there's a 'send_to' param, check if any ID specified matches\n    // an initializeIds() promise we are waiting for.\n    if (gtagParams && gtagParams['send_to']) {\n      let gaSendToList: string | string[] = gtagParams['send_to'];\n      // Make it an array if is isn't, so it can be dealt with the same way.\n      if (!Array.isArray(gaSendToList)) {\n        gaSendToList = [gaSendToList];\n      }\n      // Checking 'send_to' fields requires having all measurement ID results back from\n      // the dynamic config fetch.\n      const dynamicConfigResults = await Promise.all(dynamicConfigPromisesList);\n      for (const sendToId of gaSendToList) {\n        // Any fetched dynamic measurement ID that matches this 'send_to' ID\n        const foundConfig = dynamicConfigResults.find(\n          config => config.measurementId === sendToId\n        );\n        const initializationPromise =\n          foundConfig && initializationPromisesMap[foundConfig.appId];\n        if (initializationPromise) {\n          initializationPromisesToWaitFor.push(initializationPromise);\n        } else {\n          // Found an item in 'send_to' that is not associated\n          // directly with an FID, possibly a group.  Empty this array,\n          // exit the loop early, and let it get populated below.\n          initializationPromisesToWaitFor = [];\n          break;\n        }\n      }\n    }\n\n    // This will be unpopulated if there was no 'send_to' field , or\n    // if not all entries in the 'send_to' field could be mapped to\n    // a FID. In these cases, wait on all pending initialization promises.\n    if (initializationPromisesToWaitFor.length === 0) {\n      initializationPromisesToWaitFor = Object.values(\n        initializationPromisesMap\n      );\n    }\n\n    // Run core gtag function with args after all relevant initialization\n    // promises have been resolved.\n    await Promise.all(initializationPromisesToWaitFor);\n    // Workaround for http://b/141370449 - third argument cannot be undefined.\n    gtagCore(GtagCommand.EVENT, measurementId, gtagParams || {});\n  } catch (e) {\n    logger.error(e);\n  }\n}\n\n/**\n * Wraps a standard gtag function with extra code to wait for completion of\n * relevant initialization promises before sending requests.\n *\n * @param gtagCore Basic gtag function that just appends to dataLayer.\n * @param initializationPromisesMap Map of appIds to their initialization promises.\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\n */\nfunction wrapGtag(\n  gtagCore: Gtag,\n  /**\n   * Allows wrapped gtag calls to wait on whichever intialization promises are required,\n   * depending on the contents of the gtag params' `send_to` field, if any.\n   */\n  initializationPromisesMap: { [appId: string]: Promise<string> },\n  /**\n   * Wrapped gtag calls sometimes require all dynamic config fetches to have returned\n   * before determining what initialization promises (which include FIDs) to wait for.\n   */\n  dynamicConfigPromisesList: Array<\n    Promise<DynamicConfig | MinimalDynamicConfig>\n  >,\n  /**\n   * Wrapped gtag config calls can narrow down which initialization promise (with FID)\n   * to wait for if the measurementId is already fetched, by getting the corresponding appId,\n   * which is the key for the initialization promises map.\n   */\n  measurementIdToAppId: { [measurementId: string]: string }\n): Gtag {\n  /**\n   * Wrapper around gtag that ensures FID is sent with gtag calls.\n   * @param command Gtag command type.\n   * @param idOrNameOrParams Measurement ID if command is EVENT/CONFIG, params if command is SET.\n   * @param gtagParams Params if event is EVENT/CONFIG.\n   */\n  async function gtagWrapper(\n    command: 'config' | 'set' | 'event',\n    idOrNameOrParams: string | ControlParams,\n    gtagParams?: ControlParams & EventParams & CustomParams\n  ): Promise<void> {\n    try {\n      // If event, check that relevant initialization promises have completed.\n      if (command === GtagCommand.EVENT) {\n        // If EVENT, second arg must be measurementId.\n        await gtagOnEvent(\n          gtagCore,\n          initializationPromisesMap,\n          dynamicConfigPromisesList,\n          idOrNameOrParams as string,\n          gtagParams\n        );\n      } else if (command === GtagCommand.CONFIG) {\n        // If CONFIG, second arg must be measurementId.\n        await gtagOnConfig(\n          gtagCore,\n          initializationPromisesMap,\n          dynamicConfigPromisesList,\n          measurementIdToAppId,\n          idOrNameOrParams as string,\n          gtagParams\n        );\n      } else {\n        // If SET, second arg must be params.\n        gtagCore(GtagCommand.SET, idOrNameOrParams as CustomParams);\n      }\n    } catch (e) {\n      logger.error(e);\n    }\n  }\n  return gtagWrapper;\n}\n\n/**\n * Creates global gtag function or wraps existing one if found.\n * This wrapped function attaches Firebase instance ID (FID) to gtag 'config' and\n * 'event' calls that belong to the GAID associated with this Firebase instance.\n *\n * @param initializationPromisesMap Map of appIds to their initialization promises.\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\n * @param dataLayerName Name of global GA datalayer array.\n * @param gtagFunctionName Name of global gtag function (\"gtag\" if not user-specified).\n */\nexport function wrapOrCreateGtag(\n  initializationPromisesMap: { [appId: string]: Promise<string> },\n  dynamicConfigPromisesList: Array<\n    Promise<DynamicConfig | MinimalDynamicConfig>\n  >,\n  measurementIdToAppId: { [measurementId: string]: string },\n  dataLayerName: string,\n  gtagFunctionName: string\n): {\n  gtagCore: Gtag;\n  wrappedGtag: Gtag;\n} {\n  // Create a basic core gtag function\n  let gtagCore: Gtag = function (..._args: unknown[]) {\n    // Must push IArguments object, not an array.\n    (window[dataLayerName] as DataLayer).push(arguments);\n  };\n\n  // Replace it with existing one if found\n  if (\n    window[gtagFunctionName] &&\n    typeof window[gtagFunctionName] === 'function'\n  ) {\n    // @ts-ignore\n    gtagCore = window[gtagFunctionName];\n  }\n\n  window[gtagFunctionName] = wrapGtag(\n    gtagCore,\n    initializationPromisesMap,\n    dynamicConfigPromisesList,\n    measurementIdToAppId\n  );\n\n  return {\n    gtagCore,\n    wrappedGtag: window[gtagFunctionName] as Gtag\n  };\n}\n\n/**\n * Returns first script tag in DOM matching our gtag url pattern.\n */\nexport function findGtagScriptOnPage(): HTMLScriptElement | null {\n  const scriptTags = window.document.getElementsByTagName('script');\n  for (const tag of Object.values(scriptTags)) {\n    if (tag.src && tag.src.includes(GTAG_URL)) {\n      return tag;\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\n\nexport const enum ErrorCode {\n  REGISTRATION_WINDOW = 'registration-window',\n  REGISTRATION_PROJECT_ID = 'registration-project-id',\n  REGISTRATION_API_KEY = 'registration-api-key',\n  REGISTRATION_APP_ID = 'registration-app-id',\n  STORAGE_OPEN = 'storage-open',\n  STORAGE_GET = 'storage-get',\n  STORAGE_SET = 'storage-set',\n  STORAGE_DELETE = 'storage-delete',\n  FETCH_NETWORK = 'fetch-client-network',\n  FETCH_TIMEOUT = 'fetch-timeout',\n  FETCH_THROTTLE = 'fetch-throttle',\n  FETCH_PARSE = 'fetch-client-parse',\n  FETCH_STATUS = 'fetch-status'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.REGISTRATION_WINDOW]:\n    'Undefined window object. This SDK only supports usage in a browser environment.',\n  [ErrorCode.REGISTRATION_PROJECT_ID]:\n    'Undefined project identifier. Check Firebase app initialization.',\n  [ErrorCode.REGISTRATION_API_KEY]:\n    'Undefined API key. Check Firebase app initialization.',\n  [ErrorCode.REGISTRATION_APP_ID]:\n    'Undefined app identifier. Check Firebase app initialization.',\n  [ErrorCode.STORAGE_OPEN]:\n    'Error thrown when opening storage. Original error: {$originalErrorMessage}.',\n  [ErrorCode.STORAGE_GET]:\n    'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',\n  [ErrorCode.STORAGE_SET]:\n    'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',\n  [ErrorCode.STORAGE_DELETE]:\n    'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.',\n  [ErrorCode.FETCH_NETWORK]:\n    'Fetch client failed to connect to a network. Check Internet connection.' +\n    ' Original error: {$originalErrorMessage}.',\n  [ErrorCode.FETCH_TIMEOUT]:\n    'The config fetch request timed out. ' +\n    ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.',\n  [ErrorCode.FETCH_THROTTLE]:\n    'The config fetch request timed out while in an exponential backoff state.' +\n    ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.' +\n    ' Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',\n  [ErrorCode.FETCH_PARSE]:\n    'Fetch client could not parse response.' +\n    ' Original error: {$originalErrorMessage}.',\n  [ErrorCode.FETCH_STATUS]:\n    'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.'\n};\n\n// Note this is effectively a type system binding a code to params. This approach overlaps with the\n// role of TS interfaces, but works well for a few reasons:\n// 1) JS is unaware of TS interfaces, eg we can't test for interface implementation in JS\n// 2) callers should have access to a human-readable summary of the error and this interpolates\n//    params into an error message;\n// 3) callers should be able to programmatically access data associated with an error, which\n//    ErrorData provides.\ninterface ErrorParams {\n  [ErrorCode.STORAGE_OPEN]: { originalErrorMessage: string | undefined };\n  [ErrorCode.STORAGE_GET]: { originalErrorMessage: string | undefined };\n  [ErrorCode.STORAGE_SET]: { originalErrorMessage: string | undefined };\n  [ErrorCode.STORAGE_DELETE]: { originalErrorMessage: string | undefined };\n  [ErrorCode.FETCH_NETWORK]: { originalErrorMessage: string };\n  [ErrorCode.FETCH_THROTTLE]: { throttleEndTimeMillis: number };\n  [ErrorCode.FETCH_PARSE]: { originalErrorMessage: string };\n  [ErrorCode.FETCH_STATUS]: { httpStatus: number };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  'remoteconfig' /* service */,\n  'Remote Config' /* service name */,\n  ERROR_DESCRIPTION_MAP\n);\n\n// Note how this is like typeof/instanceof, but for ErrorCode.\nexport function hasErrorCode(e: Error, errorCode: ErrorCode): boolean {\n  return e instanceof FirebaseError && e.code.indexOf(errorCode) !== -1;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Most logic is copied from packages/remote-config/src/client/retrying_client.ts\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport {\n  DynamicConfig,\n  ThrottleMetadata,\n  MinimalDynamicConfig\n} from '@firebase/analytics-types';\nimport { FirebaseError, calculateBackoffMillis } from '@firebase/util';\nimport { AnalyticsError, ERROR_FACTORY } from './errors';\nimport { DYNAMIC_CONFIG_URL, FETCH_TIMEOUT_MILLIS } from './constants';\nimport { logger } from './logger';\n\n// App config fields needed by analytics.\nexport interface AppFields {\n  appId: string;\n  apiKey: string;\n  measurementId?: string;\n}\n\n/**\n * Backoff factor for 503 errors, which we want to be conservative about\n * to avoid overloading servers. Each retry interval will be\n * BASE_INTERVAL_MILLIS * LONG_RETRY_FACTOR ^ retryCount, so the second one\n * will be ~30 seconds (with fuzzing).\n */\nexport const LONG_RETRY_FACTOR = 30;\n\n/**\n * Base wait interval to multiplied by backoffFactor^backoffCount.\n */\nconst BASE_INTERVAL_MILLIS = 1000;\n\n/**\n * Stubbable retry data storage class.\n */\nclass RetryData {\n  constructor(\n    public throttleMetadata: { [appId: string]: ThrottleMetadata } = {},\n    public intervalMillis: number = BASE_INTERVAL_MILLIS\n  ) {}\n\n  getThrottleMetadata(appId: string): ThrottleMetadata {\n    return this.throttleMetadata[appId];\n  }\n\n  setThrottleMetadata(appId: string, metadata: ThrottleMetadata): void {\n    this.throttleMetadata[appId] = metadata;\n  }\n\n  deleteThrottleMetadata(appId: string): void {\n    delete this.throttleMetadata[appId];\n  }\n}\n\nconst defaultRetryData = new RetryData();\n\n/**\n * Set GET request headers.\n * @param apiKey App API key.\n */\nfunction getHeaders(apiKey: string): Headers {\n  return new Headers({\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\n\n/**\n * Fetches dynamic config from backend.\n * @param app Firebase app to fetch config for.\n */\nexport async function fetchDynamicConfig(\n  appFields: AppFields\n): Promise<DynamicConfig> {\n  const { appId, apiKey } = appFields;\n  const request: RequestInit = {\n    method: 'GET',\n    headers: getHeaders(apiKey)\n  };\n  const appUrl = DYNAMIC_CONFIG_URL.replace('{app-id}', appId);\n  const response = await fetch(appUrl, request);\n  if (response.status !== 200 && response.status !== 304) {\n    let errorMessage = '';\n    try {\n      // Try to get any error message text from server response.\n      const jsonResponse = (await response.json()) as {\n        error?: { message?: string };\n      };\n      if (jsonResponse.error?.message) {\n        errorMessage = jsonResponse.error.message;\n      }\n    } catch (_ignored) {}\n    throw ERROR_FACTORY.create(AnalyticsError.CONFIG_FETCH_FAILED, {\n      httpStatus: response.status,\n      responseMessage: errorMessage\n    });\n  }\n  return response.json();\n}\n\n/**\n * Fetches dynamic config from backend, retrying if failed.\n * @param app Firebase app to fetch config for.\n */\nexport async function fetchDynamicConfigWithRetry(\n  app: FirebaseApp,\n  // retryData and timeoutMillis are parameterized to allow passing a different value for testing.\n  retryData: RetryData = defaultRetryData,\n  timeoutMillis?: number\n): Promise<DynamicConfig | MinimalDynamicConfig> {\n  const { appId, apiKey, measurementId } = app.options;\n\n  if (!appId) {\n    throw ERROR_FACTORY.create(AnalyticsError.NO_APP_ID);\n  }\n\n  if (!apiKey) {\n    if (measurementId) {\n      return {\n        measurementId,\n        appId\n      };\n    }\n    throw ERROR_FACTORY.create(AnalyticsError.NO_API_KEY);\n  }\n\n  const throttleMetadata: ThrottleMetadata = retryData.getThrottleMetadata(\n    appId\n  ) || {\n    backoffCount: 0,\n    throttleEndTimeMillis: Date.now()\n  };\n\n  const signal = new AnalyticsAbortSignal();\n\n  setTimeout(\n    async () => {\n      // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\n      signal.abort();\n    },\n    timeoutMillis !== undefined ? timeoutMillis : FETCH_TIMEOUT_MILLIS\n  );\n\n  return attemptFetchDynamicConfigWithRetry(\n    { appId, apiKey, measurementId },\n    throttleMetadata,\n    signal,\n    retryData\n  );\n}\n\n/**\n * Runs one retry attempt.\n * @param appFields Necessary app config fields.\n * @param throttleMetadata Ongoing metadata to determine throttling times.\n * @param signal Abort signal.\n */\nasync function attemptFetchDynamicConfigWithRetry(\n  appFields: AppFields,\n  { throttleEndTimeMillis, backoffCount }: ThrottleMetadata,\n  signal: AnalyticsAbortSignal,\n  retryData: RetryData = defaultRetryData // for testing\n): Promise<DynamicConfig | MinimalDynamicConfig> {\n  const { appId, measurementId } = appFields;\n  // Starts with a (potentially zero) timeout to support resumption from stored state.\n  // Ensures the throttle end time is honored if the last attempt timed out.\n  // Note the SDK will never make a request if the fetch timeout expires at this point.\n  try {\n    await setAbortableTimeout(signal, throttleEndTimeMillis);\n  } catch (e) {\n    if (measurementId) {\n      logger.warn(\n        `Timed out fetching this Firebase app's measurement ID from the server.` +\n          ` Falling back to the measurement ID ${measurementId}` +\n          ` provided in the \"measurementId\" field in the local Firebase config. [${e.message}]`\n      );\n      return { appId, measurementId };\n    }\n    throw e;\n  }\n\n  try {\n    const response = await fetchDynamicConfig(appFields);\n\n    // Note the SDK only clears throttle state if response is success or non-retriable.\n    retryData.deleteThrottleMetadata(appId);\n\n    return response;\n  } catch (e) {\n    if (!isRetriableError(e)) {\n      retryData.deleteThrottleMetadata(appId);\n      if (measurementId) {\n        logger.warn(\n          `Failed to fetch this Firebase app's measurement ID from the server.` +\n            ` Falling back to the measurement ID ${measurementId}` +\n            ` provided in the \"measurementId\" field in the local Firebase config. [${e.message}]`\n        );\n        return { appId, measurementId };\n      } else {\n        throw e;\n      }\n    }\n\n    const backoffMillis =\n      Number(e.customData.httpStatus) === 503\n        ? calculateBackoffMillis(\n            backoffCount,\n            retryData.intervalMillis,\n            LONG_RETRY_FACTOR\n          )\n        : calculateBackoffMillis(backoffCount, retryData.intervalMillis);\n\n    // Increments backoff state.\n    const throttleMetadata = {\n      throttleEndTimeMillis: Date.now() + backoffMillis,\n      backoffCount: backoffCount + 1\n    };\n\n    // Persists state.\n    retryData.setThrottleMetadata(appId, throttleMetadata);\n    logger.debug(`Calling attemptFetch again in ${backoffMillis} millis`);\n\n    return attemptFetchDynamicConfigWithRetry(\n      appFields,\n      throttleMetadata,\n      signal,\n      retryData\n    );\n  }\n}\n\n/**\n * Supports waiting on a backoff by:\n *\n * <ul>\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\n *       request appear the same.</li>\n * </ul>\n *\n * <p>Visible for testing.\n */\nfunction setAbortableTimeout(\n  signal: AnalyticsAbortSignal,\n  throttleEndTimeMillis: number\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    // Derives backoff from given end time, normalizing negative numbers to zero.\n    const backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\n\n    const timeout = setTimeout(resolve, backoffMillis);\n\n    // Adds listener, rather than sets onabort, because signal is a shared object.\n    signal.addEventListener(() => {\n      clearTimeout(timeout);\n      // If the request completes before this timeout, the rejection has no effect.\n      reject(\n        ERROR_FACTORY.create(AnalyticsError.FETCH_THROTTLE, {\n          throttleEndTimeMillis\n        })\n      );\n    });\n  });\n}\n\ntype RetriableError = FirebaseError & { customData: { httpStatus: string } };\n\n/**\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\n */\nfunction isRetriableError(e: Error): e is RetriableError {\n  if (!(e instanceof FirebaseError) || !e.customData) {\n    return false;\n  }\n\n  // Uses string index defined by ErrorData, which FirebaseError implements.\n  const httpStatus = Number(e.customData['httpStatus']);\n\n  return (\n    httpStatus === 429 ||\n    httpStatus === 500 ||\n    httpStatus === 503 ||\n    httpStatus === 504\n  );\n}\n\n/**\n * Shims a minimal AbortSignal (copied from Remote Config).\n *\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\n * swapped out if/when we do.\n */\nexport class AnalyticsAbortSignal {\n  listeners: Array<() => void> = [];\n  addEventListener(listener: () => void): void {\n    this.listeners.push(listener);\n  }\n  abort(): void {\n    this.listeners.forEach(listener => listener());\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DynamicConfig,\n  Gtag,\n  MinimalDynamicConfig\n} from '@firebase/analytics-types';\nimport { GtagCommand, GA_FID_KEY, ORIGIN_KEY } from './constants';\nimport { FirebaseInstallations } from '@firebase/installations-types';\nimport { fetchDynamicConfigWithRetry } from './get-config';\nimport { logger } from './logger';\nimport { FirebaseApp } from '@firebase/app-types';\nimport {\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport { ERROR_FACTORY, AnalyticsError } from './errors';\nimport { findGtagScriptOnPage, insertScriptTag } from './helpers';\n\nasync function validateIndexedDB(): Promise<boolean> {\n  if (!isIndexedDBAvailable()) {\n    logger.warn(\n      ERROR_FACTORY.create(AnalyticsError.INDEXEDDB_UNAVAILABLE, {\n        errorInfo: 'IndexedDB is not available in this environment.'\n      }).message\n    );\n    return false;\n  } else {\n    try {\n      await validateIndexedDBOpenable();\n    } catch (e) {\n      logger.warn(\n        ERROR_FACTORY.create(AnalyticsError.INDEXEDDB_UNAVAILABLE, {\n          errorInfo: e\n        }).message\n      );\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Initialize the analytics instance in gtag.js by calling config command with fid.\n *\n * NOTE: We combine analytics initialization and setting fid together because we want fid to be\n * part of the `page_view` event that's sent during the initialization\n * @param app Firebase app\n * @param gtagCore The gtag function that's not wrapped.\n * @param dynamicConfigPromisesList Array of all dynamic config promises.\n * @param measurementIdToAppId Maps measurementID to appID.\n * @param installations FirebaseInstallations instance.\n *\n * @returns Measurement ID.\n */\nexport async function initializeIds(\n  app: FirebaseApp,\n  dynamicConfigPromisesList: Array<\n    Promise<DynamicConfig | MinimalDynamicConfig>\n  >,\n  measurementIdToAppId: { [key: string]: string },\n  installations: FirebaseInstallations,\n  gtagCore: Gtag,\n  dataLayerName: string\n): Promise<string> {\n  const dynamicConfigPromise = fetchDynamicConfigWithRetry(app);\n  // Once fetched, map measurementIds to appId, for ease of lookup in wrapped gtag function.\n  dynamicConfigPromise\n    .then(config => {\n      measurementIdToAppId[config.measurementId] = config.appId;\n      if (\n        app.options.measurementId &&\n        config.measurementId !== app.options.measurementId\n      ) {\n        logger.warn(\n          `The measurement ID in the local Firebase config (${app.options.measurementId})` +\n            ` does not match the measurement ID fetched from the server (${config.measurementId}).` +\n            ` To ensure analytics events are always sent to the correct Analytics property,` +\n            ` update the` +\n            ` measurement ID field in the local config or remove it from the local config.`\n        );\n      }\n    })\n    .catch(e => logger.error(e));\n  // Add to list to track state of all dynamic config promises.\n  dynamicConfigPromisesList.push(dynamicConfigPromise);\n\n  const fidPromise: Promise<string | undefined> = validateIndexedDB().then(\n    envIsValid => {\n      if (envIsValid) {\n        return installations.getId();\n      } else {\n        return undefined;\n      }\n    }\n  );\n\n  const [dynamicConfig, fid] = await Promise.all([\n    dynamicConfigPromise,\n    fidPromise\n  ]);\n\n  // Detect if user has already put the gtag <script> tag on this page.\n  if (!findGtagScriptOnPage()) {\n    insertScriptTag(dataLayerName, dynamicConfig.measurementId);\n  }\n\n  // This command initializes gtag.js and only needs to be called once for the entire web app,\n  // but since it is idempotent, we can call it multiple times.\n  // We keep it together with other initialization logic for better code structure.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  gtagCore('js' as any, new Date());\n\n  const configProperties: { [key: string]: string | boolean } = {\n    // guard against developers accidentally setting properties with prefix `firebase_`\n    [ORIGIN_KEY]: 'firebase',\n    update: true\n  };\n\n  if (fid != null) {\n    configProperties[GA_FID_KEY] = fid;\n  }\n\n  // It should be the first config command called on this GA-ID\n  // Initialize this GA-ID and set FID on it using the gtag config API.\n  // Note: This will trigger a page_view event unless 'send_page_view' is set to false in\n  // `configProperties`.\n  gtagCore(GtagCommand.CONFIG, dynamicConfig.measurementId, configProperties);\n  return dynamicConfig.measurementId;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseAnalytics,\n  Gtag,\n  SettingsOptions,\n  DynamicConfig,\n  MinimalDynamicConfig\n} from '@firebase/analytics-types';\nimport {\n  logEvent,\n  setCurrentScreen,\n  setUserId,\n  setUserProperties,\n  setAnalyticsCollectionEnabled\n} from './functions';\nimport { getOrCreateDataLayer, wrapOrCreateGtag } from './helpers';\nimport { AnalyticsError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from '@firebase/app-types';\nimport { FirebaseInstallations } from '@firebase/installations-types';\nimport { areCookiesEnabled, isBrowserExtension } from '@firebase/util';\nimport { initializeIds } from './initialize-ids';\nimport { logger } from './logger';\nimport { FirebaseService } from '@firebase/app-types/private';\n\ninterface FirebaseAnalyticsInternal\n  extends FirebaseAnalytics,\n    FirebaseService {}\n\n/**\n * Maps appId to full initialization promise. Wrapped gtag calls must wait on\n * all or some of these, depending on the call's `send_to` param and the status\n * of the dynamic config fetches (see below).\n */\nlet initializationPromisesMap: {\n  [appId: string]: Promise<string>; // Promise contains measurement ID string.\n} = {};\n\n/**\n * List of dynamic config fetch promises. In certain cases, wrapped gtag calls\n * wait on all these to be complete in order to determine if it can selectively\n * wait for only certain initialization (FID) promises or if it must wait for all.\n */\nlet dynamicConfigPromisesList: Array<\n  Promise<DynamicConfig | MinimalDynamicConfig>\n> = [];\n\n/**\n * Maps fetched measurementIds to appId. Populated when the app's dynamic config\n * fetch completes. If already populated, gtag config calls can use this to\n * selectively wait for only this app's initialization promise (FID) instead of all\n * initialization promises.\n */\nconst measurementIdToAppId: { [measurementId: string]: string } = {};\n\n/**\n * Name for window global data layer array used by GA: defaults to 'dataLayer'.\n */\nlet dataLayerName: string = 'dataLayer';\n\n/**\n * Name for window global gtag function used by GA: defaults to 'gtag'.\n */\nlet gtagName: string = 'gtag';\n\n/**\n * Reproduction of standard gtag function or reference to existing\n * gtag function on window object.\n */\nlet gtagCoreFunction: Gtag;\n\n/**\n * Wrapper around gtag function that ensures FID is sent with all\n * relevant event and config calls.\n */\nlet wrappedGtagFunction: Gtag;\n\n/**\n * Flag to ensure page initialization steps (creation or wrapping of\n * dataLayer and gtag script) are only run once per page load.\n */\nlet globalInitDone: boolean = false;\n\n/**\n * For testing\n */\nexport function resetGlobalVars(\n  newGlobalInitDone = false,\n  newInitializationPromisesMap = {},\n  newDynamicPromises = []\n): void {\n  globalInitDone = newGlobalInitDone;\n  initializationPromisesMap = newInitializationPromisesMap;\n  dynamicConfigPromisesList = newDynamicPromises;\n  dataLayerName = 'dataLayer';\n  gtagName = 'gtag';\n}\n\n/**\n * For testing\n */\nexport function getGlobalVars(): {\n  initializationPromisesMap: { [appId: string]: Promise<string> };\n  dynamicConfigPromisesList: Array<\n    Promise<DynamicConfig | MinimalDynamicConfig>\n  >;\n} {\n  return {\n    initializationPromisesMap,\n    dynamicConfigPromisesList\n  };\n}\n\n/**\n * This must be run before calling firebase.analytics() or it won't\n * have any effect.\n * @param options Custom gtag and dataLayer names.\n */\nexport function settings(options: SettingsOptions): void {\n  if (globalInitDone) {\n    throw ERROR_FACTORY.create(AnalyticsError.ALREADY_INITIALIZED);\n  }\n  if (options.dataLayerName) {\n    dataLayerName = options.dataLayerName;\n  }\n  if (options.gtagName) {\n    gtagName = options.gtagName;\n  }\n}\n\n/**\n * Returns true if no environment mismatch is found.\n * If environment mismatches are found, throws an INVALID_ANALYTICS_CONTEXT\n * error that also lists details for each mismatch found.\n */\nfunction warnOnBrowserContextMismatch(): void {\n  const mismatchedEnvMessages = [];\n  if (isBrowserExtension()) {\n    mismatchedEnvMessages.push('This is a browser extension environment.');\n  }\n  if (!areCookiesEnabled()) {\n    mismatchedEnvMessages.push('Cookies are not available.');\n  }\n  if (mismatchedEnvMessages.length > 0) {\n    const details = mismatchedEnvMessages\n      .map((message, index) => `(${index + 1}) ${message}`)\n      .join(' ');\n    const err = ERROR_FACTORY.create(AnalyticsError.INVALID_ANALYTICS_CONTEXT, {\n      errorInfo: details\n    });\n    logger.warn(err.message);\n  }\n}\n\nexport function factory(\n  app: FirebaseApp,\n  installations: FirebaseInstallations\n): FirebaseAnalytics {\n  warnOnBrowserContextMismatch();\n  const appId = app.options.appId;\n  if (!appId) {\n    throw ERROR_FACTORY.create(AnalyticsError.NO_APP_ID);\n  }\n  if (!app.options.apiKey) {\n    if (app.options.measurementId) {\n      logger.warn(\n        `The \"apiKey\" field is empty in the local Firebase config. This is needed to fetch the latest` +\n          ` measurement ID for this Firebase app. Falling back to the measurement ID ${app.options.measurementId}` +\n          ` provided in the \"measurementId\" field in the local Firebase config.`\n      );\n    } else {\n      throw ERROR_FACTORY.create(AnalyticsError.NO_API_KEY);\n    }\n  }\n  if (initializationPromisesMap[appId] != null) {\n    throw ERROR_FACTORY.create(AnalyticsError.ALREADY_EXISTS, {\n      id: appId\n    });\n  }\n\n  if (!globalInitDone) {\n    // Steps here should only be done once per page: creation or wrapping\n    // of dataLayer and global gtag function.\n\n    getOrCreateDataLayer(dataLayerName);\n\n    const { wrappedGtag, gtagCore } = wrapOrCreateGtag(\n      initializationPromisesMap,\n      dynamicConfigPromisesList,\n      measurementIdToAppId,\n      dataLayerName,\n      gtagName\n    );\n    wrappedGtagFunction = wrappedGtag;\n    gtagCoreFunction = gtagCore;\n\n    globalInitDone = true;\n  }\n  // Async but non-blocking.\n  // This map reflects the completion state of all promises for each appId.\n  initializationPromisesMap[appId] = initializeIds(\n    app,\n    dynamicConfigPromisesList,\n    measurementIdToAppId,\n    installations,\n    gtagCoreFunction,\n    dataLayerName\n  );\n\n  const analyticsInstance: FirebaseAnalyticsInternal = {\n    app,\n    // Public methods return void for API simplicity and to better match gtag,\n    // while internal implementations return promises.\n    logEvent: (eventName, eventParams, options) => {\n      logEvent(\n        wrappedGtagFunction,\n        initializationPromisesMap[appId],\n        eventName,\n        eventParams,\n        options\n      ).catch(e => logger.error(e));\n    },\n    setCurrentScreen: (screenName, options) => {\n      setCurrentScreen(\n        wrappedGtagFunction,\n        initializationPromisesMap[appId],\n        screenName,\n        options\n      ).catch(e => logger.error(e));\n    },\n    setUserId: (id, options) => {\n      setUserId(\n        wrappedGtagFunction,\n        initializationPromisesMap[appId],\n        id,\n        options\n      ).catch(e => logger.error(e));\n    },\n    setUserProperties: (properties, options) => {\n      setUserProperties(\n        wrappedGtagFunction,\n        initializationPromisesMap[appId],\n        properties,\n        options\n      ).catch(e => logger.error(e));\n    },\n    setAnalyticsCollectionEnabled: enabled => {\n      setAnalyticsCollectionEnabled(\n        initializationPromisesMap[appId],\n        enabled\n      ).catch(e => logger.error(e));\n    },\n    INTERNAL: {\n      delete: (): Promise<void> => {\n        delete initializationPromisesMap[appId];\n        return Promise.resolve();\n      }\n    }\n  };\n\n  return analyticsInstance;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport firebase from '@firebase/app';\nimport { _FirebaseNamespace } from '@firebase/app-types/private';\nimport * as types from '@firebase/functions-types';\nimport { registerFunctions } from './src/config';\n\nimport { name, version } from './package.json';\n\nregisterFunctions(firebase as _FirebaseNamespace, fetch.bind(self));\nfirebase.registerVersion(name, version);\n\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    functions?: {\n      (app?: FirebaseApp): types.FirebaseFunctions;\n      Functions: typeof types.FirebaseFunctions;\n    };\n  }\n  interface FirebaseApp {\n    functions?(regionOrCustomDomain?: string): types.FirebaseFunctions;\n  }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { AuthService } from '../../services/auth.service';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport firebase from 'firebase';\nimport { NotificationsService } from '../../../shared/services/noti.service';\n\n@Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.scss']\n})\nexport class ForgetPasswordComponent implements OnInit {\n\n  email: any = \"\";\n  authError: any = \"\";\n  isSendSuccessfully: boolean = false;\n  constructor(\n    public dialogRef: MatDialogRef<ForgetPasswordComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private auth: AuthService,\n    private angularFireAuth: AngularFireAuth,\n    private notiService: NotificationsService\n  ) { }\n\n  ngOnInit(): void {\n    this.auth.eventAuthError$.subscribe(data => {\n      this.authError = data;\n      console.log(\"err:\" + data)\n    })\n  }\n\n  closeForgetPass() {\n    this.dialogRef.close();\n  }\n\n  sendResetPass() {\n    firebase.auth().languageCode = \"en\";\n    this.auth.resetPassword(this.email).finally(() => {\n      // show noti success and close dialog\n      this.notiService.success(\"Đã gửi email reset mật khẩu!\")\n      this.closeForgetPass();\n    })\n  }\n}\n","<div class=\"forgetPass\">\n    <div class=\"container\">\n        <!-- Close -->\n        <button class=\"closeBtn btn material-icons\" (click)=\"closeForgetPass()\">close</button>\n        <!-- Title -->\n        <h2 class=\"forgetPass__title\">Bạn quên mật khẩu?</h2>\n        <p>Nhập email của bạn để đặt lại mật khẩu</p>\n        <p class=\"error-text\">{{authError?.message}}</p>\n        <div class=\"input__wrapper\">\n            <!-- Icon -->\n            <span class=\"material-icons\">\n                mail\n            </span>\n            <input type=\"email\" class=\"email\" name=\"email\" required placeholder=\"Email của bạn\" [(ngModel)]=email>\n        </div>\n        <button type=\"button\" class=\"sendBtn btn\" (click)=\"sendResetPass()\">Gửi</button>\n    </div>\n</div>","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { jsonEval, stringify } from '@firebase/util';\n\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n */\nexport class DOMStorageWrapper {\n  // Use a prefix to avoid collisions with other stuff saved by the app.\n  private prefix_ = 'firebase:';\n\n  /**\n   * @param domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\n   */\n  constructor(private domStorage_: Storage) {}\n\n  /**\n   * @param key The key to save the value under\n   * @param value The value being stored, or null to remove the key.\n   */\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  }\n\n  /**\n   * @return The value that was stored under this key, or null\n   */\n  get(key: string): unknown {\n    const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  }\n\n  remove(key: string) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  }\n\n  isInMemoryStorage: boolean;\n\n  prefixedName_(name: string): string {\n    return this.prefix_ + name;\n  }\n\n  toString(): string {\n    return this.domStorage_.toString();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n */\nexport class MemoryStorage {\n  private cache_: { [k: string]: unknown } = {};\n\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  }\n\n  get(key: string): unknown {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n    return null;\n  }\n\n  remove(key: string) {\n    delete this.cache_[key];\n  }\n\n  isInMemoryStorage = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMStorageWrapper } from './DOMStorageWrapper';\nimport { MemoryStorage } from './MemoryStorage';\n\ndeclare const window: Window;\n\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param domStorageName Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @return Turning off type information until a common interface is defined.\n */\nconst createStoragefor = function (\n  domStorageName: string\n): DOMStorageWrapper | MemoryStorage {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window[domStorageName] !== 'undefined'\n    ) {\n      // Need to test cache. Just because it's here doesn't mean it works\n      const domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {}\n\n  // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n  return new MemoryStorage();\n};\n\n/** A storage object that lasts across sessions */\nexport const PersistentStorage = createStoragefor('localStorage');\n\n/** A storage object that only lasts one session */\nexport const SessionStorage = createStoragefor('sessionStorage');\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Query } from '../../api/Query';\nimport {\n  assert,\n  base64,\n  Sha1,\n  stringToByteArray,\n  stringify,\n  isNodeSdk\n} from '@firebase/util';\nimport { SessionStorage } from '../storage/storage';\nimport { Logger, LogLevel } from '@firebase/logger';\n\ndeclare const window: Window;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const Windows: any;\n\nconst logClient = new Logger('@firebase/database');\n\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n */\nexport const LUIDGenerator: () => number = (function () {\n  let id = 1;\n  return function () {\n    return id++;\n  };\n})();\n\n/**\n * Sha1 hash of the input string\n * @param str The string to hash\n * @return {!string} The resulting hash\n */\nexport const sha1 = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  const sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  const sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nconst buildLogMessage_ = function (...varArgs: unknown[]): string {\n  let message = '';\n  for (let i = 0; i < varArgs.length; i++) {\n    const arg = varArgs[i];\n    if (\n      Array.isArray(arg) ||\n      (arg &&\n        typeof arg === 'object' &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof (arg as any).length === 'number')\n    ) {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n    message += ' ';\n  }\n\n  return message;\n};\n\n/**\n * Use this for all debug messages in Firebase.\n */\nexport let logger: ((a: string) => void) | null = null;\n\n/**\n * Flag to check for log availability on first log message\n */\nlet firstLog_ = true;\n\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param logger_ A flag to turn on logging, or a custom logger\n * @param persistent Whether or not to persist logging settings across refreshes\n */\nexport const enableLogging = function (\n  logger_?: boolean | ((a: string) => void) | null,\n  persistent?: boolean\n) {\n  assert(\n    !persistent || logger_ === true || logger_ === false,\n    \"Can't turn on custom loggers persistently.\"\n  );\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nexport const log = function (...varArgs: unknown[]) {\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    const message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nexport const logWrapper = function (\n  prefix: string\n): (...varArgs: unknown[]) => void {\n  return function (...varArgs: unknown[]) {\n    log(prefix, ...varArgs);\n  };\n};\n\nexport const error = function (...varArgs: string[]) {\n  const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\n  logClient.error(message);\n};\n\nexport const fatal = function (...varArgs: string[]) {\n  const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\n  logClient.error(message);\n  throw new Error(message);\n};\n\nexport const warn = function (...varArgs: unknown[]) {\n  const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\n  logClient.warn(message);\n};\n\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexport const warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (\n    typeof window !== 'undefined' &&\n    window.location &&\n    window.location.protocol &&\n    window.location.protocol.indexOf('https:') !== -1\n  ) {\n    warn(\n      'Insecure Firebase access from a secure page. ' +\n        'Please use https in calls to new Firebase().'\n    );\n  }\n};\n\nexport const warnAboutUnsupportedMethod = function (methodName: string) {\n  warn(\n    methodName +\n      ' is unsupported and will likely change soon.  ' +\n      'Please do not use.'\n  );\n};\n\n/**\n * Returns true if data is NaN, or +/- Infinity.\n */\nexport const isInvalidJSONNumber = function (data: unknown): boolean {\n  return (\n    typeof data === 'number' &&\n    (data !== data || // NaN\n      data === Number.POSITIVE_INFINITY ||\n      data === Number.NEGATIVE_INFINITY)\n  );\n};\n\nexport const executeWhenDOMReady = function (fn: () => void) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n\n    let called = false;\n    const wrappedFn = function () {\n      if (!document.body) {\n        setTimeout(wrappedFn, Math.floor(10));\n        return;\n      }\n\n      if (!called) {\n        called = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn, false);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((document as any).attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (document as any).attachEvent('onreadystatechange', () => {\n        if (document.readyState === 'complete') {\n          wrappedFn();\n        }\n      });\n      // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (window as any).attachEvent('onload', wrappedFn);\n\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n */\nexport const MIN_NAME = '[MIN_NAME]';\n\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n */\nexport const MAX_NAME = '[MAX_NAME]';\n\n/**\n * Compares valid Firebase key names, plus min and max name\n */\nexport const nameCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    const aAsInt = tryParseInt(a),\n      bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n\n/**\n * @return {!number} comparison result.\n */\nexport const stringCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nexport const requireKey = function (\n  key: string,\n  obj: { [k: string]: unknown }\n): unknown {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error(\n      'Missing required key (' + key + ') in object: ' + stringify(obj)\n    );\n  }\n};\n\nexport const ObjectToUniqueKey = function (obj: unknown): string {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  const keys = [];\n  // eslint-disable-next-line guard-for-in\n  for (const k in obj) {\n    keys.push(k);\n  }\n\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  let key = '{';\n  for (let i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param str The string\n * @param segsize The maximum number of chars in the string.\n * @return The string, split into appropriately-sized chunks\n */\nexport const splitStringBySize = function (\n  str: string,\n  segsize: number\n): string[] {\n  const len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  const dataSegs = [];\n  for (let c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param obj The object or array to iterate over\n * @param fn The function to apply\n */\nexport function each(obj: object, fn: (k: string, v: unknown) => void) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param callback Callback function.\n * @param context Optional context to bind to.\n *\n */\nexport const bindCallback = function (\n  callback: (a: unknown) => void,\n  context?: object | null\n): (a: unknown) => void {\n  return context ? callback.bind(context) : callback;\n};\n\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param v A double\n *\n */\nexport const doubleToIEEE754String = function (v: number): string {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  const ebits = 11,\n    fbits = 52;\n  const bias = (1 << (ebits - 1)) - 1;\n  let s, e, f, ln, i;\n\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  const bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  const str = bits.join('');\n\n  // Return the data as a hex string. --MJL\n  let hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n */\nexport const isChromeExtensionContentScript = function (): boolean {\n  return !!(\n    typeof window === 'object' &&\n    window['chrome'] &&\n    window['chrome']['extension'] &&\n    !/^chrome/.test(window.location.href)\n  );\n};\n\n/**\n * Used to detect if we're in a Windows 8 Store app.\n */\nexport const isWindowsStoreApp = function (): boolean {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n\n/**\n * Converts a server error code to a Javascript Error\n */\nexport const errorForServerCode = function (code: string, query: Query): Error {\n  let reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason =\n      'The data requested exceeds the maximum size ' +\n      'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  const error = new Error(\n    code + ' at ' + query.path.toString() + ': ' + reason\n  );\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (error as any).code = code.toUpperCase();\n  return error;\n};\n\n/**\n * Used to test for integer-looking strings\n */\nexport const INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n\n/**\n * For use in keys, the minimum possible 32-bit integer.\n */\nexport const INTEGER_32_MIN = -2147483648;\n\n/**\n * For use in kyes, the maximum possible 32-bit integer.\n */\nexport const INTEGER_32_MAX = 2147483647;\n\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n */\nexport const tryParseInt = function (str: string): number | null {\n  if (INTEGER_REGEXP_.test(str)) {\n    const intVal = Number(str);\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param fn The code to guard.\n */\nexport const exceptionGuard = function (fn: () => void) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(() => {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      const stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param callback Optional onComplete callback.\n * @param varArgs Arbitrary args to be passed to opt_onComplete\n */\nexport const callUserCallback = function (\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback?: Function | null,\n  ...varArgs: unknown[]\n) {\n  if (typeof callback === 'function') {\n    exceptionGuard(() => {\n      callback(...varArgs);\n    });\n  }\n};\n\n/**\n * @return {boolean} true if we think we're currently being crawled.\n */\nexport const beingCrawled = function (): boolean {\n  const userAgent =\n    (typeof window === 'object' &&\n      window['navigator'] &&\n      window['navigator']['userAgent']) ||\n    '';\n\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return (\n    userAgent.search(\n      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i\n    ) >= 0\n  );\n};\n\n/**\n * Export a property of an object using a getter function.\n */\nexport const exportPropGetter = function (\n  object: object,\n  name: string,\n  fnGet: () => unknown\n) {\n  Object.defineProperty(object, name, { get: fnGet });\n};\n\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param fn Function to run.\n * @param time Milliseconds to wait before running.\n * @return The setTimeout() return value.\n */\nexport const setTimeoutNonBlocking = function (\n  fn: () => void,\n  time: number\n): number | object {\n  const timeout: number | object = setTimeout(fn, time);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if (typeof timeout === 'object' && (timeout as any)['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (timeout as any)['unref']();\n  }\n  return timeout;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from './util';\nimport { stringLength } from '@firebase/util';\n\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\n\nexport class Path {\n  pieces_: string[];\n  pieceNum_: number;\n\n  /**\n   * @param pathOrString Path string to parse, or another path, or the raw\n   * tokens array\n   */\n  constructor(pathOrString: string | string[], pieceNum?: number) {\n    if (pieceNum === void 0) {\n      this.pieces_ = (pathOrString as string).split('/');\n\n      // Remove empty pieces.\n      let copyTo = 0;\n      for (let i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n      this.pieces_.length = copyTo;\n\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString as string[];\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  toString(): string {\n    let pathString = '';\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  }\n}\n\nexport function newEmptyPath(): Path {\n  return new Path('');\n}\n\nexport function pathGetFront(path: Path): string | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n\n/**\n * @return The number of segments in this path\n */\nexport function pathGetLength(path: Path): number {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nexport function pathPopFront(path: Path): Path {\n  let pieceNum = path.pieceNum_;\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n  return new Path(path.pieces_, pieceNum);\n}\n\nexport function pathGetBack(path: Path): string | null {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nexport function pathToUrlEncodedString(path: Path): string {\n  let pathString = '';\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n\n/**\n * Shallow copy of the parts of the path.\n *\n */\nexport function pathSlice(path: Path, begin: number = 0): string[] {\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nexport function pathParent(path: Path): Path | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nexport function pathChild(path: Path, childPathObj: string | Path): Path {\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    const childPieces = childPathObj.split('/');\n    for (let i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n\n/**\n * @return True if there are no segments in this path\n */\nexport function pathIsEmpty(path: Path): boolean {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n\n/**\n * @return The path from outerPath to innerPath\n */\nexport function newRelativePath(outerPath: Path, innerPath: Path): Path {\n  const outer = pathGetFront(outerPath),\n    inner = pathGetFront(innerPath);\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error(\n      'INTERNAL ERROR: innerPath (' +\n        innerPath +\n        ') is not within ' +\n        'outerPath (' +\n        outerPath +\n        ')'\n    );\n  }\n}\n\n/**\n * @return -1, 0, 1 if left is less, equal, or greater than the right.\n */\nexport function pathCompare(left: Path, right: Path): number {\n  const leftKeys = pathSlice(left, 0);\n  const rightKeys = pathSlice(right, 0);\n  for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    const cmp = nameCompare(leftKeys[i], rightKeys[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n\n/**\n * @return true if paths are the same.\n */\nexport function pathEquals(path: Path, other: Path): boolean {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (\n    let i = path.pieceNum_, j = other.pieceNum_;\n    i <= path.pieces_.length;\n    i++, j++\n  ) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @return True if this path is a parent (or the same as) other\n */\nexport function pathContains(path: Path, other: Path): boolean {\n  let i = path.pieceNum_;\n  let j = other.pieceNum_;\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n    ++i;\n    ++j;\n  }\n  return true;\n}\n\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nexport class ValidationPath {\n  private parts_: string[];\n  /** Initialize to number of '/' chars needed in path. */\n  private byteLength_: number;\n\n  /**\n   * @param path Initial Path.\n   * @param errorPrefix_ Prefix for any error messages.\n   */\n  constructor(path: Path, private errorPrefix_: string) {\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (let i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n    this.checkValid_();\n  }\n\n  /** @const {number} Maximum key depth. */\n  static get MAX_PATH_DEPTH() {\n    return 32;\n  }\n\n  /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\n  static get MAX_PATH_LENGTH_BYTES() {\n    return 768;\n  }\n\n  /** @param child */\n  push(child: string) {\n    // Count the needed '/'\n    if (this.parts_.length > 0) {\n      this.byteLength_ += 1;\n    }\n    this.parts_.push(child);\n    this.byteLength_ += stringLength(child);\n    this.checkValid_();\n  }\n\n  pop() {\n    const last = this.parts_.pop();\n    this.byteLength_ -= stringLength(last);\n    // Un-count the previous '/'\n    if (this.parts_.length > 0) {\n      this.byteLength_ -= 1;\n    }\n  }\n\n  private checkValid_() {\n    if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\n      throw new Error(\n        this.errorPrefix_ +\n          'has a key path longer than ' +\n          ValidationPath.MAX_PATH_LENGTH_BYTES +\n          ' bytes (' +\n          this.byteLength_ +\n          ').'\n      );\n    }\n    if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\n      throw new Error(\n        this.errorPrefix_ +\n          'path specified exceeds the maximum depth that can be written (' +\n          ValidationPath.MAX_PATH_DEPTH +\n          ') or object contains a cycle ' +\n          this.toErrorString()\n      );\n    }\n  }\n\n  /**\n   * String for use in error messages - uses '.' notation for path.\n   */\n  toErrorString(): string {\n    if (this.parts_.length === 0) {\n      return '';\n    }\n    return \"in property '\" + this.parts_.join('.') + \"'\";\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PROTOCOL_VERSION = '5';\n\nexport const VERSION_PARAM = 'v';\n\nexport const TRANSPORT_SESSION_PARAM = 's';\n\nexport const REFERER_PARAM = 'r';\n\nexport const FORGE_REF = 'f';\n\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\nexport const FORGE_DOMAIN_RE = /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\n\nexport const LAST_SESSION_PARAM = 'ls';\n\nexport const APPLICATION_ID_PARAM = 'p';\n\nexport const WEBSOCKET = 'websocket';\n\nexport const LONG_POLLING = 'long_polling';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\nimport { PersistentStorage } from './storage/storage';\nimport { LONG_POLLING, WEBSOCKET } from '../realtime/Constants';\nimport { each } from './util/util';\n\n/**\n * A class that holds metadata about a Repo object\n */\nexport class RepoInfo {\n  host: string;\n  domain: string;\n  internalHost: string;\n\n  /**\n   * @param host Hostname portion of the url for the repo\n   * @param secure Whether or not this repo is accessed over ssl\n   * @param namespace The namespace represented by the repo\n   * @param webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\n   * @param nodeAdmin Whether this instance uses Admin SDK credentials\n   * @param persistenceKey Override the default session persistence storage key\n   */\n  constructor(\n    host: string,\n    public readonly secure: boolean,\n    public readonly namespace: string,\n    public readonly webSocketOnly: boolean,\n    public readonly nodeAdmin: boolean = false,\n    public readonly persistenceKey: string = '',\n    public readonly includeNamespaceInQueryParams: boolean = false\n  ) {\n    this.host = host.toLowerCase();\n    this.domain = this.host.substr(this.host.indexOf('.') + 1);\n    this.internalHost =\n      (PersistentStorage.get('host:' + host) as string) || this.host;\n  }\n\n  needsQueryParam(): boolean {\n    return (\n      this.host !== this.internalHost ||\n      this.isCustomHost() ||\n      this.includeNamespaceInQueryParams\n    );\n  }\n\n  isCacheableHost(): boolean {\n    return this.internalHost.substr(0, 2) === 's-';\n  }\n\n  isDemoHost() {\n    return this.domain === 'firebaseio-demo.com';\n  }\n\n  isCustomHost() {\n    return (\n      this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com'\n    );\n  }\n\n  updateHost(newHost: string) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this.host, this.internalHost);\n      }\n    }\n  }\n\n  /**\n   * Returns the websocket URL for this repo\n   * @param type of connection\n   * @param params list\n   * @return The URL for this repo\n   */\n  connectionURL(type: string, params: { [k: string]: string }): string {\n    assert(typeof type === 'string', 'typeof type must == string');\n    assert(typeof params === 'object', 'typeof params must == object');\n\n    let connURL: string;\n    if (type === WEBSOCKET) {\n      connURL =\n        (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\n    } else if (type === LONG_POLLING) {\n      connURL =\n        (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\n    } else {\n      throw new Error('Unknown connection type: ' + type);\n    }\n    if (this.needsQueryParam()) {\n      params['ns'] = this.namespace;\n    }\n\n    const pairs: string[] = [];\n\n    each(params, (key: string, value: string) => {\n      pairs.push(key + '=' + value);\n    });\n\n    return connURL + pairs.join('&');\n  }\n\n  /** @return {string} */\n  toString(): string {\n    let str = this.toURLString();\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n    return str;\n  }\n\n  /** @return {string} */\n  toURLString(): string {\n    const protocol = this.secure ? 'https://' : 'http://';\n    const query = this.includeNamespaceInQueryParams\n      ? `?ns=${this.namespace}`\n      : '';\n    return `${protocol}${this.host}/${query}`;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../Path';\nimport { RepoInfo } from '../../RepoInfo';\nimport { warnIfPageIsSecure, warn, fatal } from '../util';\n\nfunction decodePath(pathString: string): string {\n  let pathStringDecoded = '';\n  const pieces = pathString.split('/');\n  for (let i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      let piece = pieces[i];\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n      pathStringDecoded += '/' + piece;\n    }\n  }\n  return pathStringDecoded;\n}\n\n/**\n * @return key value hash\n */\nfunction decodeQuery(queryString: string): { [key: string]: string } {\n  const results = {};\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n  for (const segment of queryString.split('&')) {\n    if (segment.length === 0) {\n      continue;\n    }\n    const kv = segment.split('=');\n    if (kv.length === 2) {\n      results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n    } else {\n      warn(`Invalid query segment '${segment}' in query '${queryString}'`);\n    }\n  }\n  return results;\n}\n\nexport const parseRepoInfo = function (\n  dataURL: string,\n  nodeAdmin: boolean\n): { repoInfo: RepoInfo; path: Path } {\n  const parsedUrl = parseDatabaseURL(dataURL),\n    namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(\n      parsedUrl.host +\n        ' is no longer supported. ' +\n        'Please use <YOUR FIREBASE>.firebaseio.com instead'\n    );\n  }\n\n  // Catch common error of uninitialized namespace value.\n  if (\n    (!namespace || namespace === 'undefined') &&\n    parsedUrl.domain !== 'localhost'\n  ) {\n    fatal(\n      'Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com'\n    );\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n\n  return {\n    repoInfo: new RepoInfo(\n      parsedUrl.host,\n      parsedUrl.secure,\n      namespace,\n      nodeAdmin,\n      webSocketOnly,\n      /*persistenceKey=*/ '',\n      /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain\n    ),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nexport const parseDatabaseURL = function (\n  dataURL: string\n): {\n  host: string;\n  port: number;\n  domain: string;\n  subdomain: string;\n  secure: boolean;\n  scheme: string;\n  pathString: string;\n  namespace: string;\n} {\n  // Default to empty strings in the event of a malformed string.\n  let host = '',\n    domain = '',\n    subdomain = '',\n    pathString = '',\n    namespace = '';\n\n  // Always default to SSL, unless otherwise specified.\n  let secure = true,\n    scheme = 'https',\n    port = 443;\n\n  // Don't do any validation here. The caller is responsible for validating the result of parsing.\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    let colonInd = dataURL.indexOf('//');\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    }\n\n    // Parse host, path, and query string.\n    let slashInd = dataURL.indexOf('/');\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n    let questionMarkInd = dataURL.indexOf('?');\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n    const queryParams = decodeQuery(\n      dataURL.substring(Math.min(dataURL.length, questionMarkInd))\n    );\n\n    // If we have a port, use scheme for determining if it's secure.\n    colonInd = host.indexOf(':');\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    const hostWithoutPort = host.slice(0, colonInd);\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      const dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1);\n      // Normalize namespaces to lowercase to share storage / connection.\n      namespace = subdomain;\n    }\n    // Always treat the value of the `ns` as the namespace name if it is present.\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host,\n    port,\n    domain,\n    subdomain,\n    secure,\n    scheme,\n    pathString,\n    namespace\n  };\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Path,\n  pathChild,\n  pathCompare,\n  pathContains,\n  pathGetBack,\n  pathGetFront,\n  pathSlice,\n  ValidationPath\n} from './Path';\nimport {\n  contains,\n  errorPrefix as errorPrefixFxn,\n  safeGet,\n  stringLength\n} from '@firebase/util';\nimport { each, isInvalidJSONNumber } from './util';\n\nimport { RepoInfo } from '../RepoInfo';\n\n/**\n * True for invalid Firebase keys\n */\nexport const INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n */\nexport const INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n\n/**\n * Maximum number of characters to allow in leaf value\n */\nexport const MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nexport const isValidKey = function (key: unknown): boolean {\n  return (\n    typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key)\n  );\n};\n\nexport const isValidPathString = function (pathString: string): boolean {\n  return (\n    typeof pathString === 'string' &&\n    pathString.length !== 0 &&\n    !INVALID_PATH_REGEX_.test(pathString)\n  );\n};\n\nexport const isValidRootPathString = function (pathString: string): boolean {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nexport const isValidPriority = function (priority: unknown): boolean {\n  return (\n    priority === null ||\n    typeof priority === 'string' ||\n    (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\n    (priority &&\n      typeof priority === 'object' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      contains(priority as any, '.sv'))\n  );\n};\n\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n */\nexport const validateFirebaseDataArg = function (\n  fnName: string,\n  argumentNumber: number,\n  data: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  validateFirebaseData(\n    errorPrefixFxn(fnName, argumentNumber, optional),\n    data,\n    path\n  );\n};\n\n/**\n * Validate a data object client-side before sending to server.\n */\nexport const validateFirebaseData = function (\n  errorPrefix: string,\n  data: unknown,\n  path_: Path | ValidationPath\n) {\n  const path =\n    path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\n  }\n  if (typeof data === 'function') {\n    throw new Error(\n      errorPrefix +\n        'contains a function ' +\n        path.toErrorString() +\n        ' with contents = ' +\n        data.toString()\n    );\n  }\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(\n      errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString()\n    );\n  }\n\n  // Check max leaf size, but try to avoid the utf8 conversion if we can.\n  if (\n    typeof data === 'string' &&\n    data.length > MAX_LEAF_SIZE_ / 3 &&\n    stringLength(data) > MAX_LEAF_SIZE_\n  ) {\n    throw new Error(\n      errorPrefix +\n        'contains a string greater than ' +\n        MAX_LEAF_SIZE_ +\n        ' utf8 bytes ' +\n        path.toErrorString() +\n        \" ('\" +\n        data.substring(0, 50) +\n        \"...')\"\n    );\n  }\n\n  // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n  if (data && typeof data === 'object') {\n    let hasDotValue = false;\n    let hasActualChild = false;\n    each(data, (key: string, value: unknown) => {\n      if (key === '.value') {\n        hasDotValue = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild = true;\n        if (!isValidKey(key)) {\n          throw new Error(\n            errorPrefix +\n              ' contains an invalid key (' +\n              key +\n              ') ' +\n              path.toErrorString() +\n              '.  Keys must be non-empty strings ' +\n              'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n          );\n        }\n      }\n\n      path.push(key);\n      validateFirebaseData(errorPrefix, value, path);\n      path.pop();\n    });\n\n    if (hasDotValue && hasActualChild) {\n      throw new Error(\n        errorPrefix +\n          ' contains \".value\" child ' +\n          path.toErrorString() +\n          ' in addition to actual children.'\n      );\n    }\n  }\n};\n\n/**\n * Pre-validate paths passed in the firebase function.\n */\nexport const validateFirebaseMergePaths = function (\n  errorPrefix: string,\n  mergePaths: Path[]\n) {\n  let i, curPath: Path;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    const keys = pathSlice(curPath);\n    for (let j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) {\n        // .priority is OK\n      } else if (!isValidKey(keys[j])) {\n        throw new Error(\n          errorPrefix +\n            'contains an invalid key (' +\n            keys[j] +\n            ') in path ' +\n            curPath.toString() +\n            '. Keys must be non-empty strings ' +\n            'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n        );\n      }\n    }\n  }\n\n  // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n  mergePaths.sort(pathCompare);\n  let prevPath: Path | null = null;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(\n        errorPrefix +\n          'contains a path ' +\n          prevPath.toString() +\n          ' that is ancestor of another path ' +\n          curPath.toString()\n      );\n    }\n    prevPath = curPath;\n  }\n};\n\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n */\nexport const validateFirebaseMergeDataArg = function (\n  fnName: string,\n  argumentNumber: number,\n  data: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  const errorPrefix = errorPrefixFxn(fnName, argumentNumber, optional);\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(\n      errorPrefix + ' must be an object containing the children to replace.'\n    );\n  }\n\n  const mergePaths: Path[] = [];\n  each(data, (key: string, value: unknown) => {\n    const curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, pathChild(path, curPath));\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(\n          errorPrefix +\n            \"contains an invalid value for '\" +\n            curPath.toString() +\n            \"', which must be a valid \" +\n            'Firebase priority (a string, finite number, server value, or null).'\n        );\n      }\n    }\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nexport const validatePriority = function (\n  fnName: string,\n  argumentNumber: number,\n  priority: unknown,\n  optional: boolean\n) {\n  if (optional && priority === undefined) {\n    return;\n  }\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n        'is ' +\n        priority.toString() +\n        ', but must be a valid Firebase priority (a string, finite number, ' +\n        'server value, or null).'\n    );\n  }\n  // Special case to allow importing data with a .sv.\n  if (!isValidPriority(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n        'must be a valid Firebase priority ' +\n        '(a string, finite number, server value, or null).'\n    );\n  }\n};\n\nexport const validateEventType = function (\n  fnName: string,\n  argumentNumber: number,\n  eventType: string,\n  optional: boolean\n) {\n  if (optional && eventType === undefined) {\n    return;\n  }\n\n  switch (eventType) {\n    case 'value':\n    case 'child_added':\n    case 'child_removed':\n    case 'child_changed':\n    case 'child_moved':\n      break;\n    default:\n      throw new Error(\n        errorPrefixFxn(fnName, argumentNumber, optional) +\n          'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\n          '\"child_changed\", or \"child_moved\".'\n      );\n  }\n};\n\nexport const validateKey = function (\n  fnName: string,\n  argumentNumber: number,\n  key: string,\n  optional: boolean\n) {\n  if (optional && key === undefined) {\n    return;\n  }\n  if (!isValidKey(key)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n        'was an invalid key = \"' +\n        key +\n        '\".  Firebase keys must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").'\n    );\n  }\n};\n\nexport const validatePathString = function (\n  fnName: string,\n  argumentNumber: number,\n  pathString: string,\n  optional: boolean\n) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n        'was an invalid path = \"' +\n        pathString +\n        '\". Paths must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"'\n    );\n  }\n};\n\nexport const validateRootPathString = function (\n  fnName: string,\n  argumentNumber: number,\n  pathString: string,\n  optional: boolean\n) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentNumber, pathString, optional);\n};\n\nexport const validateWritablePath = function (fnName: string, path: Path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nexport const validateUrl = function (\n  fnName: string,\n  argumentNumber: number,\n  parsedUrl: { repoInfo: RepoInfo; path: Path }\n) {\n  // TODO = Validate server better.\n  const pathString = parsedUrl.path.toString();\n  if (\n    !(typeof parsedUrl.repoInfo.host === 'string') ||\n    parsedUrl.repoInfo.host.length === 0 ||\n    (!isValidKey(parsedUrl.repoInfo.namespace) &&\n      parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\n    (pathString.length !== 0 && !isValidRootPathString(pathString))\n  ) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, false) +\n        'must be a valid firebase URL and ' +\n        'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".'\n    );\n  }\n};\n\nexport const validateCredential = function (\n  fnName: string,\n  argumentNumber: number,\n  cred: unknown,\n  optional: boolean\n) {\n  if (optional && cred === undefined) {\n    return;\n  }\n  if (!(typeof cred === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n        'must be a valid credential (a string).'\n    );\n  }\n};\n\nexport const validateBoolean = function (\n  fnName: string,\n  argumentNumber: number,\n  bool: unknown,\n  optional: boolean\n) {\n  if (optional && bool === undefined) {\n    return;\n  }\n  if (typeof bool !== 'boolean') {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) + 'must be a boolean.'\n    );\n  }\n};\n\nexport const validateString = function (\n  fnName: string,\n  argumentNumber: number,\n  string: unknown,\n  optional: boolean\n) {\n  if (optional && string === undefined) {\n    return;\n  }\n  if (!(typeof string === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n        'must be a valid string.'\n    );\n  }\n};\n\nexport const validateObject = function (\n  fnName: string,\n  argumentNumber: number,\n  obj: unknown,\n  optional: boolean\n) {\n  if (optional && obj === undefined) {\n    return;\n  }\n  if (!(obj && typeof obj === 'object') || obj === null) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n        'must be a valid object.'\n    );\n  }\n};\n\nexport const validateObjectContainsKey = function (\n  fnName: string,\n  argumentNumber: number,\n  obj: unknown,\n  key: string,\n  optional: boolean,\n  optType?: string\n) {\n  const objectContainsKey =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    obj && typeof obj === 'object' && contains(obj as any, key);\n\n  if (!objectContainsKey) {\n    if (optional) {\n      return;\n    } else {\n      throw new Error(\n        errorPrefixFxn(fnName, argumentNumber, optional) +\n          'must contain the key \"' +\n          key +\n          '\"'\n      );\n    }\n  }\n\n  if (optType) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const val = safeGet(obj as any, key);\n    if (\n      (optType === 'number' && !(typeof val === 'number')) ||\n      (optType === 'string' && !(typeof val === 'string')) ||\n      (optType === 'boolean' && !(typeof val === 'boolean')) ||\n      (optType === 'function' && !(typeof val === 'function')) ||\n      (optType === 'object' && !(typeof val === 'object') && val)\n    ) {\n      if (optional) {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentNumber, optional) +\n            'contains invalid value for key \"' +\n            key +\n            '\" (must be of type \"' +\n            optType +\n            '\")'\n        );\n      } else {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentNumber, optional) +\n            'must contain the key \"' +\n            key +\n            '\" with type \"' +\n            optType +\n            '\"'\n        );\n      }\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { validateArgCount, validateCallback, Deferred } from '@firebase/util';\nimport {\n  validateWritablePath,\n  validateFirebaseDataArg,\n  validatePriority,\n  validateFirebaseMergeDataArg\n} from '../core/util/validation';\nimport { warn } from '../core/util/util';\n\nimport { Repo } from '../core/Repo';\nimport { Path } from '../core/util/Path';\nimport { Indexable } from '../core/util/misc';\n\nexport class OnDisconnect {\n  constructor(private repo_: Repo, private path_: Path) {}\n\n  cancel(onComplete?: (a: Error | null) => void): Promise<void> {\n    validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\n    validateCallback('OnDisconnect.cancel', 1, onComplete, true);\n    const deferred = new Deferred<void>();\n    this.repo_.onDisconnectCancel(\n      this.path_,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  remove(onComplete?: (a: Error | null) => void): Promise<void> {\n    validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\n    validateWritablePath('OnDisconnect.remove', this.path_);\n    validateCallback('OnDisconnect.remove', 1, onComplete, true);\n    const deferred = new Deferred<void>();\n    this.repo_.onDisconnectSet(\n      this.path_,\n      null,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  set(value: unknown, onComplete?: (a: Error | null) => void): Promise<void> {\n    validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.set', this.path_);\n    validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\n    validateCallback('OnDisconnect.set', 2, onComplete, true);\n    const deferred = new Deferred<void>();\n    this.repo_.onDisconnectSet(\n      this.path_,\n      value,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  setWithPriority(\n    value: unknown,\n    priority: number | string | null,\n    onComplete?: (a: Error | null) => void\n  ): Promise<void> {\n    validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n    validateWritablePath('OnDisconnect.setWithPriority', this.path_);\n    validateFirebaseDataArg(\n      'OnDisconnect.setWithPriority',\n      1,\n      value,\n      this.path_,\n      false\n    );\n    validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\n    validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\n\n    const deferred = new Deferred<void>();\n    this.repo_.onDisconnectSetWithPriority(\n      this.path_,\n      value,\n      priority,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  update(\n    objectToMerge: Indexable,\n    onComplete?: (a: Error | null) => void\n  ): Promise<void> {\n    validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.update', this.path_);\n    if (Array.isArray(objectToMerge)) {\n      const newObjectToMerge: { [k: string]: unknown } = {};\n      for (let i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n      objectToMerge = newObjectToMerge;\n      warn(\n        'Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\n          'existing data, or an Object with integer keys if you really do want to only update some of the children.'\n      );\n    }\n    validateFirebaseMergeDataArg(\n      'OnDisconnect.update',\n      1,\n      objectToMerge,\n      this.path_,\n      false\n    );\n    validateCallback('OnDisconnect.update', 2, onComplete, true);\n    const deferred = new Deferred<void>();\n    this.repo_.onDisconnectUpdate(\n      this.path_,\n      objectToMerge,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataSnapshot } from './DataSnapshot';\nimport { validateArgCount } from '@firebase/util';\n\nexport class TransactionResult {\n  /**\n   * A type for the resolve value of Firebase.transaction.\n   */\n  constructor(public committed: boolean, public snapshot: DataSnapshot) {}\n\n  // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n  toJSON(): object {\n    validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\n    return { committed: this.committed, snapshot: this.snapshot.toJSON() };\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\nimport {\n  tryParseInt,\n  MAX_NAME,\n  MIN_NAME,\n  INTEGER_32_MIN,\n  INTEGER_32_MAX\n} from '../util/util';\n\n// Modeled after base64 web-safe chars, but ordered by ASCII.\nconst PUSH_CHARS =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nconst MIN_PUSH_CHAR = '-';\n\nconst MAX_PUSH_CHAR = 'z';\n\nconst MAX_KEY_LEN = 786;\n\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nexport const nextPushId = (function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  let lastPushTime = 0;\n\n  // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n  const lastRandChars: number[] = [];\n\n  return function (now: number) {\n    const duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n\n    let i;\n    const timeStampChars = new Array(8);\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n      now = Math.floor(now / 64);\n    }\n    assert(now === 0, 'Cannot push at time == 0');\n\n    let id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n      lastRandChars[i]++;\n    }\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n\n    return id;\n  };\n})();\n\nexport const successor = function (key: string) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n  const next = new Array(key.length);\n\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  let i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  }\n\n  // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  const source = next[i];\n  const sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n\n  return next.slice(0, i + 1).join('');\n};\n\n// `key` is assumed to be non-empty.\nexport const predecessor = function (key: string) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n  const next = new Array(key.length);\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n  // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n    delete next[next.length - 1];\n    return next.join('');\n  }\n  // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n  next[next.length - 1] = PUSH_CHARS.charAt(\n    PUSH_CHARS.indexOf(next[next.length - 1]) - 1\n  );\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\nimport { Index } from './indexes/Index';\n\n/**\n * Node is an interface defining the common functionality for nodes in\n * a DataSnapshot.\n *\n * @interface\n */\nexport interface Node {\n  /**\n   * Whether this node is a leaf node.\n   * @return Whether this is a leaf node.\n   */\n  isLeafNode(): boolean;\n\n  /**\n   * Gets the priority of the node.\n   * @return The priority of the node.\n   */\n  getPriority(): Node;\n\n  /**\n   * Returns a duplicate node with the new priority.\n   * @param newPriorityNode New priority to set for the node.\n   * @return Node with new priority.\n   */\n  updatePriority(newPriorityNode: Node): Node;\n\n  /**\n   * Returns the specified immediate child, or null if it doesn't exist.\n   * @param childName The name of the child to retrieve.\n   * @return The retrieved child, or an empty node.\n   */\n  getImmediateChild(childName: string): Node;\n\n  /**\n   * Returns a child by path, or null if it doesn't exist.\n   * @param path The path of the child to retrieve.\n   * @return The retrieved child or an empty node.\n   */\n  getChild(path: Path): Node;\n\n  /**\n   * Returns the name of the child immediately prior to the specified childNode, or null.\n   * @param childName The name of the child to find the predecessor of.\n   * @param childNode The node to find the predecessor of.\n   * @param index The index to use to determine the predecessor\n   * @return The name of the predecessor child, or null if childNode is the first child.\n   */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string | null;\n\n  /**\n   * Returns a duplicate node, with the specified immediate child updated.\n   * Any value in the node will be removed.\n   * @param childName The name of the child to update.\n   * @param newChildNode The new child node\n   * @return The updated node.\n   */\n  updateImmediateChild(childName: string, newChildNode: Node): Node;\n\n  /**\n   * Returns a duplicate node, with the specified child updated.  Any value will\n   * be removed.\n   * @param path The path of the child to update.\n   * @param newChildNode The new child node, which may be an empty node\n   * @return The updated node.\n   */\n  updateChild(path: Path, newChildNode: Node): Node;\n\n  /**\n   * True if the immediate child specified exists\n   */\n  hasChild(childName: string): boolean;\n\n  /**\n   * @return True if this node has no value or children.\n   */\n  isEmpty(): boolean;\n\n  /**\n   * @return The number of children of this node.\n   */\n  numChildren(): number;\n\n  /**\n   * Calls action for each child.\n   * @param action Action to be called for\n   * each child.  It's passed the child name and the child node.\n   * @return The first truthy value return by action, or the last falsey one\n   */\n  forEachChild(index: Index, action: (a: string, b: Node) => void): unknown;\n\n  /**\n   * @param exportFormat True for export format (also wire protocol format).\n   * @return Value of this node as JSON.\n   */\n  val(exportFormat?: boolean): unknown;\n\n  /**\n   * @return hash representing the node contents.\n   */\n  hash(): string;\n\n  /**\n   * @param other Another node\n   * @return -1 for less than, 0 for equal, 1 for greater than other\n   */\n  compareTo(other: Node): number;\n\n  /**\n   * @return Whether or not this snapshot equals other\n   */\n  equals(other: Node): boolean;\n\n  /**\n   * @return This node, with the specified index now available\n   */\n  withIndex(indexDefinition: Index): Node;\n\n  isIndexed(indexDefinition: Index): boolean;\n}\n\nexport class NamedNode {\n  constructor(public name: string, public node: Node) {}\n\n  static Wrap(name: string, node: Node) {\n    return new NamedNode(name, node);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node, NamedNode } from '../Node';\nimport { MIN_NAME } from '../../util/util';\nimport { Comparator } from '../../util/SortedMap';\n\nexport abstract class Index {\n  abstract compare(a: NamedNode, b: NamedNode): number;\n\n  abstract isDefinedOn(node: Node): boolean;\n\n  /**\n   * @return A standalone comparison function for\n   * this index\n   */\n  getCompare(): Comparator<NamedNode> {\n    return this.compare.bind(this);\n  }\n\n  /**\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n   *\n   *\n   * @return True if the portion of the snapshot being indexed changed between oldNode and newNode\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    const oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    const newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  }\n\n  /**\n   * @return a node wrapper that will sort equal to or less than\n   * any other node wrapper, using this index\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @return a node wrapper that will sort greater than or equal to\n   * any other node wrapper, using this index\n   */\n  abstract maxPost(): NamedNode;\n\n  abstract makePost(indexValue: unknown, name: string): NamedNode;\n\n  /**\n   * @return String representation for inclusion in a query spec\n   */\n  abstract toString(): string;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from './Index';\nimport { Node, NamedNode } from '../Node';\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { assert, assertionError } from '@firebase/util';\nimport { ChildrenNode } from '../ChildrenNode';\n\nlet __EMPTY_NODE: ChildrenNode;\n\nexport class KeyIndex extends Index {\n  static get __EMPTY_NODE() {\n    return __EMPTY_NODE;\n  }\n\n  static set __EMPTY_NODE(val) {\n    __EMPTY_NODE = val;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  compare(a: NamedNode, b: NamedNode): number {\n    return nameCompare(a.name, b.name);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isDefinedOn(node: Node): boolean {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return false; // The key for a node never changes.\n  }\n\n  /**\n   * @inheritDoc\n   */\n  minPost() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  maxPost(): NamedNode {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  }\n\n  makePost(indexValue: string, name: string): NamedNode {\n    assert(\n      typeof indexValue === 'string',\n      'KeyIndex indexValue must always be a string.'\n    );\n    // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  }\n\n  /**\n   * @return String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.key';\n  }\n}\n\nexport const KEY_INDEX = new KeyIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains } from '@firebase/util';\nimport { doubleToIEEE754String } from '../util/util';\n\nimport { Node } from './Node';\nimport { Indexable } from '../util/misc';\n\nlet MAX_NODE: Node;\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport const priorityHashText = function (priority: string | number): string {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n\n/**\n * Validates that a priority snapshot Node is valid.\n */\nexport const validatePriorityNode = function (priorityNode: Node) {\n  if (priorityNode.isLeafNode()) {\n    const val = priorityNode.val();\n    assert(\n      typeof val === 'string' ||\n        typeof val === 'number' ||\n        (typeof val === 'object' && contains(val as Indexable, '.sv')),\n      'Priority must be a string or number.'\n    );\n  } else {\n    assert(\n      priorityNode === MAX_NODE || priorityNode.isEmpty(),\n      'priority of unexpected type.'\n    );\n  }\n  // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n  assert(\n    priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(),\n    \"Priority nodes can't have a priority of their own.\"\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\nimport { doubleToIEEE754String, sha1 } from '../util/util';\nimport { priorityHashText, validatePriorityNode } from './snap';\nimport { Node } from './Node';\nimport {\n  Path,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\nimport { Index } from './indexes/Index';\nimport { ChildrenNodeConstructor } from './ChildrenNode';\nimport { Indexable } from '../util/misc';\n\nlet __childrenNodeConstructor: ChildrenNodeConstructor;\n\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nexport class LeafNode implements Node {\n  static set __childrenNodeConstructor(val: ChildrenNodeConstructor) {\n    __childrenNodeConstructor = val;\n  }\n\n  static get __childrenNodeConstructor() {\n    return __childrenNodeConstructor;\n  }\n\n  /**\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n   * the same type, the comparison falls back to their value\n   */\n  static VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n  private lazyHash_: string | null = null;\n\n  /**\n   * @param value_ The value to store in this leaf node. The object type is\n   * possible in the event of a deferred value\n   * @param priorityNode_ The priority of this node.\n   */\n  constructor(\n    private readonly value_: string | number | boolean | Indexable,\n    private priorityNode_: Node = LeafNode.__childrenNodeConstructor.EMPTY_NODE\n  ) {\n    assert(\n      this.value_ !== undefined && this.value_ !== null,\n      \"LeafNode shouldn't be created with null/undefined value.\"\n    );\n\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return true;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    return new LeafNode(this.value_, newPriorityNode);\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  hasChild(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(childName: string, childNode: Node): null {\n    return null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(\n        childName,\n        newChildNode\n      ).updatePriority(this.priorityNode_);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(\n        front !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n\n      return this.updateImmediateChild(\n        front,\n        LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(\n          pathPopFront(path),\n          newChildNode\n        )\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return 0;\n  }\n\n  /** @inheritDoc */\n  forEachChild(index: Index, action: (s: string, n: Node) => void): boolean {\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  val(exportFormat?: boolean): {} {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.priorityNode_.isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.priorityNode_.val() as number | string) +\n          ':';\n      }\n\n      const type = typeof this.value_;\n      toHash += type + ':';\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_ as number);\n      } else {\n        toHash += this.value_;\n      }\n      this.lazyHash_ = sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /**\n   * Returns the value of the leaf node.\n   * @return The value of the node.\n   */\n  getValue(): Indexable | string | number | boolean {\n    return this.value_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  compareTo(other: Node): number {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other as LeafNode);\n    }\n  }\n\n  /**\n   * Comparison specifically for two leaf nodes\n   */\n  private compareToLeafNode_(otherLeaf: LeafNode): number {\n    const otherLeafType = typeof otherLeaf.value_;\n    const thisLeafType = typeof this.value_;\n    const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  withIndex(): Node {\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isIndexed(): boolean {\n    return true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  equals(other: Node): boolean {\n    /**\n     * @inheritDoc\n     */\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      const otherLeaf = other as LeafNode;\n      return (\n        this.value_ === otherLeaf.value_ &&\n        this.priorityNode_.equals(otherLeaf.priorityNode_)\n      );\n    } else {\n      return false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from './Index';\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { NamedNode, Node } from '../Node';\nimport { LeafNode } from '../LeafNode';\n\nlet nodeFromJSON: (a: unknown) => Node;\nlet MAX_NODE: Node;\n\nexport function setNodeFromJSON(val: (a: unknown) => Node) {\n  nodeFromJSON = val;\n}\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport class PriorityIndex extends Index {\n  /**\n   * @inheritDoc\n   */\n  compare(a: NamedNode, b: NamedNode): number {\n    const aPriority = a.node.getPriority();\n    const bPriority = b.node.getPriority();\n    const indexCmp = aPriority.compareTo(bPriority);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isDefinedOn(node: Node): boolean {\n    return !node.getPriority().isEmpty();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  }\n\n  /**\n   * @inheritDoc\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  maxPost(): NamedNode {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE));\n  }\n\n  makePost(indexValue: unknown, name: string): NamedNode {\n    const priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  }\n\n  /**\n   * @return String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.priority';\n  }\n}\n\nexport const PRIORITY_INDEX = new PriorityIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implementation of an immutable SortedMap using a Left-leaning\n * Red-Black Tree, adapted from the implementation in Mugs\n * (http://mads379.github.com/mugs/) by Mads Hartmann Jensen\n * (mads379@gmail.com).\n *\n * Original paper on Left-leaning Red-Black Trees:\n *   http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n *\n * Invariant 1: No red node has a red child\n * Invariant 2: Every leaf path has the same number of black nodes\n * Invariant 3: Only the left child can be red (left leaning)\n */\n\n// TODO: There are some improvements I'd like to make to improve memory / perf:\n//  * Create two prototypes, LLRedNode and LLBlackNode, instead of storing a\n//    color property in every node.\n// TODO: It would also be good (and possibly necessary) to create a base\n// interface for LLRBNode and LLRBEmptyNode.\n\nexport type Comparator<K> = (key1: K, key2: K) => number;\n\n/**\n * An iterator over an LLRBNode.\n */\nexport class SortedMapIterator<K, V, T> {\n  private nodeStack_: Array<LLRBNode<K, V> | LLRBEmptyNode<K, V>> = [];\n\n  /**\n   * @param node Node to iterate.\n   * @param isReverse_ Whether or not to iterate in reverse\n   * @param resultGenerator_\n   */\n  constructor(\n    node: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    startKey: K | null,\n    comparator: Comparator<K>,\n    private isReverse_: boolean,\n    private resultGenerator_: ((k: K, v: V) => T) | null = null\n  ) {\n    let cmp = 1;\n    while (!node.isEmpty()) {\n      node = node as LLRBNode<K, V>;\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  getNext(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    let node = this.nodeStack_.pop();\n    let result: T;\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = ({ key: node.key, value: node.value } as unknown) as T;\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this.nodeStack_.length > 0;\n  }\n\n  peek(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    const node = this.nodeStack_[this.nodeStack_.length - 1];\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return ({ key: node.key, value: node.value } as unknown) as T;\n    }\n  }\n}\n\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\nexport class LLRBNode<K, V> {\n  color: boolean;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n\n  /**\n   * @param key Key associated with this node.\n   * @param value Value associated with this node.\n   * @param color Whether this node is red.\n   * @param left Left child.\n   * @param right Right child.\n   */\n  constructor(\n    public key: K,\n    public value: V,\n    color: boolean | null,\n    left?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ) {\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left =\n      left != null ? left : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n    this.right =\n      right != null ? right : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n  }\n\n  static RED = true;\n  static BLACK = false;\n\n  /**\n   * Returns a copy of the current node, optionally replacing pieces of it.\n   *\n   * @param key New key for the node, or null.\n   * @param value New value for the node, or null.\n   * @param color New color for the node, or null.\n   * @param left New left child for the node, or null.\n   * @param right New right child for the node, or null.\n   * @return The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBNode<K, V> {\n    return new LLRBNode(\n      key != null ? key : this.key,\n      value != null ? value : this.value,\n      color != null ? color : this.color,\n      left != null ? left : this.left,\n      right != null ? right : this.right\n    );\n  }\n\n  /**\n   * @return The total number of nodes in the tree.\n   */\n  count(): number {\n    return this.left.count() + 1 + this.right.count();\n  }\n\n  /**\n   * @return True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action Callback function to be called for each\n   *   node.  If it returns true, traversal is aborted.\n   * @return The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return (\n      this.left.inorderTraversal(action) ||\n      !!action(this.key, this.value) ||\n      this.right.inorderTraversal(action)\n    );\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @return True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return (\n      this.right.reverseTraversal(action) ||\n      action(this.key, this.value) ||\n      this.left.reverseTraversal(action)\n    );\n  }\n\n  /**\n   * @return The minimum node in the tree.\n   */\n  private min_(): LLRBNode<K, V> {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return (this.left as LLRBNode<K, V>).min_();\n    }\n  }\n\n  /**\n   * @return The maximum key in the tree.\n   */\n  minKey(): K {\n    return this.min_().key;\n  }\n\n  /**\n   * @return The maximum key in the tree.\n   */\n  maxKey(): K {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }\n\n  /**\n   * @param key Key to insert.\n   * @param value Value to insert.\n   * @param comparator Comparator.\n   * @return New tree, with the key/value added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    const cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        n.right.insert(key, value, comparator)\n      );\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @return New tree, with the minimum key removed.\n   */\n  private removeMin_(): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n    }\n    let n: LLRBNode<K, V> = this;\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n    n = n.copy(null, null, null, (n.left as LLRBNode<K, V>).removeMin_(), null);\n    return n.fixUp_();\n  }\n\n  /**\n   * @param key The key of the item to remove.\n   * @param comparator Comparator.\n   * @return New tree, with the specified item removed.\n   */\n  remove(\n    key: K,\n    comparator: Comparator<K>\n  ): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    let n, smallest;\n    n = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n        } else {\n          smallest = (n.right as LLRBNode<K, V>).min_();\n          n = n.copy(\n            smallest.key,\n            smallest.value,\n            null,\n            null,\n            (n.right as LLRBNode<K, V>).removeMin_()\n          );\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @return Whether this is a RED node.\n   */\n  isRed_(): boolean {\n    return this.color;\n  }\n\n  /**\n   * @return New tree after performing any needed rotations.\n   */\n  private fixUp_(): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @return New tree, after moveRedLeft.\n   */\n  private moveRedLeft_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.right.left.isRed_()) {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        (n.right as LLRBNode<K, V>).rotateRight_()\n      );\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @return New tree, after moveRedRight.\n   */\n  private moveRedRight_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @return New tree, after rotateLeft.\n   */\n  private rotateLeft_(): LLRBNode<K, V> {\n    const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @return New tree, after rotateRight.\n   */\n  private rotateRight_(): LLRBNode<K, V> {\n    const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @return Newt ree, after colorFlip.\n   */\n  private colorFlip_(): LLRBNode<K, V> {\n    const left = this.left.copy(null, null, !this.left.color, null, null);\n    const right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }\n\n  /**\n   * For testing.\n   *\n   * @return True if all is well.\n   */\n  private checkMaxDepth_(): boolean {\n    const blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  }\n\n  check_(): number {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error(\n        'Red node has red child(' + this.key + ',' + this.value + ')'\n      );\n    }\n    if (this.right.isRed_()) {\n      throw new Error(\n        'Right child of (' + this.key + ',' + this.value + ') is red'\n      );\n    }\n    const blackDepth = this.left.check_();\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  }\n}\n\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\nexport class LLRBEmptyNode<K, V> {\n  key: K;\n  value: V;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  color: boolean;\n\n  /**\n   * Returns a copy of the current node.\n   *\n   * @return The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key/value added.\n   *\n   * @param key Key to be added.\n   * @param value Value to be added.\n   * @param comparator Comparator.\n   * @return New tree, with item added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    return new LLRBNode(key, value, null);\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key removed.\n   *\n   * @param key The key to remove.\n   * @param comparator Comparator.\n   * @return New tree, with item removed.\n   */\n  remove(key: K, comparator: Comparator<K>): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * @return The total number of nodes in the tree.\n   */\n  count(): number {\n    return 0;\n  }\n\n  /**\n   * @return True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return true;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @return True if traversal was aborted.\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @return True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return false;\n  }\n\n  minKey(): null {\n    return null;\n  }\n\n  maxKey(): null {\n    return null;\n  }\n\n  check_(): number {\n    return 0;\n  }\n\n  /**\n   * @return Whether this node is red.\n   */\n  isRed_() {\n    return false;\n  }\n}\n\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\nexport class SortedMap<K, V> {\n  /**\n   * Always use the same empty node, to reduce memory.\n   */\n  static EMPTY_NODE = new LLRBEmptyNode();\n\n  /**\n   * @param comparator_ Key comparator.\n   * @param root_ (Optional) Root node for the map.\n   */\n  constructor(\n    private comparator_: Comparator<K>,\n    private root_:\n      | LLRBNode<K, V>\n      | LLRBEmptyNode<K, V> = SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>\n  ) {}\n\n  /**\n   * Returns a copy of the map, with the specified key/value added or replaced.\n   * (TODO: We should perhaps rename this method to 'put')\n   *\n   * @param key Key to be added.\n   * @param value Value to be added.\n   * @return New map, with item added.\n   */\n  insert(key: K, value: V): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .insert(key, value, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns a copy of the map, with the specified key removed.\n   *\n   * @param key The key to remove.\n   * @return New map, with item removed.\n   */\n  remove(key: K): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .remove(key, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns the value of the node with the given key, or null.\n   *\n   * @param key The key to look up.\n   * @return The value of the node with the given key, or null if the\n   * key doesn't exist.\n   */\n  get(key: K): V | null {\n    let cmp;\n    let node = this.root_;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\n   * @param key The key to find the predecessor of\n   * @return The predecessor key.\n   */\n  getPredecessorKey(key: K): K | null {\n    let cmp,\n      node = this.root_,\n      rightParent = null;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error(\n      'Attempted to find predecessor key for a nonexistent key.  What gives?'\n    );\n  }\n\n  /**\n   * @return True if the map is empty.\n   */\n  isEmpty(): boolean {\n    return this.root_.isEmpty();\n  }\n\n  /**\n   * @return The total number of nodes in the map.\n   */\n  count(): number {\n    return this.root_.count();\n  }\n\n  /**\n   * @return The minimum key in the map.\n   */\n  minKey(): K | null {\n    return this.root_.minKey();\n  }\n\n  /**\n   * @return The maximum key in the map.\n   */\n  maxKey(): K | null {\n    return this.root_.maxKey();\n  }\n\n  /**\n   * Traverses the map in key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @return The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return this.root_.inorderTraversal(action);\n  }\n\n  /**\n   * Traverses the map in reverse key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @return True if the traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return this.root_.reverseTraversal(action);\n  }\n\n  /**\n   * Returns an iterator over the SortedMap.\n   * @return The iterator.\n   */\n  getIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getReverseIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n\n  getReverseIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LLRBNode, SortedMap } from '../util/SortedMap';\n\nimport { NamedNode } from './Node';\n\nconst LOG_2 = Math.log(2);\n\nclass Base12Num {\n  count: number;\n  private current_: number;\n  private bits_: number;\n\n  constructor(length: number) {\n    const logBase2 = (num: number) =>\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parseInt((Math.log(num) / LOG_2) as any, 10);\n    const bitMask = (bits: number) => parseInt(Array(bits + 1).join('1'), 2);\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    const mask = bitMask(this.count);\n    this.bits_ = (length + 1) & mask;\n  }\n\n  nextBitIsOne(): boolean {\n    //noinspection JSBitwiseOperatorUsage\n    const result = !(this.bits_ & (0x1 << this.current_));\n    this.current_--;\n    return result;\n  }\n}\n\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @param childList Unsorted list of children\n * @param cmp The comparison method to be used\n * @param keyFn An optional function to extract K from a node wrapper, if K's\n * type is not NamedNode\n * @param mapSortFn An optional override for comparator used by the generated sorted map\n */\nexport const buildChildSet = function <K, V>(\n  childList: NamedNode[],\n  cmp: (a: NamedNode, b: NamedNode) => number,\n  keyFn?: (a: NamedNode) => K,\n  mapSortFn?: (a: K, b: K) => number\n): SortedMap<K, V> {\n  childList.sort(cmp);\n\n  const buildBalancedTree = function (\n    low: number,\n    high: number\n  ): LLRBNode<K, V> | null {\n    const length = high - low;\n    let namedNode: NamedNode;\n    let key: K;\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : ((namedNode as unknown) as K);\n      return new LLRBNode(\n        key,\n        (namedNode.node as unknown) as V,\n        LLRBNode.BLACK,\n        null,\n        null\n      );\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const middle = parseInt((length / 2) as any, 10) + low;\n      const left = buildBalancedTree(low, middle);\n      const right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : ((namedNode as unknown) as K);\n      return new LLRBNode(\n        key,\n        (namedNode.node as unknown) as V,\n        LLRBNode.BLACK,\n        left,\n        right\n      );\n    }\n  };\n\n  const buildFrom12Array = function (base12: Base12Num): LLRBNode<K, V> {\n    let node: LLRBNode<K, V> = null;\n    let root = null;\n    let index = childList.length;\n\n    const buildPennant = function (chunkSize: number, color: boolean) {\n      const low = index - chunkSize;\n      const high = index;\n      index -= chunkSize;\n      const childTree = buildBalancedTree(low + 1, high);\n      const namedNode = childList[low];\n      const key: K = keyFn ? keyFn(namedNode) : ((namedNode as unknown) as K);\n      attachPennant(\n        new LLRBNode(\n          key,\n          (namedNode.node as unknown) as V,\n          color,\n          null,\n          childTree\n        )\n      );\n    };\n\n    const attachPennant = function (pennant: LLRBNode<K, V>) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (let i = 0; i < base12.count; ++i) {\n      const isOne = base12.nextBitIsOne();\n      // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n      const chunkSize = Math.pow(2, base12.count - (i + 1));\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n    return root;\n  };\n\n  const base12 = new Base12Num(childList.length);\n  const root = buildFrom12Array(base12);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new SortedMap<K, V>(mapSortFn || (cmp as any), root);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains, map, safeGet } from '@firebase/util';\nimport { buildChildSet } from './childSet';\n\nimport { NamedNode, Node } from './Node';\nimport { PRIORITY_INDEX } from './indexes/PriorityIndex';\nimport { KEY_INDEX } from './indexes/KeyIndex';\nimport { SortedMap } from '../util/SortedMap';\nimport { Index } from './indexes/Index';\n\nlet _defaultIndexMap: IndexMap;\n\nconst fallbackObject = {};\n\nexport class IndexMap {\n  /**\n   * The default IndexMap for nodes without a priority\n   */\n  static get Default(): IndexMap {\n    assert(\n      fallbackObject && PRIORITY_INDEX,\n      'ChildrenNode.ts has not been loaded'\n    );\n    _defaultIndexMap =\n      _defaultIndexMap ||\n      new IndexMap(\n        { '.priority': fallbackObject },\n        { '.priority': PRIORITY_INDEX }\n      );\n    return _defaultIndexMap;\n  }\n\n  constructor(\n    private indexes_: {\n      [k: string]: SortedMap<NamedNode, Node> | /*FallbackType*/ object;\n    },\n    private indexSet_: { [k: string]: Index }\n  ) {}\n\n  get(indexKey: string): SortedMap<NamedNode, Node> | null {\n    const sortedMap = safeGet(this.indexes_, indexKey);\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  }\n\n  hasIndex(indexDefinition: Index): boolean {\n    return contains(this.indexSet_, indexDefinition.toString());\n  }\n\n  addIndex(\n    indexDefinition: Index,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    assert(\n      indexDefinition !== KEY_INDEX,\n      \"KeyIndex always exists and isn't meant to be added to the IndexMap.\"\n    );\n    const childList = [];\n    let sawIndexedValue = false;\n    const iter = existingChildren.getIterator(NamedNode.Wrap);\n    let next = iter.getNext();\n    while (next) {\n      sawIndexedValue =\n        sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n    let newIndex;\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n    const indexName = indexDefinition.toString();\n    const newIndexSet = { ...this.indexSet_ };\n    newIndexSet[indexName] = indexDefinition;\n    const newIndexes = { ...this.indexes_ };\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  }\n\n  /**\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\n   */\n  addToIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>, indexName: string) => {\n        const index = safeGet(this.indexSet_, indexName);\n        assert(index, 'Missing index implementation for ' + indexName);\n        if (indexedChildren === fallbackObject) {\n          // Check to see if we need to index everything\n          if (index.isDefinedOn(namedNode.node)) {\n            // We need to build this index\n            const childList = [];\n            const iter = existingChildren.getIterator(NamedNode.Wrap);\n            let next = iter.getNext();\n            while (next) {\n              if (next.name !== namedNode.name) {\n                childList.push(next);\n              }\n              next = iter.getNext();\n            }\n            childList.push(namedNode);\n            return buildChildSet(childList, index.getCompare());\n          } else {\n            // No change, this remains a fallback\n            return fallbackObject;\n          }\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          let newChildren = indexedChildren;\n          if (existingSnap) {\n            newChildren = newChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          }\n          return newChildren.insert(namedNode, namedNode.node);\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n\n  /**\n   * Create a new IndexMap instance with the given value removed\n   */\n  removeFromIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>) => {\n        if (indexedChildren === fallbackObject) {\n          // This is the fallback. Just return it, nothing to do in this case\n          return indexedChildren;\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          if (existingSnap) {\n            return indexedChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          } else {\n            // No record of this child\n            return indexedChildren;\n          }\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../util/util';\nimport { NamedNode } from './Node';\n\nexport function NAME_ONLY_COMPARATOR(left: NamedNode, right: NamedNode) {\n  return nameCompare(left.name, right.name);\n}\n\nexport function NAME_COMPARATOR(left: string, right: string) {\n  return nameCompare(left, right);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\nimport { MAX_NAME, MIN_NAME, sha1 } from '../util/util';\nimport { SortedMap, SortedMapIterator } from '../util/SortedMap';\nimport { NamedNode, Node } from './Node';\nimport { priorityHashText, setMaxNode, validatePriorityNode } from './snap';\nimport {\n  PRIORITY_INDEX,\n  setMaxNode as setPriorityMaxNode\n} from './indexes/PriorityIndex';\nimport { KEY_INDEX, KeyIndex } from './indexes/KeyIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NAME_COMPARATOR } from './comparators';\nimport { Index } from './indexes/Index';\nimport { Path, pathGetFront, pathGetLength, pathPopFront } from '../util/Path';\n\nexport interface ChildrenNodeConstructor {\n  new (\n    children_: SortedMap<string, Node>,\n    priorityNode_: Node | null,\n    indexMap_: IndexMap\n  ): ChildrenNode;\n  EMPTY_NODE: ChildrenNode;\n}\n\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\nlet EMPTY_NODE: ChildrenNode;\n\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n */\nexport class ChildrenNode implements Node {\n  private lazyHash_: string | null = null;\n\n  static get EMPTY_NODE(): ChildrenNode {\n    return (\n      EMPTY_NODE ||\n      (EMPTY_NODE = new ChildrenNode(\n        new SortedMap<string, Node>(NAME_COMPARATOR),\n        null,\n        IndexMap.Default\n      ))\n    );\n  }\n\n  /**\n   * @param children_ List of children of this node..\n   * @param priorityNode_ The priority of this node (as a snapshot node).\n   */\n  constructor(\n    private readonly children_: SortedMap<string, Node>,\n    private readonly priorityNode_: Node | null,\n    private indexMap_: IndexMap\n  ) {\n    /**\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n     * class instead of an empty ChildrenNode.\n     */\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(\n        !this.priorityNode_ || this.priorityNode_.isEmpty(),\n        'An empty node cannot have a priority'\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_ || EMPTY_NODE;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      const child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  }\n\n  /** @inheritDoc */\n  hasChild(childName: string): boolean {\n    return this.children_.get(childName) !== null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      const namedNode = new NamedNode(childName, newChildNode);\n      let newChildren, newIndexMap;\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(\n          namedNode,\n          this.children_\n        );\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      const newPriority = newChildren.isEmpty()\n        ? EMPTY_NODE\n        : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(\n        pathGetFront(path) !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n      const newImmediateChild = this.getImmediateChild(front).updateChild(\n        pathPopFront(path),\n        newChildNode\n      );\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return this.children_.isEmpty();\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return this.children_.count();\n  }\n\n  private static INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n\n  /** @inheritDoc */\n  val(exportFormat?: boolean): object {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const obj: { [k: string]: unknown } = {};\n    let numKeys = 0,\n      maxKey = 0,\n      allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, (key: string, childNode: Node) => {\n      obj[key] = childNode.val(exportFormat);\n\n      numKeys++;\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      const array: unknown[] = [];\n      // eslint-disable-next-line guard-for-in\n      for (const key in obj) {\n        array[(key as unknown) as number] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n      return obj;\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.getPriority().isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.getPriority().val() as string | number) +\n          ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n        const childHash = childNode.hash();\n        if (childHash !== '') {\n          toHash += ':' + key + ':' + childHash;\n        }\n      });\n\n      this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      const predecessor = idx.getPredecessorKey(\n        new NamedNode(childName, childNode)\n      );\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  }\n\n  getFirstChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  }\n\n  getFirstChild(indexDefinition: Index): NamedNode | null {\n    const minKey = this.getFirstChildName(indexDefinition);\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Given an index, return the key name of the largest value we have, according to that index\n   */\n  getLastChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  }\n\n  getLastChild(indexDefinition: Index): NamedNode | null {\n    const maxKey = this.getLastChildName(indexDefinition);\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachChild(\n    index: Index,\n    action: (key: string, node: Node) => boolean | void\n  ): boolean {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      return idx.inorderTraversal(wrappedNode => {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  }\n\n  getIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  }\n\n  getIteratorFrom(\n    startPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getIteratorFrom(startPost, key => key);\n    } else {\n      const iterator = this.children_.getIteratorFrom(\n        startPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  getReverseIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getReverseIteratorFrom(\n      indexDefinition.maxPost(),\n      indexDefinition\n    );\n  }\n\n  getReverseIteratorFrom(\n    endPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, key => {\n        return key;\n      });\n    } else {\n      const iterator = this.children_.getReverseIteratorFrom(\n        endPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  compareTo(other: ChildrenNode): number {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  withIndex(indexDefinition: Index): Node {\n    if (\n      indexDefinition === KEY_INDEX ||\n      this.indexMap_.hasIndex(indexDefinition)\n    ) {\n      return this;\n    } else {\n      const newIndexMap = this.indexMap_.addIndex(\n        indexDefinition,\n        this.children_\n      );\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isIndexed(index: Index): boolean {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      const otherChildrenNode = other as ChildrenNode;\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (\n        this.children_.count() === otherChildrenNode.children_.count()\n      ) {\n        const thisIter = this.getIterator(PRIORITY_INDEX);\n        const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        let thisCurrent = thisIter.getNext();\n        let otherCurrent = otherIter.getNext();\n        while (thisCurrent && otherCurrent) {\n          if (\n            thisCurrent.name !== otherCurrent.name ||\n            !thisCurrent.node.equals(otherCurrent.node)\n          ) {\n            return false;\n          }\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n   * instead.\n   *\n   */\n  private resolveIndex_(\n    indexDefinition: Index\n  ): SortedMap<NamedNode, Node> | null {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  }\n}\n\nexport class MaxNode extends ChildrenNode {\n  constructor() {\n    super(\n      new SortedMap<string, Node>(NAME_COMPARATOR),\n      ChildrenNode.EMPTY_NODE,\n      IndexMap.Default\n    );\n  }\n\n  compareTo(other: Node): number {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n  equals(other: Node): boolean {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  }\n\n  getPriority(): MaxNode {\n    return this;\n  }\n\n  getImmediateChild(childName: string): ChildrenNode {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n}\n\n/**\n * Marker that will sort higher than any other snapshot.\n */\nexport const MAX_NODE = new MaxNode();\n\n/**\n * Document NamedNode extensions\n */\ndeclare module './Node' {\n  interface NamedNode {\n    MIN: NamedNode;\n    MAX: NamedNode;\n  }\n}\n\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE)\n  }\n});\n\n/**\n * Reference Extensions\n */\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE);\nsetPriorityMaxNode(MAX_NODE);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from './ChildrenNode';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\nimport { contains, assert } from '@firebase/util';\n\nimport { buildChildSet } from './childSet';\nimport { NAME_COMPARATOR, NAME_ONLY_COMPARATOR } from './comparators';\nimport { IndexMap } from './IndexMap';\nimport { PRIORITY_INDEX, setNodeFromJSON } from './indexes/PriorityIndex';\nimport { SortedMap } from '../util/SortedMap';\nimport { each } from '../util/util';\nimport { Indexable } from '../util/misc';\n\nconst USE_HINZE = true;\n\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param json JSON to create a node for.\n * @param priority Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n */\nexport function nodeFromJSON(\n  json: unknown | null,\n  priority: unknown = null\n): Node {\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(\n    priority === null ||\n      typeof priority === 'string' ||\n      typeof priority === 'number' ||\n      (typeof priority === 'object' && '.sv' in (priority as object)),\n    'Invalid priority type found: ' + typeof priority\n  );\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  }\n\n  // Valid leaf nodes include non-objects or server-value wrapper objects\n  if (typeof json !== 'object' || '.sv' in json) {\n    const jsonLeaf = json as string | number | boolean | Indexable;\n    return new LeafNode(jsonLeaf, nodeFromJSON(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    const children: NamedNode[] = [];\n    let childrenHavePriority = false;\n    const hinzeJsonObj = json;\n    each(hinzeJsonObj, (key, child) => {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        const childNode = nodeFromJSON(child);\n        if (!childNode.isEmpty()) {\n          childrenHavePriority =\n            childrenHavePriority || !childNode.getPriority().isEmpty();\n          children.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    const childSet = buildChildSet(\n      children,\n      NAME_ONLY_COMPARATOR,\n      namedNode => namedNode.name,\n      NAME_COMPARATOR\n    ) as SortedMap<string, Node>;\n    if (childrenHavePriority) {\n      const sortedChildSet = buildChildSet(\n        children,\n        PRIORITY_INDEX.getCompare()\n      );\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        new IndexMap(\n          { '.priority': sortedChildSet },\n          { '.priority': PRIORITY_INDEX }\n        )\n      );\n    } else {\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        IndexMap.Default\n      );\n    }\n  } else {\n    let node: Node = ChildrenNode.EMPTY_NODE;\n    each(json, (key: string, childData: unknown) => {\n      if (contains(json as object, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          const childNode = nodeFromJSON(childData);\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node = node.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n\n    return node.updatePriority(nodeFromJSON(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from './Index';\nimport { NamedNode, Node } from '../Node';\nimport { nameCompare } from '../../util/util';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nexport class ValueIndex extends Index {\n  /**\n   * @inheritDoc\n   */\n  compare(a: NamedNode, b: NamedNode): number {\n    const indexCmp = a.node.compareTo(b.node);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isDefinedOn(node: Node): boolean {\n    return true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.equals(newNode);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  maxPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MAX;\n  }\n\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, valueNode);\n  }\n\n  /**\n   * @return String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.value';\n  }\n}\n\nexport const VALUE_INDEX = new ValueIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\nimport { MAX_NAME, nameCompare } from '../../util/util';\nimport { Index } from './Index';\nimport { ChildrenNode, MAX_NODE } from '../ChildrenNode';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\nimport { Path, pathGetFront, pathIsEmpty, pathSlice } from '../../util/Path';\n\nexport class PathIndex extends Index {\n  constructor(private indexPath_: Path) {\n    super();\n\n    assert(\n      !pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority',\n      \"Can't create PathIndex with empty path or .priority key\"\n    );\n  }\n\n  protected extractChild(snap: Node): Node {\n    return snap.getChild(this.indexPath_);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isDefinedOn(node: Node): boolean {\n    return !node.getChild(this.indexPath_).isEmpty();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  compare(a: NamedNode, b: NamedNode): number {\n    const aChild = this.extractChild(a.node);\n    const bChild = this.extractChild(b.node);\n    const indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    const node = ChildrenNode.EMPTY_NODE.updateChild(\n      this.indexPath_,\n      valueNode\n    );\n    return new NamedNode(name, node);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  maxPost(): NamedNode {\n    const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  toString(): string {\n    return pathSlice(this.indexPath_, 0).join('/');\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { validateArgCount, validateCallback } from '@firebase/util';\nimport { validatePathString } from '../core/util/validation';\nimport { Path } from '../core/util/Path';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { Node } from '../core/snap/Node';\nimport { Reference } from './Reference';\nimport { Index } from '../core/snap/indexes/Index';\nimport { ChildrenNode } from '../core/snap/ChildrenNode';\n\n/**\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\n * surfaces the public methods (val, forEach, etc.) we want to expose.\n */\nexport class DataSnapshot {\n  /**\n   * @param node_ A SnapshotNode to wrap.\n   * @param ref_ The ref of the location this snapshot came from.\n   * @param index_ The iteration order for this snapshot\n   */\n  constructor(\n    private readonly node_: Node,\n    private readonly ref_: Reference,\n    private readonly index_: Index\n  ) {}\n\n  /**\n   * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\n   * empty.\n   *\n   * @return JSON representation of the DataSnapshot contents, or null if empty.\n   */\n  val(): unknown {\n    validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n    return this.node_.val();\n  }\n\n  /**\n   * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\n   * the entire node contents.\n   * @return JSON representation of the DataSnapshot contents, or null if empty.\n   */\n  exportVal(): unknown {\n    validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n    return this.node_.val(true);\n  }\n\n  // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n  toJSON(): unknown {\n    // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n    validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n    return this.exportVal();\n  }\n\n  /**\n   * Returns whether the snapshot contains a non-null value.\n   *\n   * @return Whether the snapshot contains a non-null value, or is empty.\n   */\n  exists(): boolean {\n    validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n    return !this.node_.isEmpty();\n  }\n\n  /**\n   * Returns a DataSnapshot of the specified child node's contents.\n   *\n   * @param childPathString Path to a child.\n   * @return DataSnapshot for child node.\n   */\n  child(childPathString: string): DataSnapshot {\n    validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\n    // Ensure the childPath is a string (can be a number)\n    childPathString = String(childPathString);\n    validatePathString('DataSnapshot.child', 1, childPathString, false);\n\n    const childPath = new Path(childPathString);\n    const childRef = this.ref_.child(childPath);\n    return new DataSnapshot(\n      this.node_.getChild(childPath),\n      childRef,\n      PRIORITY_INDEX\n    );\n  }\n\n  /**\n   * Returns whether the snapshot contains a child at the specified path.\n   *\n   * @param childPathString Path to a child.\n   * @return Whether the child exists.\n   */\n  hasChild(childPathString: string): boolean {\n    validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n    validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\n\n    const childPath = new Path(childPathString);\n    return !this.node_.getChild(childPath).isEmpty();\n  }\n\n  /**\n   * Returns the priority of the object, or null if no priority was set.\n   *\n   * @return The priority.\n   */\n  getPriority(): string | number | null {\n    validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\n\n    // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n    return this.node_.getPriority().val() as string | number | null;\n  }\n\n  /**\n   * Iterates through child nodes and calls the specified action for each one.\n   *\n   * @param action Callback function to be called\n   * for each child.\n   * @return True if forEach was canceled by action returning true for\n   * one of the child nodes.\n   */\n  forEach(action: (d: DataSnapshot) => boolean | void): boolean {\n    validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n    validateCallback('DataSnapshot.forEach', 1, action, false);\n\n    if (this.node_.isLeafNode()) {\n      return false;\n    }\n\n    const childrenNode = this.node_ as ChildrenNode;\n    // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n    return !!childrenNode.forEachChild(this.index_, (key, node) => {\n      return action(\n        new DataSnapshot(node, this.ref_.child(key), PRIORITY_INDEX)\n      );\n    });\n  }\n\n  /**\n   * Returns whether this DataSnapshot has children.\n   * @return True if the DataSnapshot contains 1 or more child nodes.\n   */\n  hasChildren(): boolean {\n    validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n\n    if (this.node_.isLeafNode()) {\n      return false;\n    } else {\n      return !this.node_.isEmpty();\n    }\n  }\n\n  get key() {\n    return this.ref_.getKey();\n  }\n\n  /**\n   * Returns the number of children for this DataSnapshot.\n   * @return The number of children that this DataSnapshot contains.\n   */\n  numChildren(): number {\n    validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n\n    return this.node_.numChildren();\n  }\n\n  /**\n   * @return The Firebase reference for the location this snapshot's data came\n   * from.\n   */\n  getRef(): Reference {\n    validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n\n    return this.ref_;\n  }\n\n  get ref() {\n    return this.getRef();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringify } from '@firebase/util';\nimport { Path } from '../util/Path';\nimport { EventRegistration } from './EventRegistration';\nimport { DataSnapshot } from '../../api/DataSnapshot';\n\n/**\n * Encapsulates the data needed to raise an event\n * @interface\n */\nexport interface Event {\n  getPath(): Path;\n\n  getEventType(): string;\n\n  getEventRunner(): () => void;\n\n  toString(): string;\n}\n\nexport type EventType =\n  | 'value'\n  | ' child_added'\n  | ' child_changed'\n  | ' child_moved'\n  | ' child_removed';\n\n/**\n * Encapsulates the data needed to raise an event\n */\nexport class DataEvent implements Event {\n  /**\n   * @param eventType One of: value, child_added, child_changed, child_moved, child_removed\n   * @param eventRegistration The function to call to with the event data. User provided\n   * @param snapshot The data backing the event\n   * @param prevName Optional, the name of the previous child for child_* events.\n   */\n  constructor(\n    public eventType: EventType,\n    public eventRegistration: EventRegistration,\n    public snapshot: DataSnapshot,\n    public prevName?: string | null\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  getPath(): Path {\n    const ref = this.snapshot.getRef();\n    if (this.eventType === 'value') {\n      return ref.path;\n    } else {\n      return ref.getParent().path;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventType(): string {\n    return this.eventType;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  toString(): string {\n    return (\n      this.getPath().toString() +\n      ':' +\n      this.eventType +\n      ':' +\n      stringify(this.snapshot.exportVal())\n    );\n  }\n}\n\nexport class CancelEvent implements Event {\n  constructor(\n    public eventRegistration: EventRegistration,\n    public error: Error,\n    public path: Path\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  getPath(): Path {\n    return this.path;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventType(): string {\n    return 'cancel';\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  toString(): string {\n    return this.path.toString() + ':cancel';\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataSnapshot } from '../../api/DataSnapshot';\nimport { DataEvent, CancelEvent, Event, EventType } from './Event';\nimport { contains, assert } from '@firebase/util';\n\nimport { Path } from '../util/Path';\nimport { Change } from './Change';\nimport { Query } from '../../api/Query';\n\n/**\n * An EventRegistration is basically an event type ('value', 'child_added', etc.) and a callback\n * to be notified of that type of event.\n *\n * That said, it can also contain a cancel callback to be notified if the event is canceled.  And\n * currently, this code is organized around the idea that you would register multiple child_ callbacks\n * together, as a single EventRegistration.  Though currently we don't do that.\n */\nexport interface EventRegistration {\n  /**\n   * True if this container has a callback to trigger for this event type\n   */\n  respondsTo(eventType: string): boolean;\n\n  createEvent(change: Change, query: Query): Event;\n\n  /**\n   * Given event data, return a function to trigger the user's callback\n   */\n  getEventRunner(eventData: Event): () => void;\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null;\n\n  matches(other: EventRegistration): boolean;\n\n  /**\n   * False basically means this is a \"dummy\" callback container being used as a sentinel\n   * to remove all callback containers of a particular type.  (e.g. if the user does\n   * ref.off('value') without specifying a specific callback).\n   *\n   * (TODO: Rework this, since it's hacky)\n   *\n   */\n  hasAnyCallback(): boolean;\n}\n\n/**\n * Represents registration for 'value' events.\n */\nexport class ValueEventRegistration implements EventRegistration {\n  constructor(\n    private callback_: ((d: DataSnapshot) => void) | null,\n    private cancelCallback_: ((e: Error) => void) | null,\n    private context_: {} | null\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  respondsTo(eventType: string): boolean {\n    return eventType === 'value';\n  }\n\n  /**\n   * @inheritDoc\n   */\n  createEvent(change: Change, query: Query): DataEvent {\n    const index = query.getQueryParams().getIndex();\n    return new DataEvent(\n      'value',\n      this,\n      new DataSnapshot(change.snapshotNode, query.getRef(), index)\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    const ctx = this.context_;\n    if (eventData.getEventType() === 'cancel') {\n      assert(\n        this.cancelCallback_,\n        'Raising a cancel event on a listener with no cancel callback'\n      );\n      const cancelCB = this.cancelCallback_;\n      return function () {\n        // We know that error exists, we checked above that this is a cancel event\n        cancelCB.call(ctx, (eventData as CancelEvent).error);\n      };\n    } else {\n      const cb = this.callback_;\n      return function () {\n        cb.call(ctx, (eventData as DataEvent).snapshot);\n      };\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.cancelCallback_) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  matches(other: EventRegistration): boolean {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callback_ || !this.callback_) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return (\n        other.callback_ === this.callback_ && other.context_ === this.context_\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  hasAnyCallback(): boolean {\n    return this.callback_ !== null;\n  }\n}\n\n/**\n * Represents the registration of 1 or more child_xxx events.\n *\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\n * register a group of callbacks together in the future.\n */\nexport class ChildEventRegistration implements EventRegistration {\n  constructor(\n    private callbacks_: {\n      [k: string]: (d: DataSnapshot, s?: string | null) => void;\n    } | null,\n    private cancelCallback_: ((e: Error) => void) | null,\n    private context_?: {}\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  respondsTo(eventType: string): boolean {\n    let eventToCheck =\n      eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck =\n      eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return contains(this.callbacks_, eventToCheck);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.cancelCallback_) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  createEvent(change: Change, query: Query): DataEvent {\n    assert(change.childName != null, 'Child events should have a childName.');\n    const ref = query.getRef().child(change.childName);\n    const index = query.getQueryParams().getIndex();\n    return new DataEvent(\n      change.type as EventType,\n      this,\n      new DataSnapshot(change.snapshotNode, ref, index),\n      change.prevName\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    const ctx = this.context_;\n    if (eventData.getEventType() === 'cancel') {\n      assert(\n        this.cancelCallback_,\n        'Raising a cancel event on a listener with no cancel callback'\n      );\n      const cancelCB = this.cancelCallback_;\n      return function () {\n        // We know that error exists, we checked above that this is a cancel event\n        cancelCB.call(ctx, (eventData as CancelEvent).error);\n      };\n    } else {\n      const cb = this.callbacks_[(eventData as DataEvent).eventType];\n      return function () {\n        cb.call(\n          ctx,\n          (eventData as DataEvent).snapshot,\n          (eventData as DataEvent).prevName\n        );\n      };\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  matches(other: EventRegistration): boolean {\n    if (other instanceof ChildEventRegistration) {\n      if (!this.callbacks_ || !other.callbacks_) {\n        return true;\n      } else if (this.context_ === other.context_) {\n        const otherKeys = Object.keys(other.callbacks_);\n        const thisKeys = Object.keys(this.callbacks_);\n        const otherCount = otherKeys.length;\n        const thisCount = thisKeys.length;\n        if (otherCount === thisCount) {\n          // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\n          // If event types don't match, not a match\n          // If count is not 1, exact match across all\n\n          if (otherCount === 1) {\n            const otherKey = otherKeys[0];\n            const thisKey = thisKeys[0];\n            return (\n              thisKey === otherKey &&\n              (!other.callbacks_[otherKey] ||\n                !this.callbacks_[thisKey] ||\n                other.callbacks_[otherKey] === this.callbacks_[thisKey])\n            );\n          } else {\n            // Exact match on each key.\n            return thisKeys.every(\n              eventType =>\n                other.callbacks_[eventType] === this.callbacks_[eventType]\n            );\n          }\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  hasAnyCallback(): boolean {\n    return this.callbacks_ !== null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nexport const enum ChangeType {\n  /** Event type for a child added */\n  CHILD_ADDED = 'child_added',\n  /** Event type for a child removed */\n  CHILD_REMOVED = 'child_removed',\n  /** Event type for a child changed */\n  CHILD_CHANGED = 'child_changed',\n  /** Event type for a child moved */\n  CHILD_MOVED = 'child_moved',\n  /** Event type for a value change */\n  VALUE = 'value'\n}\n\nexport interface Change {\n  /** @param type The event type */\n  type: ChangeType;\n  /** @param snapshotNode The data */\n  snapshotNode: Node;\n  /** @param childName The name for this child, if it's a child even */\n  childName?: string;\n  /** @param oldSnap Used for intermediate processing of child changed events */\n  oldSnap?: Node;\n  /**  * @param prevName The name for the previous child, if applicable */\n  prevName?: string | null;\n}\n\nexport function changeValue(snapshotNode: Node): Change {\n  return { type: ChangeType.VALUE, snapshotNode };\n}\n\nexport function changeChildAdded(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_ADDED, snapshotNode, childName };\n}\n\nexport function changeChildRemoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_REMOVED, snapshotNode, childName };\n}\n\nexport function changeChildChanged(\n  childName: string,\n  snapshotNode: Node,\n  oldSnap: Node\n): Change {\n  return {\n    type: ChangeType.CHILD_CHANGED,\n    snapshotNode,\n    childName,\n    oldSnap\n  };\n}\n\nexport function changeChildMoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_MOVED, snapshotNode, childName };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { NodeFilter } from './NodeFilter';\nimport { Index } from '../../snap/indexes/Index';\nimport { Path } from '../../util/Path';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { Node } from '../../snap/Node';\n\n/**\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\n */\nexport class IndexedFilter implements NodeFilter {\n  constructor(private readonly index_: Index) {}\n\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    assert(\n      snap.isIndexed(this.index_),\n      'A node must be indexed if only a child is updated'\n    );\n    const oldChild = snap.getImmediateChild(key);\n    // Check if anything actually changed.\n    if (\n      oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))\n    ) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(\n            changeChildRemoved(key, oldChild)\n          );\n        } else {\n          assert(\n            snap.isLeafNode(),\n            'A child remove without an old child only makes sense on a leaf node'\n          );\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(\n          changeChildChanged(key, newChild, oldChild)\n        );\n      }\n    }\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(\n              changeChildRemoved(key, childNode)\n            );\n          }\n        });\n      }\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (oldSnap.hasChild(key)) {\n            const oldChild = oldSnap.getImmediateChild(key);\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(\n                changeChildChanged(key, childNode, oldChild)\n              );\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(\n              changeChildAdded(key, childNode)\n            );\n          }\n        });\n      }\n    }\n    return newSnap.withIndex(this.index_);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  filtersNodes(): boolean {\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getIndexedFilter(): IndexedFilter {\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getIndex(): Index {\n    return this.index_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from '../../../core/snap/Node';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { NodeFilter } from './NodeFilter';\nimport { QueryParams } from '../QueryParams';\nimport { Index } from '../../snap/indexes/Index';\nimport { Path } from '../../util/Path';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\n\n/**\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\n */\nexport class RangedFilter implements NodeFilter {\n  private indexedFilter_: IndexedFilter;\n\n  private index_: Index;\n\n  private startPost_: NamedNode;\n\n  private endPost_: NamedNode;\n\n  constructor(params: QueryParams) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n  }\n\n  getStartPost(): NamedNode {\n    return this.startPost_;\n  }\n\n  getEndPost(): NamedNode {\n    return this.endPost_;\n  }\n\n  matches(node: NamedNode): boolean {\n    return (\n      this.index_.compare(this.getStartPost(), node) <= 0 &&\n      this.index_.compare(node, this.getEndPost()) <= 0\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    return this.indexedFilter_.updateChild(\n      snap,\n      key,\n      newChild,\n      affectedPath,\n      source,\n      optChangeAccumulator\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n    let filtered = newSnap.withIndex(this.index_);\n    // Don't support priorities on queries\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    const self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(\n      oldSnap,\n      filtered,\n      optChangeAccumulator\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  filtersNodes(): boolean {\n    return true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getIndexedFilter(): IndexedFilter {\n    return this.indexedFilter_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private static getStartPost_(params: QueryParams): NamedNode {\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  }\n\n  private static getEndPost_(params: QueryParams): NamedNode {\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RangedFilter } from './RangedFilter';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { NamedNode, Node } from '../../snap/Node';\nimport { assert } from '@firebase/util';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { NodeFilter } from './NodeFilter';\nimport { Index } from '../../snap/indexes/Index';\nimport { IndexedFilter } from './IndexedFilter';\nimport { QueryParams } from '../QueryParams';\nimport { Path } from '../../util/Path';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\n\n/**\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\n */\nexport class LimitedFilter implements NodeFilter {\n  private readonly rangedFilter_: RangedFilter;\n\n  private readonly index_: Index;\n\n  private readonly limit_: number;\n\n  private readonly reverse_: boolean;\n\n  constructor(params: QueryParams) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_\n        .getIndexedFilter()\n        .updateChild(\n          snap,\n          key,\n          newChild,\n          affectedPath,\n          source,\n          optChangeAccumulator\n        );\n    } else {\n      return this.fullLimitUpdateChild_(\n        snap,\n        key,\n        newChild,\n        source,\n        optChangeAccumulator\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    let filtered;\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (\n        this.limit_ * 2 < newSnap.numChildren() &&\n        newSnap.isIndexed(this.index_)\n      ) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n        // anchor to the startPost, endPost, or last element as appropriate\n        let iterator;\n        if (this.reverse_) {\n          iterator = (newSnap as ChildrenNode).getReverseIteratorFrom(\n            this.rangedFilter_.getEndPost(),\n            this.index_\n          );\n        } else {\n          iterator = (newSnap as ChildrenNode).getIteratorFrom(\n            this.rangedFilter_.getStartPost(),\n            this.index_\n          );\n        }\n        let count = 0;\n        while (iterator.hasNext() && count < this.limit_) {\n          const next = iterator.getNext();\n          let inRange;\n          if (this.reverse_) {\n            inRange =\n              this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n          } else {\n            inRange =\n              this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n          }\n          if (inRange) {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          } else {\n            // if we have reached the end post, we cannot keep adding elemments\n            break;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(\n          ChildrenNode.EMPTY_NODE\n        ) as ChildrenNode;\n        let startPost;\n        let endPost;\n        let cmp;\n        let iterator;\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n          startPost = this.rangedFilter_.getEndPost();\n          endPost = this.rangedFilter_.getStartPost();\n          const indexCompare = this.index_.getCompare();\n          cmp = (a: NamedNode, b: NamedNode) => indexCompare(b, a);\n        } else {\n          iterator = filtered.getIterator(this.index_);\n          startPost = this.rangedFilter_.getStartPost();\n          endPost = this.rangedFilter_.getEndPost();\n          cmp = this.index_.getCompare();\n        }\n\n        let count = 0;\n        let foundStartPost = false;\n        while (iterator.hasNext()) {\n          const next = iterator.getNext();\n          if (!foundStartPost && cmp(startPost, next) <= 0) {\n            // start adding\n            foundStartPost = true;\n          }\n          const inRange =\n            foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(\n              next.name,\n              ChildrenNode.EMPTY_NODE\n            );\n          }\n        }\n      }\n    }\n    return this.rangedFilter_\n      .getIndexedFilter()\n      .updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  filtersNodes(): boolean {\n    return true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getIndexedFilter(): IndexedFilter {\n    return this.rangedFilter_.getIndexedFilter();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private fullLimitUpdateChild_(\n    snap: Node,\n    childKey: string,\n    childSnap: Node,\n    source: CompleteChildSource,\n    changeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    // TODO: rename all cache stuff etc to general snap terminology\n    let cmp;\n    if (this.reverse_) {\n      const indexCmp = this.index_.getCompare();\n      cmp = (a: NamedNode, b: NamedNode) => indexCmp(b, a);\n    } else {\n      cmp = this.index_.getCompare();\n    }\n    const oldEventCache = snap as ChildrenNode;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    const newChildNamedNode = new NamedNode(childKey, childSnap);\n    const windowBoundary = this.reverse_\n      ? oldEventCache.getFirstChild(this.index_)\n      : (oldEventCache.getLastChild(this.index_) as NamedNode);\n    const inRange = this.rangedFilter_.matches(newChildNamedNode);\n    if (oldEventCache.hasChild(childKey)) {\n      const oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      let nextChild = source.getChildAfterChild(\n        this.index_,\n        windowBoundary,\n        this.reverse_\n      );\n      while (\n        nextChild != null &&\n        (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))\n      ) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(\n          this.index_,\n          nextChild,\n          this.reverse_\n        );\n      }\n      const compareNext =\n        nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      const remainsInWindow =\n        inRange && !childSnap.isEmpty() && compareNext >= 0;\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildChanged(childKey, childSnap, oldChildSnap)\n          );\n        }\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(childKey, oldChildSnap)\n          );\n        }\n        const newEventCache = oldEventCache.updateImmediateChild(\n          childKey,\n          ChildrenNode.EMPTY_NODE\n        );\n        const nextChildInRange =\n          nextChild != null && this.rangedFilter_.matches(nextChild);\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(\n              changeChildAdded(nextChild.name, nextChild.node)\n            );\n          }\n          return newEventCache.updateImmediateChild(\n            nextChild.name,\n            nextChild.node\n          );\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(windowBoundary.name, windowBoundary.node)\n          );\n          changeAccumulator.trackChildChange(\n            changeChildAdded(childKey, childSnap)\n          );\n        }\n        return oldEventCache\n          .updateImmediateChild(childKey, childSnap)\n          .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, stringify } from '@firebase/util';\nimport { MIN_NAME, MAX_NAME } from '../util/util';\nimport { predecessor, successor } from '../util/NextPushId';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../snap/indexes/ValueIndex';\nimport { PathIndex } from '../snap/indexes/PathIndex';\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { LimitedFilter } from './filter/LimitedFilter';\nimport { RangedFilter } from './filter/RangedFilter';\nimport { NodeFilter } from './filter/NodeFilter';\nimport { Index } from '../snap/indexes/Index';\n\n/**\n * Wire Protocol Constants\n */\nconst enum WIRE_PROTOCOL_CONSTANTS {\n  INDEX_START_VALUE = 'sp',\n  INDEX_START_NAME = 'sn',\n  INDEX_END_VALUE = 'ep',\n  INDEX_END_NAME = 'en',\n  LIMIT = 'l',\n  VIEW_FROM = 'vf',\n  VIEW_FROM_LEFT = 'l',\n  VIEW_FROM_RIGHT = 'r',\n  INDEX = 'i'\n}\n\n/**\n * REST Query Constants\n */\nconst enum REST_QUERY_CONSTANTS {\n  ORDER_BY = 'orderBy',\n  PRIORITY_INDEX = '$priority',\n  VALUE_INDEX = '$value',\n  KEY_INDEX = '$key',\n  START_AT = 'startAt',\n  END_AT = 'endAt',\n  LIMIT_TO_FIRST = 'limitToFirst',\n  LIMIT_TO_LAST = 'limitToLast'\n}\n\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n */\nexport class QueryParams {\n  limitSet_ = false;\n  startSet_ = false;\n  startNameSet_ = false;\n  startAfterSet_ = false;\n  endSet_ = false;\n  endNameSet_ = false;\n  endBeforeSet_ = false;\n  limit_ = 0;\n  viewFrom_ = '';\n  indexStartValue_: unknown | null = null;\n  indexStartName_ = '';\n  indexEndValue_: unknown | null = null;\n  indexEndName_ = '';\n  index_ = PRIORITY_INDEX;\n\n  hasStart(): boolean {\n    return this.startSet_;\n  }\n\n  hasStartAfter(): boolean {\n    return this.startAfterSet_;\n  }\n\n  hasEndBefore(): boolean {\n    return this.endBeforeSet_;\n  }\n\n  /**\n   * @return True if it would return from left.\n   */\n  isViewFromLeft(): boolean {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n    }\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true\n   */\n  getIndexStartValue(): unknown {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true.\n   * Returns the starting key name for the range defined by these query parameters\n   */\n  getIndexStartName(): string {\n    assert(this.startSet_, 'Only valid if start has been set');\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  }\n\n  hasEnd(): boolean {\n    return this.endSet_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   */\n  getIndexEndValue(): unknown {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   * Returns the end key name for the range defined by these query parameters\n   */\n  getIndexEndName(): string {\n    assert(this.endSet_, 'Only valid if end has been set');\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  }\n\n  hasLimit(): boolean {\n    return this.limitSet_;\n  }\n\n  /**\n   * @return True if a limit has been set and it has been explicitly anchored\n   */\n  hasAnchoredLimit(): boolean {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  }\n\n  /**\n   * Only valid to call if hasLimit() returns true\n   */\n  getLimit(): number {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  }\n\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  loadsAllData(): boolean {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  }\n\n  isDefault(): boolean {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  }\n\n  copy(): QueryParams {\n    const copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  }\n}\n\nexport function queryParamsGetNodeFilter(queryParams: QueryParams): NodeFilter {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nexport function queryParamsLimit(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = '';\n  return newParams;\n}\n\nexport function queryParamsLimitToFirst(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n  return newParams;\n}\n\nexport function queryParamsLimitToLast(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n  return newParams;\n}\n\nexport function queryParamsStartAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.startSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexStartValue_ = indexValue;\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsStartAfter(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = successor(indexValue as string);\n    }\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    let childKey: string;\n    if (key == null) {\n      childKey = MAX_NAME;\n    } else {\n      childKey = successor(key);\n    }\n    params = queryParamsStartAt(queryParams, indexValue, childKey);\n  }\n  params.startAfterSet_ = true;\n  return params;\n}\n\nexport function queryParamsEndAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.endSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexEndValue_ = indexValue;\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsEndBefore(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let childKey: string;\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = predecessor(indexValue as string);\n    }\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    if (key == null) {\n      childKey = MIN_NAME;\n    } else {\n      childKey = predecessor(key);\n    }\n    params = queryParamsEndAt(queryParams, indexValue, childKey);\n  }\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nexport function queryParamsOrderBy(\n  queryParams: QueryParams,\n  index: Index\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n\n/**\n * Returns a set of REST query string parameters representing this query.\n *\n * @return query string parameters\n */\nexport function queryParamsToRestQueryStringParameters(\n  queryParams: QueryParams\n): Record<string, string | number> {\n  const qs: Record<string, string | number> = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  let orderBy;\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.PRIORITY_INDEX;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.VALUE_INDEX;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.KEY_INDEX;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n  qs[REST_QUERY_CONSTANTS.ORDER_BY] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    qs[REST_QUERY_CONSTANTS.START_AT] = stringify(queryParams.indexStartValue_);\n    if (queryParams.startNameSet_) {\n      qs[REST_QUERY_CONSTANTS.START_AT] +=\n        ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    qs[REST_QUERY_CONSTANTS.END_AT] = stringify(queryParams.indexEndValue_);\n    if (queryParams.endNameSet_) {\n      qs[REST_QUERY_CONSTANTS.END_AT] +=\n        ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_FIRST] = queryParams.limit_;\n    } else {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_LAST] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nexport function queryParamsGetQueryObject(\n  queryParams: QueryParams\n): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  if (queryParams.startSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] =\n      queryParams.indexStartValue_;\n    if (queryParams.startNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] =\n        queryParams.indexStartName_;\n    }\n  }\n  if (queryParams.endSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = queryParams.indexEndValue_;\n    if (queryParams.endNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = queryParams.indexEndName_;\n    }\n  }\n  if (queryParams.limitSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = queryParams.limit_;\n    let viewFrom = queryParams.viewFrom_;\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n      } else {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n      }\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n  }\n  // For now, priority index is the default, so we only specify if it's some other index\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = queryParams.index_.toString();\n  }\n  return obj;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  Deferred,\n  errorPrefix,\n  validateArgCount,\n  validateCallback,\n  validateContextObject\n} from '@firebase/util';\nimport { KEY_INDEX } from '../core/snap/indexes/KeyIndex';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../core/snap/indexes/ValueIndex';\nimport { PathIndex } from '../core/snap/indexes/PathIndex';\nimport { MAX_NAME, MIN_NAME, ObjectToUniqueKey } from '../core/util/util';\nimport {\n  Path,\n  pathEquals,\n  pathIsEmpty,\n  pathToUrlEncodedString\n} from '../core/util/Path';\nimport {\n  isValidPriority,\n  validateEventType,\n  validateFirebaseDataArg,\n  validateKey,\n  validatePathString\n} from '../core/util/validation';\n\nimport {\n  ChildEventRegistration,\n  EventRegistration,\n  ValueEventRegistration\n} from '../core/view/EventRegistration';\n\nimport { Repo } from '../core/Repo';\nimport {\n  QueryParams,\n  queryParamsLimitToFirst,\n  queryParamsLimitToLast,\n  queryParamsStartAfter,\n  queryParamsStartAt,\n  queryParamsEndAt,\n  queryParamsEndBefore,\n  queryParamsGetQueryObject,\n  queryParamsOrderBy\n} from '../core/view/QueryParams';\nimport { Reference } from './Reference';\nimport { DataSnapshot } from './DataSnapshot';\n\nlet __referenceConstructor: new (repo: Repo, path: Path) => Query;\n\nexport interface SnapshotCallback {\n  (a: DataSnapshot, b?: string | null): unknown;\n}\n\n/**\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\n *\n * Since every Firebase reference is a query, Firebase inherits from this object.\n */\nexport class Query {\n  static set __referenceConstructor(val) {\n    __referenceConstructor = val;\n  }\n\n  static get __referenceConstructor() {\n    assert(__referenceConstructor, 'Reference.ts has not been loaded');\n    return __referenceConstructor;\n  }\n\n  constructor(\n    public repo: Repo,\n    public path: Path,\n    private queryParams_: QueryParams,\n    private orderByCalled_: boolean\n  ) {}\n\n  /**\n   * Validates start/end values for queries.\n   */\n  private static validateQueryEndpoints_(params: QueryParams) {\n    let startNode = null;\n    let endNode = null;\n    if (params.hasStart()) {\n      startNode = params.getIndexStartValue();\n    }\n    if (params.hasEnd()) {\n      endNode = params.getIndexEndValue();\n    }\n\n    if (params.getIndex() === KEY_INDEX) {\n      const tooManyArgsError =\n        'Query: When ordering by key, you may only pass one argument to ' +\n        'startAt(), endAt(), or equalTo().';\n      const wrongArgTypeError =\n        'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\n        'endAt(), endBefore(), or equalTo() must be a string.';\n      if (params.hasStart()) {\n        const startName = params.getIndexStartName();\n        if (startName !== MIN_NAME) {\n          throw new Error(tooManyArgsError);\n        } else if (typeof startNode !== 'string') {\n          throw new Error(wrongArgTypeError);\n        }\n      }\n      if (params.hasEnd()) {\n        const endName = params.getIndexEndName();\n        if (endName !== MAX_NAME) {\n          throw new Error(tooManyArgsError);\n        } else if (typeof endNode !== 'string') {\n          throw new Error(wrongArgTypeError);\n        }\n      }\n    } else if (params.getIndex() === PRIORITY_INDEX) {\n      if (\n        (startNode != null && !isValidPriority(startNode)) ||\n        (endNode != null && !isValidPriority(endNode))\n      ) {\n        throw new Error(\n          'Query: When ordering by priority, the first argument passed to startAt(), ' +\n            'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\n            '(null, a number, or a string).'\n        );\n      }\n    } else {\n      assert(\n        params.getIndex() instanceof PathIndex ||\n          params.getIndex() === VALUE_INDEX,\n        'unknown index type.'\n      );\n      if (\n        (startNode != null && typeof startNode === 'object') ||\n        (endNode != null && typeof endNode === 'object')\n      ) {\n        throw new Error(\n          'Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\n            'equalTo() cannot be an object.'\n        );\n      }\n    }\n  }\n\n  /**\n   * Validates that limit* has been called with the correct combination of parameters\n   */\n  private static validateLimit_(params: QueryParams) {\n    if (\n      params.hasStart() &&\n      params.hasEnd() &&\n      params.hasLimit() &&\n      !params.hasAnchoredLimit()\n    ) {\n      throw new Error(\n        \"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\n          'limitToFirst() or limitToLast() instead.'\n      );\n    }\n  }\n\n  /**\n   * Validates that no other order by call has been made\n   */\n  private validateNoPreviousOrderByCall_(fnName: string) {\n    if (this.orderByCalled_ === true) {\n      throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n    }\n  }\n\n  getQueryParams(): QueryParams {\n    return this.queryParams_;\n  }\n\n  getRef(): Reference {\n    validateArgCount('Query.ref', 0, 0, arguments.length);\n    // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\n    // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\n    // method gets called.\n    return new Query.__referenceConstructor(this.repo, this.path) as Reference;\n  }\n\n  on(\n    eventType: string,\n    callback: SnapshotCallback,\n    cancelCallbackOrContext?: ((a: Error) => unknown) | object | null,\n    context?: object | null\n  ): SnapshotCallback {\n    validateArgCount('Query.on', 2, 4, arguments.length);\n    validateEventType('Query.on', 1, eventType, false);\n    validateCallback('Query.on', 2, callback, false);\n\n    const ret = Query.getCancelAndContextArgs_(\n      'Query.on',\n      cancelCallbackOrContext,\n      context\n    );\n\n    if (eventType === 'value') {\n      this.onValueEvent(callback, ret.cancel, ret.context);\n    } else {\n      const callbacks: { [k: string]: typeof callback } = {};\n      callbacks[eventType] = callback;\n      this.onChildEvent(callbacks, ret.cancel, ret.context);\n    }\n    return callback;\n  }\n\n  protected onValueEvent(\n    callback: (a: DataSnapshot) => void,\n    cancelCallback: ((a: Error) => void) | null,\n    context: object | null\n  ) {\n    const container = new ValueEventRegistration(\n      callback,\n      cancelCallback || null,\n      context || null\n    );\n    this.repo.addEventCallbackForQuery(this, container);\n  }\n\n  onChildEvent(\n    callbacks: { [k: string]: SnapshotCallback },\n    cancelCallback: ((a: Error) => unknown) | null,\n    context: object | null\n  ) {\n    const container = new ChildEventRegistration(\n      callbacks,\n      cancelCallback,\n      context\n    );\n    this.repo.addEventCallbackForQuery(this, container);\n  }\n\n  off(\n    eventType?: string,\n    callback?: SnapshotCallback,\n    context?: object | null\n  ): void {\n    validateArgCount('Query.off', 0, 3, arguments.length);\n    validateEventType('Query.off', 1, eventType, true);\n    validateCallback('Query.off', 2, callback, true);\n    validateContextObject('Query.off', 3, context, true);\n\n    let container: EventRegistration | null = null;\n    let callbacks: { [k: string]: typeof callback } | null = null;\n    if (eventType === 'value') {\n      const valueCallback = callback || null;\n      container = new ValueEventRegistration(\n        valueCallback,\n        null,\n        context || null\n      );\n    } else if (eventType) {\n      if (callback) {\n        callbacks = {};\n        callbacks[eventType] = callback;\n      }\n      container = new ChildEventRegistration(callbacks, null, context || null);\n    }\n    this.repo.removeEventCallbackForQuery(this, container);\n  }\n\n  /**\n   * Get the server-value for this query, or return a cached value if not connected.\n   */\n  get(): Promise<DataSnapshot> {\n    return this.repo.getValue(this);\n  }\n\n  /**\n   * Attaches a listener, waits for the first event, and then removes the listener\n   */\n  once(\n    eventType: string,\n    userCallback?: SnapshotCallback,\n    failureCallbackOrContext?: ((a: Error) => void) | object | null,\n    context?: object | null\n  ): Promise<DataSnapshot> {\n    validateArgCount('Query.once', 1, 4, arguments.length);\n    validateEventType('Query.once', 1, eventType, false);\n    validateCallback('Query.once', 2, userCallback, true);\n\n    const ret = Query.getCancelAndContextArgs_(\n      'Query.once',\n      failureCallbackOrContext,\n      context\n    );\n\n    // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\n    // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\n    // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\n    // against the Promise specification.\n    let firstCall = true;\n    const deferred = new Deferred<DataSnapshot>();\n\n    // A dummy error handler in case a user wasn't expecting promises\n    deferred.promise.catch(() => {});\n\n    const onceCallback = (snapshot: DataSnapshot) => {\n      // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\n      // triggers multiple events (e.g. child_added or child_changed).\n      if (firstCall) {\n        firstCall = false;\n        this.off(eventType, onceCallback);\n\n        if (userCallback) {\n          userCallback.bind(ret.context)(snapshot);\n        }\n        deferred.resolve(snapshot);\n      }\n    };\n\n    this.on(\n      eventType,\n      onceCallback,\n      /*cancel=*/ err => {\n        this.off(eventType, onceCallback);\n\n        if (ret.cancel) {\n          ret.cancel.bind(ret.context)(err);\n        }\n        deferred.reject(err);\n      }\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Set a limit and anchor it to the start of the window.\n   */\n  limitToFirst(limit: number): Query {\n    validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\n    if (\n      typeof limit !== 'number' ||\n      Math.floor(limit) !== limit ||\n      limit <= 0\n    ) {\n      throw new Error(\n        'Query.limitToFirst: First argument must be a positive integer.'\n      );\n    }\n    if (this.queryParams_.hasLimit()) {\n      throw new Error(\n        'Query.limitToFirst: Limit was already set (by another call to limit, ' +\n          'limitToFirst, or limitToLast).'\n      );\n    }\n\n    return new Query(\n      this.repo,\n      this.path,\n      queryParamsLimitToFirst(this.queryParams_, limit),\n      this.orderByCalled_\n    );\n  }\n\n  /**\n   * Set a limit and anchor it to the end of the window.\n   */\n  limitToLast(limit: number): Query {\n    validateArgCount('Query.limitToLast', 1, 1, arguments.length);\n    if (\n      typeof limit !== 'number' ||\n      Math.floor(limit) !== limit ||\n      limit <= 0\n    ) {\n      throw new Error(\n        'Query.limitToLast: First argument must be a positive integer.'\n      );\n    }\n    if (this.queryParams_.hasLimit()) {\n      throw new Error(\n        'Query.limitToLast: Limit was already set (by another call to limit, ' +\n          'limitToFirst, or limitToLast).'\n      );\n    }\n\n    return new Query(\n      this.repo,\n      this.path,\n      queryParamsLimitToLast(this.queryParams_, limit),\n      this.orderByCalled_\n    );\n  }\n\n  /**\n   * Given a child path, return a new query ordered by the specified grandchild path.\n   */\n  orderByChild(path: string): Query {\n    validateArgCount('Query.orderByChild', 1, 1, arguments.length);\n    if (path === '$key') {\n      throw new Error(\n        'Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.'\n      );\n    } else if (path === '$priority') {\n      throw new Error(\n        'Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.'\n      );\n    } else if (path === '$value') {\n      throw new Error(\n        'Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.'\n      );\n    }\n    validatePathString('Query.orderByChild', 1, path, false);\n    this.validateNoPreviousOrderByCall_('Query.orderByChild');\n    const parsedPath = new Path(path);\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error(\n        'Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.'\n      );\n    }\n    const index = new PathIndex(parsedPath);\n    const newParams = queryParamsOrderBy(this.queryParams_, index);\n    Query.validateQueryEndpoints_(newParams);\n\n    return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\n  }\n\n  /**\n   * Return a new query ordered by the KeyIndex\n   */\n  orderByKey(): Query {\n    validateArgCount('Query.orderByKey', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByKey');\n    const newParams = queryParamsOrderBy(this.queryParams_, KEY_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\n  }\n\n  /**\n   * Return a new query ordered by the PriorityIndex\n   */\n  orderByPriority(): Query {\n    validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByPriority');\n    const newParams = queryParamsOrderBy(this.queryParams_, PRIORITY_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\n  }\n\n  /**\n   * Return a new query ordered by the ValueIndex\n   */\n  orderByValue(): Query {\n    validateArgCount('Query.orderByValue', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByValue');\n    const newParams = queryParamsOrderBy(this.queryParams_, VALUE_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\n  }\n\n  startAt(\n    value: number | string | boolean | null = null,\n    name?: string | null\n  ): Query {\n    validateArgCount('Query.startAt', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\n    validateKey('Query.startAt', 2, name, true);\n\n    const newParams = queryParamsStartAt(this.queryParams_, value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n    if (this.queryParams_.hasStart()) {\n      throw new Error(\n        'Query.startAt: Starting point was already set (by another call to startAt ' +\n          'or equalTo).'\n      );\n    }\n\n    // Calling with no params tells us to start at the beginning.\n    if (value === undefined) {\n      value = null;\n      name = null;\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  }\n\n  startAfter(\n    value: number | string | boolean | null = null,\n    name?: string | null\n  ): Query {\n    validateArgCount('Query.startAfter', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.startAfter', 1, value, this.path, false);\n    validateKey('Query.startAfter', 2, name, true);\n\n    const newParams = queryParamsStartAfter(this.queryParams_, value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n    if (this.queryParams_.hasStart()) {\n      throw new Error(\n        'Query.startAfter: Starting point was already set (by another call to startAt, startAfter ' +\n          'or equalTo).'\n      );\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  }\n\n  endAt(\n    value: number | string | boolean | null = null,\n    name?: string | null\n  ): Query {\n    validateArgCount('Query.endAt', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\n    validateKey('Query.endAt', 2, name, true);\n\n    const newParams = queryParamsEndAt(this.queryParams_, value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n    if (this.queryParams_.hasEnd()) {\n      throw new Error(\n        'Query.endAt: Ending point was already set (by another call to endAt, endBefore, or ' +\n          'equalTo).'\n      );\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  }\n\n  endBefore(\n    value: number | string | boolean | null = null,\n    name?: string | null\n  ): Query {\n    validateArgCount('Query.endBefore', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.endBefore', 1, value, this.path, false);\n    validateKey('Query.endBefore', 2, name, true);\n\n    const newParams = queryParamsEndBefore(this.queryParams_, value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n    if (this.queryParams_.hasEnd()) {\n      throw new Error(\n        'Query.endBefore: Ending point was already set (by another call to endAt, endBefore, or ' +\n          'equalTo).'\n      );\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  }\n\n  /**\n   * Load the selection of children with exactly the specified value, and, optionally,\n   * the specified name.\n   */\n  equalTo(value: number | string | boolean | null, name?: string) {\n    validateArgCount('Query.equalTo', 1, 2, arguments.length);\n    validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\n    validateKey('Query.equalTo', 2, name, true);\n    if (this.queryParams_.hasStart()) {\n      throw new Error(\n        'Query.equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\n          'equalTo).'\n      );\n    }\n    if (this.queryParams_.hasEnd()) {\n      throw new Error(\n        'Query.equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\n          'equalTo).'\n      );\n    }\n    return this.startAt(value, name).endAt(value, name);\n  }\n\n  /**\n   * @return URL for this location.\n   */\n  toString(): string {\n    validateArgCount('Query.toString', 0, 0, arguments.length);\n\n    return this.repo.toString() + pathToUrlEncodedString(this.path);\n  }\n\n  // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users.\n  toJSON() {\n    // An optional spacer argument is unnecessary for a string.\n    validateArgCount('Query.toJSON', 0, 1, arguments.length);\n    return this.toString();\n  }\n\n  /**\n   * An object representation of the query parameters used by this Query.\n   */\n  queryObject(): object {\n    return queryParamsGetQueryObject(this.queryParams_);\n  }\n\n  queryIdentifier(): string {\n    const obj = this.queryObject();\n    const id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  }\n\n  /**\n   * Return true if this query and the provided query are equivalent; otherwise, return false.\n   */\n  isEqual(other: Query): boolean {\n    validateArgCount('Query.isEqual', 1, 1, arguments.length);\n    if (!(other instanceof Query)) {\n      const error =\n        'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\n      throw new Error(error);\n    }\n\n    const sameRepo = this.repo === other.repo;\n    const samePath = pathEquals(this.path, other.path);\n    const sameQueryIdentifier =\n      this.queryIdentifier() === other.queryIdentifier();\n\n    return sameRepo && samePath && sameQueryIdentifier;\n  }\n\n  /**\n   * Helper used by .on and .once to extract the context and or cancel arguments.\n   * @param fnName The function name (on or once)\n   *\n   */\n  private static getCancelAndContextArgs_(\n    fnName: string,\n    cancelOrContext?: ((a: Error) => void) | object | null,\n    context?: object | null\n  ): { cancel: ((a: Error) => void) | null; context: object | null } {\n    const ret: {\n      cancel: ((a: Error) => void) | null;\n      context: object | null;\n    } = { cancel: null, context: null };\n    if (cancelOrContext && context) {\n      ret.cancel = cancelOrContext as (a: Error) => void;\n      validateCallback(fnName, 3, ret.cancel, true);\n\n      ret.context = context;\n      validateContextObject(fnName, 4, ret.context, true);\n    } else if (cancelOrContext) {\n      // we have either a cancel callback or a context.\n      if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\n        // it's a context!\n        ret.context = cancelOrContext;\n      } else if (typeof cancelOrContext === 'function') {\n        ret.cancel = cancelOrContext as (a: Error) => void;\n      } else {\n        throw new Error(\n          errorPrefix(fnName, 3, true) +\n            ' must either be a cancel callback or a context object.'\n        );\n      }\n    }\n    return ret;\n  }\n\n  get ref(): Reference {\n    return this.getRef();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\nimport { Path, pathChild } from './Path';\nimport { LeafNode } from '../snap/LeafNode';\nimport { nodeFromJSON } from '../snap/nodeFromJSON';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { Node } from '../snap/Node';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { SyncTree } from '../SyncTree';\nimport { Indexable } from './misc';\n\n/* It's critical for performance that we do not calculate actual values from a SyncTree\n * unless and until the value is needed. Because we expose both a SyncTree and Node\n * version of deferred value resolution, we ned a wrapper class that will let us share\n * code.\n *\n * @see https://github.com/firebase/firebase-js-sdk/issues/2487\n */\ninterface ValueProvider {\n  getImmediateChild(childName: string): ValueProvider;\n  node(): Node;\n}\n\nclass ExistingValueProvider implements ValueProvider {\n  constructor(readonly node_: Node) {}\n\n  getImmediateChild(childName: string): ValueProvider {\n    const child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  }\n\n  node(): Node {\n    return this.node_;\n  }\n}\n\nclass DeferredValueProvider implements ValueProvider {\n  private syncTree_: SyncTree;\n  private path_: Path;\n\n  constructor(syncTree: SyncTree, path: Path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  getImmediateChild(childName: string): ValueProvider {\n    const childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  }\n\n  node(): Node {\n    return this.syncTree_.calcCompleteEventCache(this.path_);\n  }\n}\n\n/**\n * Generate placeholders for deferred values.\n */\nexport const generateWithValues = function (\n  values: {\n    [k: string]: unknown;\n  } | null\n): { [k: string]: unknown } {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n */\nexport const resolveDeferredLeafValue = function (\n  value: { [k: string]: unknown } | string | number | boolean,\n  existingVal: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  if (!value || typeof value !== 'object') {\n    return value as string | number | boolean;\n  }\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal, serverValues);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nconst resolveScalarDeferredValue = function (\n  op: string,\n  existing: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'] as string | number | boolean;\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nconst resolveComplexDeferredValue = function (\n  op: object,\n  existing: ValueProvider,\n  unused: { [k: string]: unknown }\n): string | number | boolean {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n  const delta = op['increment'];\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  const existingNode = existing.node();\n  assert(\n    existingNode !== null && typeof existingNode !== 'undefined',\n    'Expected ChildrenNode.EMPTY_NODE for nulls'\n  );\n\n  // Incrementing a non-number sets the value to the incremented amount\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  const leaf = existingNode as LeafNode;\n  const existingVal = leaf.getValue();\n  if (typeof existingVal !== 'number') {\n    return delta;\n  }\n\n  // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n  return existingVal + delta;\n};\n\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param path path to which write is relative\n * @param node new data written at path\n * @param syncTree current data\n */\nexport const resolveDeferredValueTree = function (\n  path: Path,\n  node: Node,\n  syncTree: SyncTree,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new DeferredValueProvider(syncTree, path),\n    serverValues\n  );\n};\n\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n */\nexport const resolveDeferredValueSnapshot = function (\n  node: Node,\n  existing: Node,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new ExistingValueProvider(existing),\n    serverValues\n  );\n};\n\nfunction resolveDeferredValue(\n  node: Node,\n  existingVal: ValueProvider,\n  serverValues: Indexable\n): Node {\n  const rawPri = node.getPriority().val() as\n    | Indexable\n    | boolean\n    | null\n    | number\n    | string;\n  const priority = resolveDeferredLeafValue(\n    rawPri,\n    existingVal.getImmediateChild('.priority'),\n    serverValues\n  );\n  let newNode: Node;\n\n  if (node.isLeafNode()) {\n    const leafNode = node as LeafNode;\n    const value = resolveDeferredLeafValue(\n      leafNode.getValue(),\n      existingVal,\n      serverValues\n    );\n    if (\n      value !== leafNode.getValue() ||\n      priority !== leafNode.getPriority().val()\n    ) {\n      return new LeafNode(value, nodeFromJSON(priority));\n    } else {\n      return node;\n    }\n  } else {\n    const childrenNode = node as ChildrenNode;\n    newNode = childrenNode;\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n    childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\n      const newChildNode = resolveDeferredValue(\n        childNode,\n        existingVal.getImmediateChild(childName),\n        serverValues\n      );\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path, pathGetFront, pathIsEmpty, pathPopFront } from './util/Path';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { Node } from './snap/Node';\n\n/**\n * Helper class to store a sparse set of snapshots.\n */\nexport class SparseSnapshotTree {\n  private value: Node | null = null;\n\n  private readonly children: Map<string, SparseSnapshotTree> = new Map();\n\n  /**\n   * Gets the node stored at the given path if one exists.\n   *\n   * @param path Path to look up snapshot for.\n   * @return The retrieved node, or null.\n   */\n  find(path: Path): Node | null {\n    if (this.value != null) {\n      return this.value.getChild(path);\n    } else if (!pathIsEmpty(path) && this.children.size > 0) {\n      const childKey = pathGetFront(path);\n      path = pathPopFront(path);\n      if (this.children.has(childKey)) {\n        const childTree = this.children.get(childKey);\n        return childTree.find(path);\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Stores the given node at the specified path. If there is already a node\n   * at a shallower path, it merges the new data into that snapshot node.\n   *\n   * @param path Path to look up snapshot for.\n   * @param data The new data, or null.\n   */\n  remember(path: Path, data: Node) {\n    if (pathIsEmpty(path)) {\n      this.value = data;\n      this.children.clear();\n    } else if (this.value !== null) {\n      this.value = this.value.updateChild(path, data);\n    } else {\n      const childKey = pathGetFront(path);\n      if (!this.children.has(childKey)) {\n        this.children.set(childKey, new SparseSnapshotTree());\n      }\n\n      const child = this.children.get(childKey);\n      path = pathPopFront(path);\n      child.remember(path, data);\n    }\n  }\n\n  /**\n   * Purge the data at path from the cache.\n   *\n   * @param path Path to look up snapshot for.\n   * @return True if this node should now be removed.\n   */\n  forget(path: Path): boolean {\n    if (pathIsEmpty(path)) {\n      this.value = null;\n      this.children.clear();\n      return true;\n    } else {\n      if (this.value !== null) {\n        if (this.value.isLeafNode()) {\n          // We're trying to forget a node that doesn't exist\n          return false;\n        } else {\n          const value = this.value;\n          this.value = null;\n\n          const self = this;\n          value.forEachChild(PRIORITY_INDEX, (key, tree) => {\n            self.remember(new Path(key), tree);\n          });\n\n          return this.forget(path);\n        }\n      } else if (this.children.size > 0) {\n        const childKey = pathGetFront(path);\n        path = pathPopFront(path);\n        if (this.children.has(childKey)) {\n          const safeToRemove = this.children.get(childKey).forget(path);\n          if (safeToRemove) {\n            this.children.delete(childKey);\n          }\n        }\n\n        return this.children.size === 0;\n      } else {\n        return true;\n      }\n    }\n  }\n\n  /**\n   * Recursively iterates through all of the stored tree and calls the\n   * callback on each one.\n   *\n   * @param prefixPath Path to look up node for.\n   * @param func The function to invoke for each tree.\n   */\n  forEachTree(prefixPath: Path, func: (a: Path, b: Node) => unknown) {\n    if (this.value !== null) {\n      func(prefixPath, this.value);\n    } else {\n      this.forEachChild((key, tree) => {\n        const path = new Path(prefixPath.toString() + '/' + key);\n        tree.forEachTree(path, func);\n      });\n    }\n  }\n\n  /**\n   * Iterates through each immediate child and triggers the callback.\n   *\n   * @param func The function to invoke for each child.\n   */\n  forEachChild(func: (a: string, b: SparseSnapshotTree) => void) {\n    this.children.forEach((tree, key) => {\n      func(key, tree);\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\n/**\n *\n * @enum\n */\nexport enum OperationType {\n  OVERWRITE,\n  MERGE,\n  ACK_USER_WRITE,\n  LISTEN_COMPLETE\n}\n\n/**\n * @interface\n */\nexport interface Operation {\n  source: OperationSource;\n\n  type: OperationType;\n\n  path: Path;\n\n  operationForChild(childName: string): Operation | null;\n}\n\nexport interface OperationSource {\n  fromUser: boolean;\n  fromServer: boolean;\n  queryId: string | null;\n  tagged: boolean;\n}\n\nexport function newOperationSourceUser(): OperationSource {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServer(): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServerTaggedQuery(\n  queryId: string\n): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId,\n    tagged: true\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\nimport { newOperationSourceUser, Operation, OperationType } from './Operation';\nimport { ImmutableTree } from '../util/ImmutableTree';\n\nexport class AckUserWrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.ACK_USER_WRITE;\n\n  /** @inheritDoc */\n  source = newOperationSourceUser();\n\n  /**\n   * @param affectedTree A tree containing true for each affected path. Affected paths can't overlap.\n   */\n  constructor(\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public affectedTree: ImmutableTree<boolean>,\n    /** @inheritDoc */ public revert: boolean\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  operationForChild(childName: string): AckUserWrite {\n    if (!pathIsEmpty(this.path)) {\n      assert(\n        pathGetFront(this.path) === childName,\n        'operationForChild called for unrelated child.'\n      );\n      return new AckUserWrite(\n        pathPopFront(this.path),\n        this.affectedTree,\n        this.revert\n      );\n    } else if (this.affectedTree.value != null) {\n      assert(\n        this.affectedTree.children.isEmpty(),\n        'affectedTree should not have overlapping affected paths.'\n      );\n      // All child locations are affected as well; just return same operation.\n      return this;\n    } else {\n      const childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(newEmptyPath(), childTree, this.revert);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SortedMap } from './SortedMap';\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './Path';\nimport { each, stringCompare } from './util';\n\nlet emptyChildrenSingleton: SortedMap<string, ImmutableTree<null>>;\n\n/**\n * Singleton empty children collection.\n *\n */\nconst EmptyChildren = (): SortedMap<string, ImmutableTree<null>> => {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap<string, ImmutableTree<null>>(\n      stringCompare\n    );\n  }\n  return emptyChildrenSingleton;\n};\n\n/**\n * A tree with immutable elements.\n */\nexport class ImmutableTree<T> {\n  static fromObject<T>(obj: { [k: string]: T }): ImmutableTree<T> {\n    let tree: ImmutableTree<T> = new ImmutableTree<T>(null);\n    each(obj, (childPath: string, childSnap: T) => {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  }\n\n  constructor(\n    public readonly value: T | null,\n    public readonly children: SortedMap<\n      string,\n      ImmutableTree<T>\n    > = EmptyChildren()\n  ) {}\n\n  /**\n   * True if the value is empty and there are no children\n   */\n  isEmpty(): boolean {\n    return this.value === null && this.children.isEmpty();\n  }\n\n  /**\n   * Given a path and predicate, return the first node and the path to that node\n   * where the predicate returns true.\n   *\n   * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\n   * on the way back out, it may be better to pass down a pathSoFar obj.\n   *\n   * @param relativePath The remainder of the path\n   * @param predicate The predicate to satisfy to return a node\n   */\n  findRootMostMatchingPathAndValue(\n    relativePath: Path,\n    predicate: (a: T) => boolean\n  ): { path: Path; value: T } | null {\n    if (this.value != null && predicate(this.value)) {\n      return { path: newEmptyPath(), value: this.value };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        const front = pathGetFront(relativePath);\n        const child = this.children.get(front);\n        if (child !== null) {\n          const childExistingPathAndValue = child.findRootMostMatchingPathAndValue(\n            pathPopFront(relativePath),\n            predicate\n          );\n          if (childExistingPathAndValue != null) {\n            const fullPath = pathChild(\n              new Path(front),\n              childExistingPathAndValue.path\n            );\n            return { path: fullPath, value: childExistingPathAndValue.value };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  /**\n   * Find, if it exists, the shortest subpath of the given path that points a defined\n   * value in the tree\n   */\n  findRootMostValueAndPath(\n    relativePath: Path\n  ): { path: Path; value: T } | null {\n    return this.findRootMostMatchingPathAndValue(relativePath, () => true);\n  }\n\n  /**\n   * @return The subtree at the given path\n   */\n  subtree(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      const front = pathGetFront(relativePath);\n      const childTree = this.children.get(front);\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Sets a value at the specified path.\n   *\n   * @param relativePath Path to set value at.\n   * @param toSet Value to set.\n   * @return Resulting tree.\n   */\n  set(relativePath: Path, toSet: T | null): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.set(pathPopFront(relativePath), toSet);\n      const newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Removes the value at the specified path.\n   *\n   * @param relativePath Path to value to remove.\n   * @return Resulting tree.\n   */\n  remove(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree<T>(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        const newChild = child.remove(pathPopFront(relativePath));\n        let newChildren;\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree<T>(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  }\n\n  /**\n   * Gets a value from the tree.\n   *\n   * @param relativePath Path to get value for.\n   * @return Value at path, or null.\n   */\n  get(relativePath: Path): T | null {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Replace the subtree at the specified path with the given new tree.\n   *\n   * @param relativePath Path to replace subtree for.\n   * @param newTree New tree.\n   * @return Resulting tree.\n   */\n  setTree(relativePath: Path, newTree: ImmutableTree<T>): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.setTree(pathPopFront(relativePath), newTree);\n      let newChildren;\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Performs a depth first fold on this tree. Transforms a tree into a single\n   * value, given a function that operates on the path to a node, an optional\n   * current value, and a map of child names to folded subtrees\n   */\n  fold<V>(fn: (path: Path, value: T, children: { [k: string]: V }) => V): V {\n    return this.fold_(newEmptyPath(), fn);\n  }\n\n  /**\n   * Recursive helper for public-facing fold() method\n   */\n  private fold_<V>(\n    pathSoFar: Path,\n    fn: (path: Path, value: T | null, children: { [k: string]: V }) => V\n  ): V {\n    const accum: { [k: string]: V } = {};\n    this.children.inorderTraversal(\n      (childKey: string, childTree: ImmutableTree<T>) => {\n        accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n      }\n    );\n    return fn(pathSoFar, this.value, accum);\n  }\n\n  /**\n   * Find the first matching value on the given path. Return the result of applying f to it.\n   */\n  findOnPath<V>(path: Path, f: (path: Path, value: T) => V | null): V | null {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  }\n\n  private findOnPath_<V>(\n    pathToFollow: Path,\n    pathSoFar: Path,\n    f: (path: Path, value: T) => V | null\n  ): V | null {\n    const result = this.value ? f(pathSoFar, this.value) : false;\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        const front = pathGetFront(pathToFollow)!;\n        const nextChild = this.children.get(front);\n        if (nextChild) {\n          return nextChild.findOnPath_(\n            pathPopFront(pathToFollow),\n            pathChild(pathSoFar, front),\n            f\n          );\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  foreachOnPath(\n    path: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  }\n\n  private foreachOnPath_(\n    pathToFollow: Path,\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n      const front = pathGetFront(pathToFollow);\n      const nextChild = this.children.get(front);\n      if (nextChild) {\n        return nextChild.foreachOnPath_(\n          pathPopFront(pathToFollow),\n          pathChild(currentRelativePath, front),\n          f\n        );\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Calls the given function for each node in the tree that has a value.\n   *\n   * @param f A function to be called with the path from the root of the tree to\n   * a node, and the value at that node. Called in depth-first order.\n   */\n  foreach(f: (path: Path, value: T) => void) {\n    this.foreach_(newEmptyPath(), f);\n  }\n\n  private foreach_(\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ) {\n    this.children.inorderTraversal((childName, childTree) => {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  }\n\n  foreachChild(f: (name: string, value: T) => void) {\n    this.children.inorderTraversal(\n      (childName: string, childTree: ImmutableTree<T>) => {\n        if (childTree.value) {\n          f(childName, childTree.value);\n        }\n      }\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class ListenComplete implements Operation {\n  /** @inheritDoc */\n  type = OperationType.LISTEN_COMPLETE;\n\n  constructor(public source: OperationSource, public path: Path) {}\n\n  operationForChild(childName: string): ListenComplete {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\nimport { Node } from '../snap/Node';\n\nexport class Overwrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) {}\n\n  operationForChild(childName: string): Overwrite {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(\n        this.source,\n        newEmptyPath(),\n        this.snap.getImmediateChild(childName)\n      );\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Overwrite } from './Overwrite';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\nimport { assert } from '@firebase/util';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport { Node } from '../snap/Node';\n\nexport class Merge implements Operation {\n  /** @inheritDoc */\n  type = OperationType.MERGE;\n\n  constructor(\n    /** @inheritDoc */ public source: OperationSource,\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public children: ImmutableTree<Node>\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  operationForChild(childName: string): Operation {\n    if (pathIsEmpty(this.path)) {\n      const childTree = this.children.subtree(new Path(childName));\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(\n        pathGetFront(this.path) === childName,\n        \"Can't get a merge for a child not on the path of the operation\"\n      );\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  toString(): string {\n    return (\n      'Operation(' +\n      this.path +\n      ': ' +\n      this.source.toString() +\n      ' merge: ' +\n      this.children.toString() +\n      ')'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\n\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nexport class CacheNode {\n  constructor(\n    private node_: Node,\n    private fullyInitialized_: boolean,\n    private filtered_: boolean\n  ) {}\n\n  /**\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n   */\n  isFullyInitialized(): boolean {\n    return this.fullyInitialized_;\n  }\n\n  /**\n   * Returns whether this node is potentially missing children due to a filter applied to the node\n   */\n  isFiltered(): boolean {\n    return this.filtered_;\n  }\n\n  isCompleteForPath(path: Path): boolean {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    const childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  }\n\n  isCompleteForChild(key: string): boolean {\n    return (\n      (this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key)\n    );\n  }\n\n  getNode(): Node {\n    return this.node_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CacheNode } from './CacheNode';\nimport { Node } from '../snap/Node';\n\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n */\nexport class ViewCache {\n  constructor(\n    private readonly eventCache_: CacheNode,\n    private readonly serverCache_: CacheNode\n  ) {}\n\n  updateEventSnap(\n    eventSnap: Node,\n    complete: boolean,\n    filtered: boolean\n  ): ViewCache {\n    return new ViewCache(\n      new CacheNode(eventSnap, complete, filtered),\n      this.serverCache_\n    );\n  }\n\n  updateServerSnap(\n    serverSnap: Node,\n    complete: boolean,\n    filtered: boolean\n  ): ViewCache {\n    return new ViewCache(\n      this.eventCache_,\n      new CacheNode(serverSnap, complete, filtered)\n    );\n  }\n\n  getEventCache(): CacheNode {\n    return this.eventCache_;\n  }\n\n  getCompleteEventSnap(): Node | null {\n    return this.eventCache_.isFullyInitialized()\n      ? this.eventCache_.getNode()\n      : null;\n  }\n\n  getServerCache(): CacheNode {\n    return this.serverCache_;\n  }\n\n  getCompleteServerSnap(): Node | null {\n    return this.serverCache_.isFullyInitialized()\n      ? this.serverCache_.getNode()\n      : null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Change,\n  ChangeType,\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from './Change';\nimport { assert, assertionError } from '@firebase/util';\n\nexport class ChildChangeAccumulator {\n  private readonly changeMap: Map<string, Change> = new Map();\n\n  trackChildChange(change: Change) {\n    const type = change.type;\n    const childKey = change.childName!;\n    assert(\n      type === ChangeType.CHILD_ADDED ||\n        type === ChangeType.CHILD_CHANGED ||\n        type === ChangeType.CHILD_REMOVED,\n      'Only child changes supported for tracking'\n    );\n    assert(\n      childKey !== '.priority',\n      'Only non-priority child changes can be tracked.'\n    );\n    const oldChange = this.changeMap.get(childKey);\n    if (oldChange) {\n      const oldType = oldChange.type;\n      if (\n        type === ChangeType.CHILD_ADDED &&\n        oldType === ChangeType.CHILD_REMOVED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(\n            childKey,\n            change.snapshotNode,\n            oldChange.snapshotNode\n          )\n        );\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.delete(childKey);\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildRemoved(childKey, oldChange.oldSnap)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildAdded(childKey, change.snapshotNode)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap)\n        );\n      } else {\n        throw assertionError(\n          'Illegal combination of changes: ' +\n            change +\n            ' occurred after ' +\n            oldChange\n        );\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  }\n\n  getChanges(): Change[] {\n    return Array.from(this.changeMap.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CacheNode } from './CacheNode';\nimport { NamedNode, Node } from '../snap/Node';\nimport { Index } from '../snap/indexes/Index';\nimport { WriteTreeRef } from '../WriteTree';\nimport { ViewCache } from './ViewCache';\n\n/**\n * Since updates to filtered nodes might require nodes to be pulled in from \"outside\" the node, this interface\n * can help to get complete children that can be pulled in.\n * A class implementing this interface takes potentially multiple sources (e.g. user writes, server data from\n * other views etc.) to try it's best to get a complete child that might be useful in pulling into the view.\n *\n * @interface\n */\nexport interface CompleteChildSource {\n  getCompleteChild(childKey: string): Node | null;\n\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null;\n}\n\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class NoCompleteChildSource_ implements CompleteChildSource {\n  /**\n   * @inheritDoc\n   */\n  getCompleteChild(childKey?: string): Node | null {\n    return null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getChildAfterChild(\n    index?: Index,\n    child?: NamedNode,\n    reverse?: boolean\n  ): NamedNode | null {\n    return null;\n  }\n}\n\n/**\n * Singleton instance.\n */\nexport const NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n */\nexport class WriteTreeCompleteChildSource implements CompleteChildSource {\n  constructor(\n    private writes_: WriteTreeRef,\n    private viewCache_: ViewCache,\n    private optCompleteServerCache_: Node | null = null\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  getCompleteChild(childKey: string): Node | null {\n    const node = this.viewCache_.getEventCache();\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      const serverNode =\n        this.optCompleteServerCache_ != null\n          ? new CacheNode(this.optCompleteServerCache_, true, false)\n          : this.viewCache_.getServerCache();\n      return this.writes_.calcCompleteChild(childKey, serverNode);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null {\n    const completeServerData =\n      this.optCompleteServerCache_ != null\n        ? this.optCompleteServerCache_\n        : this.viewCache_.getCompleteServerSnap();\n    const nodes = this.writes_.calcIndexedSlice(\n      completeServerData,\n      child,\n      1,\n      reverse,\n      index\n    );\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Operation, OperationType } from '../operation/Operation';\nimport { assert, assertionError } from '@firebase/util';\nimport { ChildChangeAccumulator } from './ChildChangeAccumulator';\nimport { Change, changeValue } from './Change';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetBack,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathParent,\n  pathPopFront\n} from '../util/Path';\nimport {\n  CompleteChildSource,\n  NO_COMPLETE_CHILD_SOURCE,\n  WriteTreeCompleteChildSource\n} from './CompleteChildSource';\nimport { ViewCache } from './ViewCache';\nimport { NodeFilter } from './filter/NodeFilter';\nimport { WriteTreeRef } from '../WriteTree';\nimport { Overwrite } from '../operation/Overwrite';\nimport { Merge } from '../operation/Merge';\nimport { AckUserWrite } from '../operation/AckUserWrite';\nimport { Node } from '../snap/Node';\n\nexport class ProcessorResult {\n  constructor(\n    public readonly viewCache: ViewCache,\n    public readonly changes: Change[]\n  ) {}\n}\n\n/**\n */\nexport class ViewProcessor {\n  constructor(private readonly filter_: NodeFilter) {}\n\n  assertIndexed(viewCache: ViewCache) {\n    assert(\n      viewCache.getEventCache().getNode().isIndexed(this.filter_.getIndex()),\n      'Event snap not indexed'\n    );\n    assert(\n      viewCache.getServerCache().getNode().isIndexed(this.filter_.getIndex()),\n      'Server snap not indexed'\n    );\n  }\n\n  applyOperation(\n    oldViewCache: ViewCache,\n    operation: Operation,\n    writesCache: WriteTreeRef,\n    completeCache: Node | null\n  ): ProcessorResult {\n    const accumulator = new ChildChangeAccumulator();\n    let newViewCache, filterServerNode;\n    if (operation.type === OperationType.OVERWRITE) {\n      const overwrite = operation as Overwrite;\n      if (overwrite.source.fromUser) {\n        newViewCache = this.applyUserOverwrite_(\n          oldViewCache,\n          overwrite.path,\n          overwrite.snap,\n          writesCache,\n          completeCache,\n          accumulator\n        );\n      } else {\n        assert(overwrite.source.fromServer, 'Unknown source.');\n        // We filter the node if it's a tagged update or the node has been previously filtered  and the\n        // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n        // again\n        filterServerNode =\n          overwrite.source.tagged ||\n          (oldViewCache.getServerCache().isFiltered() &&\n            !pathIsEmpty(overwrite.path));\n        newViewCache = this.applyServerOverwrite_(\n          oldViewCache,\n          overwrite.path,\n          overwrite.snap,\n          writesCache,\n          completeCache,\n          filterServerNode,\n          accumulator\n        );\n      }\n    } else if (operation.type === OperationType.MERGE) {\n      const merge = operation as Merge;\n      if (merge.source.fromUser) {\n        newViewCache = this.applyUserMerge_(\n          oldViewCache,\n          merge.path,\n          merge.children,\n          writesCache,\n          completeCache,\n          accumulator\n        );\n      } else {\n        assert(merge.source.fromServer, 'Unknown source.');\n        // We filter the node if it's a tagged update or the node has been previously filtered\n        filterServerNode =\n          merge.source.tagged || oldViewCache.getServerCache().isFiltered();\n        newViewCache = this.applyServerMerge_(\n          oldViewCache,\n          merge.path,\n          merge.children,\n          writesCache,\n          completeCache,\n          filterServerNode,\n          accumulator\n        );\n      }\n    } else if (operation.type === OperationType.ACK_USER_WRITE) {\n      const ackUserWrite = operation as AckUserWrite;\n      if (!ackUserWrite.revert) {\n        newViewCache = this.ackUserWrite_(\n          oldViewCache,\n          ackUserWrite.path,\n          ackUserWrite.affectedTree,\n          writesCache,\n          completeCache,\n          accumulator\n        );\n      } else {\n        newViewCache = this.revertUserWrite_(\n          oldViewCache,\n          ackUserWrite.path,\n          writesCache,\n          completeCache,\n          accumulator\n        );\n      }\n    } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n      newViewCache = this.listenComplete_(\n        oldViewCache,\n        operation.path,\n        writesCache,\n        accumulator\n      );\n    } else {\n      throw assertionError('Unknown operation type: ' + operation.type);\n    }\n    const changes = accumulator.getChanges();\n    ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\n    return new ProcessorResult(newViewCache, changes);\n  }\n\n  private static maybeAddValueEvent_(\n    oldViewCache: ViewCache,\n    newViewCache: ViewCache,\n    accumulator: Change[]\n  ) {\n    const eventSnap = newViewCache.getEventCache();\n    if (eventSnap.isFullyInitialized()) {\n      const isLeafOrEmpty =\n        eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n      const oldCompleteSnap = oldViewCache.getCompleteEventSnap();\n      if (\n        accumulator.length > 0 ||\n        !oldViewCache.getEventCache().isFullyInitialized() ||\n        (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\n        !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())\n      ) {\n        accumulator.push(changeValue(newViewCache.getCompleteEventSnap()));\n      }\n    }\n  }\n\n  private generateEventCacheAfterServerEvent_(\n    viewCache: ViewCache,\n    changePath: Path,\n    writesCache: WriteTreeRef,\n    source: CompleteChildSource,\n    accumulator: ChildChangeAccumulator\n  ): ViewCache {\n    const oldEventSnap = viewCache.getEventCache();\n    if (writesCache.shadowingWrite(changePath) != null) {\n      // we have a shadowing write, ignore changes\n      return viewCache;\n    } else {\n      let newEventCache, serverNode;\n      if (pathIsEmpty(changePath)) {\n        // TODO: figure out how this plays with \"sliding ack windows\"\n        assert(\n          viewCache.getServerCache().isFullyInitialized(),\n          'If change path is empty, we must have complete server data'\n        );\n        if (viewCache.getServerCache().isFiltered()) {\n          // We need to special case this, because we need to only apply writes to complete children, or\n          // we might end up raising events for incomplete children. If the server data is filtered deep\n          // writes cannot be guaranteed to be complete\n          const serverCache = viewCache.getCompleteServerSnap();\n          const completeChildren =\n            serverCache instanceof ChildrenNode\n              ? serverCache\n              : ChildrenNode.EMPTY_NODE;\n          const completeEventChildren = writesCache.calcCompleteEventChildren(\n            completeChildren\n          );\n          newEventCache = this.filter_.updateFullNode(\n            viewCache.getEventCache().getNode(),\n            completeEventChildren,\n            accumulator\n          );\n        } else {\n          const completeNode = writesCache.calcCompleteEventCache(\n            viewCache.getCompleteServerSnap()\n          );\n          newEventCache = this.filter_.updateFullNode(\n            viewCache.getEventCache().getNode(),\n            completeNode,\n            accumulator\n          );\n        }\n      } else {\n        const childKey = pathGetFront(changePath);\n        if (childKey === '.priority') {\n          assert(\n            pathGetLength(changePath) === 1,\n            \"Can't have a priority with additional path components\"\n          );\n          const oldEventNode = oldEventSnap.getNode();\n          serverNode = viewCache.getServerCache().getNode();\n          // we might have overwrites for this priority\n          const updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(\n            changePath,\n            oldEventNode,\n            serverNode\n          );\n          if (updatedPriority != null) {\n            newEventCache = this.filter_.updatePriority(\n              oldEventNode,\n              updatedPriority\n            );\n          } else {\n            // priority didn't change, keep old node\n            newEventCache = oldEventSnap.getNode();\n          }\n        } else {\n          const childChangePath = pathPopFront(changePath);\n          // update child\n          let newEventChild;\n          if (oldEventSnap.isCompleteForChild(childKey)) {\n            serverNode = viewCache.getServerCache().getNode();\n            const eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(\n              changePath,\n              oldEventSnap.getNode(),\n              serverNode\n            );\n            if (eventChildUpdate != null) {\n              newEventChild = oldEventSnap\n                .getNode()\n                .getImmediateChild(childKey)\n                .updateChild(childChangePath, eventChildUpdate);\n            } else {\n              // Nothing changed, just keep the old child\n              newEventChild = oldEventSnap\n                .getNode()\n                .getImmediateChild(childKey);\n            }\n          } else {\n            newEventChild = writesCache.calcCompleteChild(\n              childKey,\n              viewCache.getServerCache()\n            );\n          }\n          if (newEventChild != null) {\n            newEventCache = this.filter_.updateChild(\n              oldEventSnap.getNode(),\n              childKey,\n              newEventChild,\n              childChangePath,\n              source,\n              accumulator\n            );\n          } else {\n            // no complete child available or no change\n            newEventCache = oldEventSnap.getNode();\n          }\n        }\n      }\n      return viewCache.updateEventSnap(\n        newEventCache,\n        oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath),\n        this.filter_.filtersNodes()\n      );\n    }\n  }\n\n  applyServerOverwrite_(\n    oldViewCache: ViewCache,\n    changePath: Path,\n    changedSnap: Node,\n    writesCache: WriteTreeRef,\n    completeCache: Node | null,\n    filterServerNode: boolean,\n    accumulator: ChildChangeAccumulator\n  ): ViewCache {\n    const oldServerSnap = oldViewCache.getServerCache();\n    let newServerCache;\n    const serverFilter = filterServerNode\n      ? this.filter_\n      : this.filter_.getIndexedFilter();\n    if (pathIsEmpty(changePath)) {\n      newServerCache = serverFilter.updateFullNode(\n        oldServerSnap.getNode(),\n        changedSnap,\n        null\n      );\n    } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n      // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n      const newServerNode = oldServerSnap\n        .getNode()\n        .updateChild(changePath, changedSnap);\n      newServerCache = serverFilter.updateFullNode(\n        oldServerSnap.getNode(),\n        newServerNode,\n        null\n      );\n    } else {\n      const childKey = pathGetFront(changePath);\n      if (\n        !oldServerSnap.isCompleteForPath(changePath) &&\n        pathGetLength(changePath) > 1\n      ) {\n        // We don't update incomplete nodes with updates intended for other listeners\n        return oldViewCache;\n      }\n      const childChangePath = pathPopFront(changePath);\n      const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n      const newChildNode = childNode.updateChild(childChangePath, changedSnap);\n      if (childKey === '.priority') {\n        newServerCache = serverFilter.updatePriority(\n          oldServerSnap.getNode(),\n          newChildNode\n        );\n      } else {\n        newServerCache = serverFilter.updateChild(\n          oldServerSnap.getNode(),\n          childKey,\n          newChildNode,\n          childChangePath,\n          NO_COMPLETE_CHILD_SOURCE,\n          null\n        );\n      }\n    }\n    const newViewCache = oldViewCache.updateServerSnap(\n      newServerCache,\n      oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath),\n      serverFilter.filtersNodes()\n    );\n    const source = new WriteTreeCompleteChildSource(\n      writesCache,\n      newViewCache,\n      completeCache\n    );\n    return this.generateEventCacheAfterServerEvent_(\n      newViewCache,\n      changePath,\n      writesCache,\n      source,\n      accumulator\n    );\n  }\n\n  applyUserOverwrite_(\n    oldViewCache: ViewCache,\n    changePath: Path,\n    changedSnap: Node,\n    writesCache: WriteTreeRef,\n    completeCache: Node | null,\n    accumulator: ChildChangeAccumulator\n  ): ViewCache {\n    const oldEventSnap = oldViewCache.getEventCache();\n    let newViewCache, newEventCache;\n    const source = new WriteTreeCompleteChildSource(\n      writesCache,\n      oldViewCache,\n      completeCache\n    );\n    if (pathIsEmpty(changePath)) {\n      newEventCache = this.filter_.updateFullNode(\n        oldViewCache.getEventCache().getNode(),\n        changedSnap,\n        accumulator\n      );\n      newViewCache = oldViewCache.updateEventSnap(\n        newEventCache,\n        true,\n        this.filter_.filtersNodes()\n      );\n    } else {\n      const childKey = pathGetFront(changePath);\n      if (childKey === '.priority') {\n        newEventCache = this.filter_.updatePriority(\n          oldViewCache.getEventCache().getNode(),\n          changedSnap\n        );\n        newViewCache = oldViewCache.updateEventSnap(\n          newEventCache,\n          oldEventSnap.isFullyInitialized(),\n          oldEventSnap.isFiltered()\n        );\n      } else {\n        const childChangePath = pathPopFront(changePath);\n        const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n        let newChild;\n        if (pathIsEmpty(childChangePath)) {\n          // Child overwrite, we can replace the child\n          newChild = changedSnap;\n        } else {\n          const childNode = source.getCompleteChild(childKey);\n          if (childNode != null) {\n            if (\n              pathGetBack(childChangePath) === '.priority' &&\n              childNode.getChild(pathParent(childChangePath)).isEmpty()\n            ) {\n              // This is a priority update on an empty node. If this node exists on the server, the\n              // server will send down the priority in the update, so ignore for now\n              newChild = childNode;\n            } else {\n              newChild = childNode.updateChild(childChangePath, changedSnap);\n            }\n          } else {\n            // There is no complete child node available\n            newChild = ChildrenNode.EMPTY_NODE;\n          }\n        }\n        if (!oldChild.equals(newChild)) {\n          const newEventSnap = this.filter_.updateChild(\n            oldEventSnap.getNode(),\n            childKey,\n            newChild,\n            childChangePath,\n            source,\n            accumulator\n          );\n          newViewCache = oldViewCache.updateEventSnap(\n            newEventSnap,\n            oldEventSnap.isFullyInitialized(),\n            this.filter_.filtersNodes()\n          );\n        } else {\n          newViewCache = oldViewCache;\n        }\n      }\n    }\n    return newViewCache;\n  }\n\n  private static cacheHasChild_(\n    viewCache: ViewCache,\n    childKey: string\n  ): boolean {\n    return viewCache.getEventCache().isCompleteForChild(childKey);\n  }\n\n  private applyUserMerge_(\n    viewCache: ViewCache,\n    path: Path,\n    changedChildren: ImmutableTree<Node>,\n    writesCache: WriteTreeRef,\n    serverCache: Node | null,\n    accumulator: ChildChangeAccumulator\n  ): ViewCache {\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\n    // window leaving room for new items.  It's important we process these changes first, so we\n    // iterate the changes twice, first processing any that affect items currently in view.\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n    // not the other.\n    let curViewCache = viewCache;\n    changedChildren.foreach((relativePath, childNode) => {\n      const writePath = pathChild(path, relativePath);\n      if (ViewProcessor.cacheHasChild_(viewCache, pathGetFront(writePath))) {\n        curViewCache = this.applyUserOverwrite_(\n          curViewCache,\n          writePath,\n          childNode,\n          writesCache,\n          serverCache,\n          accumulator\n        );\n      }\n    });\n\n    changedChildren.foreach((relativePath, childNode) => {\n      const writePath = pathChild(path, relativePath);\n      if (!ViewProcessor.cacheHasChild_(viewCache, pathGetFront(writePath))) {\n        curViewCache = this.applyUserOverwrite_(\n          curViewCache,\n          writePath,\n          childNode,\n          writesCache,\n          serverCache,\n          accumulator\n        );\n      }\n    });\n\n    return curViewCache;\n  }\n\n  private applyMerge_(node: Node, merge: ImmutableTree<Node>): Node {\n    merge.foreach((relativePath, childNode) => {\n      node = node.updateChild(relativePath, childNode);\n    });\n    return node;\n  }\n\n  private applyServerMerge_(\n    viewCache: ViewCache,\n    path: Path,\n    changedChildren: ImmutableTree<Node>,\n    writesCache: WriteTreeRef,\n    serverCache: Node | null,\n    filterServerNode: boolean,\n    accumulator: ChildChangeAccumulator\n  ): ViewCache {\n    // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n    // wait for the complete data update coming soon.\n    if (\n      viewCache.getServerCache().getNode().isEmpty() &&\n      !viewCache.getServerCache().isFullyInitialized()\n    ) {\n      return viewCache;\n    }\n\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\n    // window leaving room for new items.  It's important we process these changes first, so we\n    // iterate the changes twice, first processing any that affect items currently in view.\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n    // not the other.\n    let curViewCache = viewCache;\n    let viewMergeTree;\n    if (pathIsEmpty(path)) {\n      viewMergeTree = changedChildren;\n    } else {\n      viewMergeTree = new ImmutableTree<Node>(null).setTree(\n        path,\n        changedChildren\n      );\n    }\n    const serverNode = viewCache.getServerCache().getNode();\n    viewMergeTree.children.inorderTraversal((childKey, childTree) => {\n      if (serverNode.hasChild(childKey)) {\n        const serverChild = viewCache\n          .getServerCache()\n          .getNode()\n          .getImmediateChild(childKey);\n        const newChild = this.applyMerge_(serverChild, childTree);\n        curViewCache = this.applyServerOverwrite_(\n          curViewCache,\n          new Path(childKey),\n          newChild,\n          writesCache,\n          serverCache,\n          filterServerNode,\n          accumulator\n        );\n      }\n    });\n    viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\n      const isUnknownDeepMerge =\n        !viewCache.getServerCache().isCompleteForChild(childKey) &&\n        childMergeTree.value == null;\n      if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n        const serverChild = viewCache\n          .getServerCache()\n          .getNode()\n          .getImmediateChild(childKey);\n        const newChild = this.applyMerge_(serverChild, childMergeTree);\n        curViewCache = this.applyServerOverwrite_(\n          curViewCache,\n          new Path(childKey),\n          newChild,\n          writesCache,\n          serverCache,\n          filterServerNode,\n          accumulator\n        );\n      }\n    });\n\n    return curViewCache;\n  }\n\n  private ackUserWrite_(\n    viewCache: ViewCache,\n    ackPath: Path,\n    affectedTree: ImmutableTree<boolean>,\n    writesCache: WriteTreeRef,\n    completeCache: Node | null,\n    accumulator: ChildChangeAccumulator\n  ): ViewCache {\n    if (writesCache.shadowingWrite(ackPath) != null) {\n      return viewCache;\n    }\n\n    // Only filter server node if it is currently filtered\n    const filterServerNode = viewCache.getServerCache().isFiltered();\n\n    // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n    // now that it won't be shadowed.\n    const serverCache = viewCache.getServerCache();\n    if (affectedTree.value != null) {\n      // This is an overwrite.\n      if (\n        (pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\n        serverCache.isCompleteForPath(ackPath)\n      ) {\n        return this.applyServerOverwrite_(\n          viewCache,\n          ackPath,\n          serverCache.getNode().getChild(ackPath),\n          writesCache,\n          completeCache,\n          filterServerNode,\n          accumulator\n        );\n      } else if (pathIsEmpty(ackPath)) {\n        // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n        // should just re-apply whatever we have in our cache as a merge.\n        let changedChildren = new ImmutableTree<Node>(null);\n        serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\n          changedChildren = changedChildren.set(new Path(name), node);\n        });\n        return this.applyServerMerge_(\n          viewCache,\n          ackPath,\n          changedChildren,\n          writesCache,\n          completeCache,\n          filterServerNode,\n          accumulator\n        );\n      } else {\n        return viewCache;\n      }\n    } else {\n      // This is a merge.\n      let changedChildren = new ImmutableTree<Node>(null);\n      affectedTree.foreach((mergePath, value) => {\n        const serverCachePath = pathChild(ackPath, mergePath);\n        if (serverCache.isCompleteForPath(serverCachePath)) {\n          changedChildren = changedChildren.set(\n            mergePath,\n            serverCache.getNode().getChild(serverCachePath)\n          );\n        }\n      });\n      return this.applyServerMerge_(\n        viewCache,\n        ackPath,\n        changedChildren,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  }\n\n  private listenComplete_(\n    viewCache: ViewCache,\n    path: Path,\n    writesCache: WriteTreeRef,\n    accumulator: ChildChangeAccumulator\n  ): ViewCache {\n    const oldServerNode = viewCache.getServerCache();\n    const newViewCache = viewCache.updateServerSnap(\n      oldServerNode.getNode(),\n      oldServerNode.isFullyInitialized() || pathIsEmpty(path),\n      oldServerNode.isFiltered()\n    );\n    return this.generateEventCacheAfterServerEvent_(\n      newViewCache,\n      path,\n      writesCache,\n      NO_COMPLETE_CHILD_SOURCE,\n      accumulator\n    );\n  }\n\n  private revertUserWrite_(\n    viewCache: ViewCache,\n    path: Path,\n    writesCache: WriteTreeRef,\n    completeServerCache: Node | null,\n    accumulator: ChildChangeAccumulator\n  ): ViewCache {\n    let complete;\n    if (writesCache.shadowingWrite(path) != null) {\n      return viewCache;\n    } else {\n      const source = new WriteTreeCompleteChildSource(\n        writesCache,\n        viewCache,\n        completeServerCache\n      );\n      const oldEventCache = viewCache.getEventCache().getNode();\n      let newEventCache;\n      if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n        let newNode;\n        if (viewCache.getServerCache().isFullyInitialized()) {\n          newNode = writesCache.calcCompleteEventCache(\n            viewCache.getCompleteServerSnap()\n          );\n        } else {\n          const serverChildren = viewCache.getServerCache().getNode();\n          assert(\n            serverChildren instanceof ChildrenNode,\n            'serverChildren would be complete if leaf node'\n          );\n          newNode = writesCache.calcCompleteEventChildren(\n            serverChildren as ChildrenNode\n          );\n        }\n        newNode = newNode as Node;\n        newEventCache = this.filter_.updateFullNode(\n          oldEventCache,\n          newNode,\n          accumulator\n        );\n      } else {\n        const childKey = pathGetFront(path);\n        let newChild = writesCache.calcCompleteChild(\n          childKey,\n          viewCache.getServerCache()\n        );\n        if (\n          newChild == null &&\n          viewCache.getServerCache().isCompleteForChild(childKey)\n        ) {\n          newChild = oldEventCache.getImmediateChild(childKey);\n        }\n        if (newChild != null) {\n          newEventCache = this.filter_.updateChild(\n            oldEventCache,\n            childKey,\n            newChild,\n            pathPopFront(path),\n            source,\n            accumulator\n          );\n        } else if (viewCache.getEventCache().getNode().hasChild(childKey)) {\n          // No complete child available, delete the existing one, if any\n          newEventCache = this.filter_.updateChild(\n            oldEventCache,\n            childKey,\n            ChildrenNode.EMPTY_NODE,\n            pathPopFront(path),\n            source,\n            accumulator\n          );\n        } else {\n          newEventCache = oldEventCache;\n        }\n        if (\n          newEventCache.isEmpty() &&\n          viewCache.getServerCache().isFullyInitialized()\n        ) {\n          // We might have reverted all child writes. Maybe the old event was a leaf node\n          complete = writesCache.calcCompleteEventCache(\n            viewCache.getCompleteServerSnap()\n          );\n          if (complete.isLeafNode()) {\n            newEventCache = this.filter_.updateFullNode(\n              newEventCache,\n              complete,\n              accumulator\n            );\n          }\n        }\n      }\n      complete =\n        viewCache.getServerCache().isFullyInitialized() ||\n        writesCache.shadowingWrite(newEmptyPath()) != null;\n      return viewCache.updateEventSnap(\n        newEventCache,\n        complete,\n        this.filter_.filtersNodes()\n      );\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NamedNode, Node } from '../snap/Node';\nimport { Change, ChangeType, changeChildMoved } from './Change';\nimport { assertionError } from '@firebase/util';\nimport { Query } from '../../api/Query';\nimport { Index } from '../snap/indexes/Index';\nimport { EventRegistration } from './EventRegistration';\nimport { Event } from './Event';\n\n/**\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\n * for details.\n *\n */\nexport class EventGenerator {\n  index_: Index;\n\n  constructor(public query_: Query) {\n    this.index_ = this.query_.getQueryParams().getIndex();\n  }\n}\n\n/**\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\n *\n * Notes:\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\n *    our index.\n *  - prevName will be calculated based on the index ordering.\n */\nexport function eventGeneratorGenerateEventsForChanges(\n  eventGenerator: EventGenerator,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistrations: EventRegistration[]\n): Event[] {\n  const events: Event[] = [];\n  const moves: Change[] = [];\n\n  changes.forEach(change => {\n    if (\n      change.type === ChangeType.CHILD_CHANGED &&\n      eventGenerator.index_.indexedValueChanged(\n        change.oldSnap as Node,\n        change.snapshotNode\n      )\n    ) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_REMOVED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_ADDED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_MOVED,\n    moves,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_CHANGED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.VALUE,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n\n  return events;\n}\n\n/**\n * Given changes of a single change type, generate the corresponding events.\n */\nfunction eventGeneratorGenerateEventsForType(\n  eventGenerator: EventGenerator,\n  events: Event[],\n  eventType: string,\n  changes: Change[],\n  registrations: EventRegistration[],\n  eventCache: Node\n) {\n  const filteredChanges = changes.filter(change => change.type === eventType);\n\n  filteredChanges.sort((a, b) =>\n    eventGeneratorCompareChanges(eventGenerator, a, b)\n  );\n  filteredChanges.forEach(change => {\n    const materializedChange = eventGeneratorMaterializeSingleChange(\n      eventGenerator,\n      change,\n      eventCache\n    );\n    registrations.forEach(registration => {\n      if (registration.respondsTo(change.type)) {\n        events.push(\n          registration.createEvent(materializedChange, eventGenerator.query_)\n        );\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(\n  eventGenerator: EventGenerator,\n  change: Change,\n  eventCache: Node\n): Change {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(\n      change.childName,\n      change.snapshotNode,\n      eventGenerator.index_\n    );\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(\n  eventGenerator: EventGenerator,\n  a: Change,\n  b: Change\n) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n  const aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  const bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { ViewProcessor } from './ViewProcessor';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { CacheNode } from './CacheNode';\nimport { ViewCache } from './ViewCache';\nimport {\n  EventGenerator,\n  eventGeneratorGenerateEventsForChanges\n} from './EventGenerator';\nimport { assert } from '@firebase/util';\nimport { Operation, OperationType } from '../operation/Operation';\nimport { Change, changeChildAdded, changeValue } from './Change';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { Query } from '../../api/Query';\nimport { EventRegistration } from './EventRegistration';\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\nimport { WriteTreeRef } from '../WriteTree';\nimport { CancelEvent, Event } from './Event';\nimport { queryParamsGetNodeFilter } from './QueryParams';\n\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n */\nexport class View {\n  private processor_: ViewProcessor;\n  private viewCache_: ViewCache;\n  private eventRegistrations_: EventRegistration[] = [];\n  private eventGenerator_: EventGenerator;\n\n  constructor(private query_: Query, initialViewCache: ViewCache) {\n    const params = this.query_.getQueryParams();\n\n    const indexFilter = new IndexedFilter(params.getIndex());\n    const filter = queryParamsGetNodeFilter(params);\n\n    this.processor_ = new ViewProcessor(filter);\n\n    const initialServerCache = initialViewCache.getServerCache();\n    const initialEventCache = initialViewCache.getEventCache();\n\n    // Don't filter server node with other filter than index, wait for tagged listen\n    const serverSnap = indexFilter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialServerCache.getNode(),\n      null\n    );\n    const eventSnap = filter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialEventCache.getNode(),\n      null\n    );\n    const newServerCache = new CacheNode(\n      serverSnap,\n      initialServerCache.isFullyInitialized(),\n      indexFilter.filtersNodes()\n    );\n    const newEventCache = new CacheNode(\n      eventSnap,\n      initialEventCache.isFullyInitialized(),\n      filter.filtersNodes()\n    );\n\n    this.viewCache_ = new ViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  getQuery(): Query {\n    return this.query_;\n  }\n\n  getServerCache(): Node | null {\n    return this.viewCache_.getServerCache().getNode();\n  }\n\n  getCompleteNode(): Node | null {\n    return this.viewCache_.getCompleteEventSnap();\n  }\n\n  getCompleteServerCache(path: Path): Node | null {\n    const cache = this.viewCache_.getCompleteServerSnap();\n    if (cache) {\n      // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n      // we need to see if it contains the child we're interested in.\n      if (\n        this.query_.getQueryParams().loadsAllData() ||\n        (!pathIsEmpty(path) &&\n          !cache.getImmediateChild(pathGetFront(path)).isEmpty())\n      ) {\n        return cache.getChild(path);\n      }\n    }\n    return null;\n  }\n\n  isEmpty(): boolean {\n    return this.eventRegistrations_.length === 0;\n  }\n\n  addEventRegistration(eventRegistration: EventRegistration) {\n    this.eventRegistrations_.push(eventRegistration);\n  }\n\n  /**\n   * @param eventRegistration If null, remove all callbacks.\n   * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\n   * @return Cancel events, if cancelError was provided.\n   */\n  removeEventRegistration(\n    eventRegistration: EventRegistration | null,\n    cancelError?: Error\n  ): Event[] {\n    const cancelEvents: CancelEvent[] = [];\n    if (cancelError) {\n      assert(\n        eventRegistration == null,\n        'A cancel should cancel all event registrations.'\n      );\n      const path = this.query_.path;\n      this.eventRegistrations_.forEach(registration => {\n        const maybeEvent = registration.createCancelEvent(cancelError, path);\n        if (maybeEvent) {\n          cancelEvents.push(maybeEvent);\n        }\n      });\n    }\n\n    if (eventRegistration) {\n      let remaining = [];\n      for (let i = 0; i < this.eventRegistrations_.length; ++i) {\n        const existing = this.eventRegistrations_[i];\n        if (!existing.matches(eventRegistration)) {\n          remaining.push(existing);\n        } else if (eventRegistration.hasAnyCallback()) {\n          // We're removing just this one\n          remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\n          break;\n        }\n      }\n      this.eventRegistrations_ = remaining;\n    } else {\n      this.eventRegistrations_ = [];\n    }\n    return cancelEvents;\n  }\n\n  /**\n   * Applies the given Operation, updates our cache, and returns the appropriate events.\n   */\n  applyOperation(\n    operation: Operation,\n    writesCache: WriteTreeRef,\n    completeServerCache: Node | null\n  ): Event[] {\n    if (\n      operation.type === OperationType.MERGE &&\n      operation.source.queryId !== null\n    ) {\n      assert(\n        this.viewCache_.getCompleteServerSnap(),\n        'We should always have a full cache before handling merges'\n      );\n      assert(\n        this.viewCache_.getCompleteEventSnap(),\n        'Missing event cache, even though we have a server cache'\n      );\n    }\n\n    const oldViewCache = this.viewCache_;\n    const result = this.processor_.applyOperation(\n      oldViewCache,\n      operation,\n      writesCache,\n      completeServerCache\n    );\n    this.processor_.assertIndexed(result.viewCache);\n\n    assert(\n      result.viewCache.getServerCache().isFullyInitialized() ||\n        !oldViewCache.getServerCache().isFullyInitialized(),\n      'Once a server snap is complete, it should never go back'\n    );\n\n    this.viewCache_ = result.viewCache;\n\n    return this.generateEventsForChanges_(\n      result.changes,\n      result.viewCache.getEventCache().getNode(),\n      null\n    );\n  }\n\n  getInitialEvents(registration: EventRegistration): Event[] {\n    const eventSnap = this.viewCache_.getEventCache();\n    const initialChanges: Change[] = [];\n    if (!eventSnap.getNode().isLeafNode()) {\n      const eventNode = eventSnap.getNode() as ChildrenNode;\n      eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n        initialChanges.push(changeChildAdded(key, childNode));\n      });\n    }\n    if (eventSnap.isFullyInitialized()) {\n      initialChanges.push(changeValue(eventSnap.getNode()));\n    }\n    return this.generateEventsForChanges_(\n      initialChanges,\n      eventSnap.getNode(),\n      registration\n    );\n  }\n\n  generateEventsForChanges_(\n    changes: Change[],\n    eventCache: Node,\n    eventRegistration?: EventRegistration\n  ): Event[] {\n    const registrations = eventRegistration\n      ? [eventRegistration]\n      : this.eventRegistrations_;\n    return eventGeneratorGenerateEventsForChanges(\n      this.eventGenerator_,\n      changes,\n      eventCache,\n      registrations\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CacheNode } from './view/CacheNode';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { assert } from '@firebase/util';\nimport { ViewCache } from './view/ViewCache';\nimport { View } from './view/View';\nimport { Operation } from './operation/Operation';\nimport { WriteTreeRef } from './WriteTree';\nimport { Query } from '../api/Query';\nimport { EventRegistration } from './view/EventRegistration';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\nimport { Event } from './view/Event';\nimport { ReferenceConstructor } from '../api/Reference';\n\nlet __referenceConstructor: ReferenceConstructor;\n\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nexport class SyncPoint {\n  static set __referenceConstructor(val: ReferenceConstructor) {\n    assert(\n      !__referenceConstructor,\n      '__referenceConstructor has already been defined'\n    );\n    __referenceConstructor = val;\n  }\n\n  static get __referenceConstructor() {\n    assert(__referenceConstructor, 'Reference.ts has not been loaded');\n    return __referenceConstructor;\n  }\n\n  /**\n   * The Views being tracked at this location in the tree, stored as a map where the key is a\n   * queryId and the value is the View for that query.\n   *\n   * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n   */\n  private readonly views: Map<string, View> = new Map();\n\n  isEmpty(): boolean {\n    return this.views.size === 0;\n  }\n\n  applyOperation(\n    operation: Operation,\n    writesCache: WriteTreeRef,\n    optCompleteServerCache: Node | null\n  ): Event[] {\n    const queryId = operation.source.queryId;\n    if (queryId !== null) {\n      const view = this.views.get(queryId);\n      assert(view != null, 'SyncTree gave us an op for an invalid query.');\n      return view.applyOperation(\n        operation,\n        writesCache,\n        optCompleteServerCache\n      );\n    } else {\n      let events: Event[] = [];\n\n      for (const view of this.views.values()) {\n        events = events.concat(\n          view.applyOperation(operation, writesCache, optCompleteServerCache)\n        );\n      }\n\n      return events;\n    }\n  }\n  \n  /**\n   * Get a view for the specified query.\n   *\n   * @param query The query to return a view for\n   * @param writesCache\n   * @param serverCache\n   * @param serverCacheComplete\n   * @return Events to raise.\n   */\n  getView(\n    query: Query,\n    writesCache: WriteTreeRef,\n    serverCache: Node | null,\n    serverCacheComplete: boolean\n  ): View {\n    const queryId = query.queryIdentifier();\n    const view = this.views.get(queryId);\n    if (!view) {\n      // TODO: make writesCache take flag for complete server node\n      let eventCache = writesCache.calcCompleteEventCache(\n        serverCacheComplete ? serverCache : null\n      );\n      let eventCacheComplete = false;\n      if (eventCache) {\n        eventCacheComplete = true;\n      } else if (serverCache instanceof ChildrenNode) {\n        eventCache = writesCache.calcCompleteEventChildren(serverCache);\n        eventCacheComplete = false;\n      } else {\n        eventCache = ChildrenNode.EMPTY_NODE;\n        eventCacheComplete = false;\n      }\n      const viewCache = new ViewCache(\n        new CacheNode(eventCache, eventCacheComplete, false),\n        new CacheNode(serverCache, serverCacheComplete, false)\n      );\n      return new View(query, viewCache);\n    }\n    return view;\n  }\n\n  /**\n   * Add an event callback for the specified query.\n   *\n   * @param query\n   * @param eventRegistration\n   * @param writesCache\n   * @param serverCache Complete server cache, if we have it.\n   * @param serverCacheComplete\n   * @return Events to raise.\n   */\n  addEventRegistration(\n    query: Query,\n    eventRegistration: EventRegistration,\n    writesCache: WriteTreeRef,\n    serverCache: Node | null,\n    serverCacheComplete: boolean\n  ): Event[] {\n    const view = this.getView(\n      query,\n      writesCache,\n      serverCache,\n      serverCacheComplete\n    );\n    if (!this.views.has(query.queryIdentifier())) {\n      this.views.set(query.queryIdentifier(), view);\n    }\n    // This is guaranteed to exist now, we just created anything that was missing\n    view.addEventRegistration(eventRegistration);\n    return view.getInitialEvents(eventRegistration);\n  }\n\n  /**\n   * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n   *\n   * If query is the default query, we'll check all views for the specified eventRegistration.\n   * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n   *\n   * @param eventRegistration If null, remove all callbacks.\n   * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\n   * @return removed queries and any cancel events\n   */\n  removeEventRegistration(\n    query: Query,\n    eventRegistration: EventRegistration | null,\n    cancelError?: Error\n  ): { removed: Query[]; events: Event[] } {\n    const queryId = query.queryIdentifier();\n    const removed: Query[] = [];\n    let cancelEvents: Event[] = [];\n    const hadCompleteView = this.hasCompleteView();\n    if (queryId === 'default') {\n      // When you do ref.off(...), we search all views for the registration to remove.\n      for (const [viewQueryId, view] of this.views.entries()) {\n        cancelEvents = cancelEvents.concat(\n          view.removeEventRegistration(eventRegistration, cancelError)\n        );\n        if (view.isEmpty()) {\n          this.views.delete(viewQueryId);\n\n          // We'll deal with complete views later.\n          if (!view.getQuery().getQueryParams().loadsAllData()) {\n            removed.push(view.getQuery());\n          }\n        }\n      }\n    } else {\n      // remove the callback from the specific view.\n      const view = this.views.get(queryId);\n      if (view) {\n        cancelEvents = cancelEvents.concat(\n          view.removeEventRegistration(eventRegistration, cancelError)\n        );\n        if (view.isEmpty()) {\n          this.views.delete(queryId);\n\n          // We'll deal with complete views later.\n          if (!view.getQuery().getQueryParams().loadsAllData()) {\n            removed.push(view.getQuery());\n          }\n        }\n      }\n    }\n\n    if (hadCompleteView && !this.hasCompleteView()) {\n      // We removed our last complete view.\n      removed.push(\n        new SyncPoint.__referenceConstructor(query.repo, query.path)\n      );\n    }\n\n    return { removed, events: cancelEvents };\n  }\n\n  getQueryViews(): View[] {\n    const result = [];\n    for (const view of this.views.values()) {\n      if (!view.getQuery().getQueryParams().loadsAllData()) {\n        result.push(view);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @param path The path to the desired complete snapshot\n   * @return A complete cache, if it exists\n   */\n  getCompleteServerCache(path: Path): Node | null {\n    let serverCache: Node | null = null;\n    for (const view of this.views.values()) {\n      serverCache = serverCache || view.getCompleteServerCache(path);\n    }\n    return serverCache;\n  }\n\n  viewForQuery(query: Query): View | null {\n    const params = query.getQueryParams();\n    if (params.loadsAllData()) {\n      return this.getCompleteView();\n    } else {\n      const queryId = query.queryIdentifier();\n      return this.views.get(queryId);\n    }\n  }\n\n  viewExistsForQuery(query: Query): boolean {\n    return this.viewForQuery(query) != null;\n  }\n\n  hasCompleteView(): boolean {\n    return this.getCompleteView() != null;\n  }\n\n  getCompleteView(): View | null {\n    for (const view of this.views.values()) {\n      if (view.getQuery().getQueryParams().loadsAllData()) {\n        return view;\n      }\n    }\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathIsEmpty\n} from './util/Path';\nimport { NamedNode, Node } from './snap/Node';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { assert } from '@firebase/util';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { each } from './util/util';\n\n/**\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\n * to reflect the write added.\n */\nexport class CompoundWrite {\n  constructor(public writeTree_: ImmutableTree<Node>) {}\n\n  static empty(): CompoundWrite {\n    return new CompoundWrite(new ImmutableTree(null));\n  }\n}\n\nexport function compoundWriteAddWrite(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  node: Node\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n    if (rootmost != null) {\n      const rootMostPath = rootmost.path;\n      let value = rootmost.value;\n      const relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(\n        compoundWrite.writeTree_.set(rootMostPath, value)\n      );\n    } else {\n      const subtree = new ImmutableTree(node);\n      const newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nexport function compoundWriteAddWrites(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  updates: { [name: string]: Node }\n): CompoundWrite {\n  let newWrite = compoundWrite;\n  each(updates, (childKey: string, node: Node) => {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n\n/**\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\n * location, which must be removed by calling this method with that path.\n *\n * @param compoundWrite The CompoundWrite to remove.\n * @param path The path at which a write and all deeper writes should be removed\n * @return The new CompoundWrite with the removed path\n */\nexport function compoundWriteRemoveWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    const newWriteTree = compoundWrite.writeTree_.setTree(\n      path,\n      new ImmutableTree<Node>(null)\n    );\n    return new CompoundWrite(newWriteTree);\n  }\n}\n\n/**\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\n * considered \"complete\".\n *\n * @param compoundWrite The CompoundWrite to check.\n * @param path The path to check for\n * @return Whether there is a complete write at that path\n */\nexport function compoundWriteHasCompleteWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): boolean {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n\n/**\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\n * writes from deeper paths, but will return child nodes from a more shallow path.\n *\n * @param compoundWrite The CompoundWrite to get the node from.\n * @param path The path to get a complete write\n * @return The node if complete at that path, or null otherwise.\n */\nexport function compoundWriteGetCompleteNode(\n  compoundWrite: CompoundWrite,\n  path: Path\n): Node | null {\n  const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n  if (rootmost != null) {\n    return compoundWrite.writeTree_\n      .get(rootmost.path)\n      .getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns all children that are guaranteed to be a complete overwrite.\n *\n * @param compoundWrite The CompoundWrite to get children from.\n * @return A list of all complete children.\n */\nexport function compoundWriteGetCompleteChildren(\n  compoundWrite: CompoundWrite\n): NamedNode[] {\n  const children: NamedNode[] = [];\n  const node = compoundWrite.writeTree_.value;\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      (node as ChildrenNode).forEachChild(\n        PRIORITY_INDEX,\n        (childName, childNode) => {\n          children.push(new NamedNode(childName, childNode));\n        }\n      );\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(\n      (childName, childTree) => {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      }\n    );\n  }\n  return children;\n}\n\nexport function compoundWriteChildCompoundWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    const shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n\n/**\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\n * @return Whether this CompoundWrite is empty\n */\nexport function compoundWriteIsEmpty(compoundWrite: CompoundWrite): boolean {\n  return compoundWrite.writeTree_.isEmpty();\n}\n\n/**\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\n * node\n * @param node The node to apply this CompoundWrite to\n * @return The node with all writes applied\n */\nexport function compoundWriteApply(\n  compoundWrite: CompoundWrite,\n  node: Node\n): Node {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(\n  relativePath: Path,\n  writeTree: ImmutableTree<Node>,\n  node: Node\n): Node {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    let priorityWrite = null;\n    writeTree.children.inorderTraversal((childKey, childTree) => {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(\n          childTree.value !== null,\n          'Priority writes must always be leaf nodes'\n        );\n        priorityWrite = childTree.value;\n      } else {\n        node = applySubtreeWrite(\n          pathChild(relativePath, childKey),\n          childTree,\n          node\n        );\n      }\n    });\n    // If there was a priority write, we only apply it if the node is not empty\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\n      node = node.updateChild(\n        pathChild(relativePath, '.priority'),\n        priorityWrite\n      );\n    }\n    return node;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError, safeGet } from '@firebase/util';\n\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathContains,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './util/Path';\nimport {\n  CompoundWrite,\n  compoundWriteAddWrite,\n  compoundWriteAddWrites,\n  compoundWriteApply,\n  compoundWriteChildCompoundWrite,\n  compoundWriteGetCompleteChildren,\n  compoundWriteGetCompleteNode,\n  compoundWriteHasCompleteWrite,\n  compoundWriteIsEmpty,\n  compoundWriteRemoveWrite\n} from './CompoundWrite';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { NamedNode, Node } from './snap/Node';\nimport { CacheNode } from './view/CacheNode';\nimport { Index } from './snap/indexes/Index';\nimport { each } from './util/util';\n\n/**\n * Defines a single user-initiated write operation. May be the result of a set(), transaction(), or update() call. In\n * the case of a set() or transaction, snap wil be non-null.  In the case of an update(), children will be non-null.\n */\nexport interface WriteRecord {\n  writeId: number;\n  path: Path;\n  snap?: Node | null;\n  children?: { [k: string]: Node } | null;\n  visible: boolean;\n}\n\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n */\nexport class WriteTree {\n  /**\n   * A tree tracking the result of applying all visible writes.  This does not include transactions with\n   * applyLocally=false or writes that are completely shadowed by other writes.\n   */\n  private visibleWrites_: CompoundWrite = CompoundWrite.empty();\n\n  /**\n   * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n   * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n   * used by transactions).\n   */\n  private allWrites_: WriteRecord[] = [];\n\n  private lastWriteId_ = -1;\n\n  /**\n   * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n   *\n   */\n  childWrites(path: Path): WriteTreeRef {\n    return new WriteTreeRef(path, this);\n  }\n\n  /**\n   * Record a new overwrite from user code.\n   *\n   * @param visible This is set to false by some transactions. It should be excluded from event caches\n   */\n  addOverwrite(path: Path, snap: Node, writeId: number, visible?: boolean) {\n    assert(\n      writeId > this.lastWriteId_,\n      'Stacking an older write on top of newer ones'\n    );\n    if (visible === undefined) {\n      visible = true;\n    }\n    this.allWrites_.push({\n      path,\n      snap,\n      writeId,\n      visible\n    });\n\n    if (visible) {\n      this.visibleWrites_ = compoundWriteAddWrite(\n        this.visibleWrites_,\n        path,\n        snap\n      );\n    }\n    this.lastWriteId_ = writeId;\n  }\n\n  /**\n   * Record a new merge from user code.\n   */\n  addMerge(\n    path: Path,\n    changedChildren: { [k: string]: Node },\n    writeId: number\n  ) {\n    assert(\n      writeId > this.lastWriteId_,\n      'Stacking an older merge on top of newer ones'\n    );\n    this.allWrites_.push({\n      path,\n      children: changedChildren,\n      writeId,\n      visible: true\n    });\n\n    this.visibleWrites_ = compoundWriteAddWrites(\n      this.visibleWrites_,\n      path,\n      changedChildren\n    );\n    this.lastWriteId_ = writeId;\n  }\n\n  getWrite(writeId: number): WriteRecord | null {\n    for (let i = 0; i < this.allWrites_.length; i++) {\n      const record = this.allWrites_[i];\n      if (record.writeId === writeId) {\n        return record;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n   * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n   *\n   * @return true if the write may have been visible (meaning we'll need to reevaluate / raise\n   * events as a result).\n   */\n  removeWrite(writeId: number): boolean {\n    // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n    // out of order.\n    //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n    //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n\n    const idx = this.allWrites_.findIndex(s => {\n      return s.writeId === writeId;\n    });\n    assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n    const writeToRemove = this.allWrites_[idx];\n    this.allWrites_.splice(idx, 1);\n\n    let removedWriteWasVisible = writeToRemove.visible;\n    let removedWriteOverlapsWithOtherWrites = false;\n\n    let i = this.allWrites_.length - 1;\n\n    while (removedWriteWasVisible && i >= 0) {\n      const currentWrite = this.allWrites_[i];\n      if (currentWrite.visible) {\n        if (\n          i >= idx &&\n          this.recordContainsPath_(currentWrite, writeToRemove.path)\n        ) {\n          // The removed write was completely shadowed by a subsequent write.\n          removedWriteWasVisible = false;\n        } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n          // Either we're covering some writes or they're covering part of us (depending on which came first).\n          removedWriteOverlapsWithOtherWrites = true;\n        }\n      }\n      i--;\n    }\n\n    if (!removedWriteWasVisible) {\n      return false;\n    } else if (removedWriteOverlapsWithOtherWrites) {\n      // There's some shadowing going on. Just rebuild the visible writes from scratch.\n      this.resetTree_();\n      return true;\n    } else {\n      // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n      if (writeToRemove.snap) {\n        this.visibleWrites_ = compoundWriteRemoveWrite(\n          this.visibleWrites_,\n          writeToRemove.path\n        );\n      } else {\n        const children = writeToRemove.children;\n        each(children, (childName: string) => {\n          this.visibleWrites_ = compoundWriteRemoveWrite(\n            this.visibleWrites_,\n            pathChild(writeToRemove.path, childName)\n          );\n        });\n      }\n      return true;\n    }\n  }\n\n  /**\n   * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n   * No server data is considered.\n   *\n   */\n  getCompleteWriteData(path: Path): Node | null {\n    return compoundWriteGetCompleteNode(this.visibleWrites_, path);\n  }\n\n  /**\n   * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n   * writes), attempt to calculate a complete snapshot for the given path\n   *\n   * @param writeIdsToExclude An optional set to be excluded\n   * @param includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\n   */\n  calcCompleteEventCache(\n    treePath: Path,\n    completeServerCache: Node | null,\n    writeIdsToExclude?: number[],\n    includeHiddenWrites?: boolean\n  ): Node | null {\n    if (!writeIdsToExclude && !includeHiddenWrites) {\n      const shadowingNode = compoundWriteGetCompleteNode(\n        this.visibleWrites_,\n        treePath\n      );\n      if (shadowingNode != null) {\n        return shadowingNode;\n      } else {\n        const subMerge = compoundWriteChildCompoundWrite(\n          this.visibleWrites_,\n          treePath\n        );\n        if (compoundWriteIsEmpty(subMerge)) {\n          return completeServerCache;\n        } else if (\n          completeServerCache == null &&\n          !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())\n        ) {\n          // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n          return null;\n        } else {\n          const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n          return compoundWriteApply(subMerge, layeredCache);\n        }\n      }\n    } else {\n      const merge = compoundWriteChildCompoundWrite(\n        this.visibleWrites_,\n        treePath\n      );\n      if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n        return completeServerCache;\n      } else {\n        // If the server cache is null, and we don't have a complete cache, we need to return null\n        if (\n          !includeHiddenWrites &&\n          completeServerCache == null &&\n          !compoundWriteHasCompleteWrite(merge, newEmptyPath())\n        ) {\n          return null;\n        } else {\n          const filter = function (write: WriteRecord) {\n            return (\n              (write.visible || includeHiddenWrites) &&\n              (!writeIdsToExclude ||\n                !~writeIdsToExclude.indexOf(write.writeId)) &&\n              (pathContains(write.path, treePath) ||\n                pathContains(treePath, write.path))\n            );\n          };\n          const mergeAtPath = WriteTree.layerTree_(\n            this.allWrites_,\n            filter,\n            treePath\n          );\n          const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n          return compoundWriteApply(mergeAtPath, layeredCache);\n        }\n      }\n    }\n  }\n\n  /**\n   * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n   * Used when creating new views, to pre-fill their complete event children snapshot.\n   */\n  calcCompleteEventChildren(\n    treePath: Path,\n    completeServerChildren: ChildrenNode | null\n  ) {\n    let completeChildren = ChildrenNode.EMPTY_NODE as Node;\n    const topLevelSet = compoundWriteGetCompleteNode(\n      this.visibleWrites_,\n      treePath\n    );\n    if (topLevelSet) {\n      if (!topLevelSet.isLeafNode()) {\n        // we're shadowing everything. Return the children.\n        topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\n          completeChildren = completeChildren.updateImmediateChild(\n            childName,\n            childSnap\n          );\n        });\n      }\n      return completeChildren;\n    } else if (completeServerChildren) {\n      // Layer any children we have on top of this\n      // We know we don't have a top-level set, so just enumerate existing children\n      const merge = compoundWriteChildCompoundWrite(\n        this.visibleWrites_,\n        treePath\n      );\n      completeServerChildren.forEachChild(\n        PRIORITY_INDEX,\n        (childName, childNode) => {\n          const node = compoundWriteApply(\n            compoundWriteChildCompoundWrite(merge, new Path(childName)),\n            childNode\n          );\n          completeChildren = completeChildren.updateImmediateChild(\n            childName,\n            node\n          );\n        }\n      );\n      // Add any complete children we have from the set\n      compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n        completeChildren = completeChildren.updateImmediateChild(\n          namedNode.name,\n          namedNode.node\n        );\n      });\n      return completeChildren;\n    } else {\n      // We don't have anything to layer on top of. Layer on any children we have\n      // Note that we can return an empty snap if we have a defined delete\n      const merge = compoundWriteChildCompoundWrite(\n        this.visibleWrites_,\n        treePath\n      );\n      compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n        completeChildren = completeChildren.updateImmediateChild(\n          namedNode.name,\n          namedNode.node\n        );\n      });\n      return completeChildren;\n    }\n  }\n\n  /**\n   * Given that the underlying server data has updated, determine what, if anything, needs to be\n   * applied to the event cache.\n   *\n   * Possibilities:\n   *\n   * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n   *\n   * 2. Some write is completely shadowing. No events to be raised\n   *\n   * 3. Is partially shadowed. Events\n   *\n   * Either existingEventSnap or existingServerSnap must exist\n   */\n  calcEventCacheAfterServerOverwrite(\n    treePath: Path,\n    childPath: Path,\n    existingEventSnap: Node | null,\n    existingServerSnap: Node | null\n  ): Node | null {\n    assert(\n      existingEventSnap || existingServerSnap,\n      'Either existingEventSnap or existingServerSnap must exist'\n    );\n    const path = pathChild(treePath, childPath);\n    if (compoundWriteHasCompleteWrite(this.visibleWrites_, path)) {\n      // At this point we can probably guarantee that we're in case 2, meaning no events\n      // May need to check visibility while doing the findRootMostValueAndPath call\n      return null;\n    } else {\n      // No complete shadowing. We're either partially shadowing or not shadowing at all.\n      const childMerge = compoundWriteChildCompoundWrite(\n        this.visibleWrites_,\n        path\n      );\n      if (compoundWriteIsEmpty(childMerge)) {\n        // We're not shadowing at all. Case 1\n        return existingServerSnap.getChild(childPath);\n      } else {\n        // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n        // However this is tricky to find out, since user updates don't necessary change the server\n        // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n        // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n        // only check if the updates change the serverNode.\n        // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n        return compoundWriteApply(\n          childMerge,\n          existingServerSnap.getChild(childPath)\n        );\n      }\n    }\n  }\n\n  /**\n   * Returns a complete child for a given server snap after applying all user writes or null if there is no\n   * complete child for this ChildKey.\n   */\n  calcCompleteChild(\n    treePath: Path,\n    childKey: string,\n    existingServerSnap: CacheNode\n  ): Node | null {\n    const path = pathChild(treePath, childKey);\n    const shadowingNode = compoundWriteGetCompleteNode(\n      this.visibleWrites_,\n      path\n    );\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      if (existingServerSnap.isCompleteForChild(childKey)) {\n        const childMerge = compoundWriteChildCompoundWrite(\n          this.visibleWrites_,\n          path\n        );\n        return compoundWriteApply(\n          childMerge,\n          existingServerSnap.getNode().getImmediateChild(childKey)\n        );\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n   * a higher path, this will return the child of that write relative to the write and this path.\n   * Returns null if there is no write at this path.\n   */\n  shadowingWrite(path: Path): Node | null {\n    return compoundWriteGetCompleteNode(this.visibleWrites_, path);\n  }\n\n  /**\n   * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n   * the window, but may now be in the window.\n   */\n  calcIndexedSlice(\n    treePath: Path,\n    completeServerData: Node | null,\n    startPost: NamedNode,\n    count: number,\n    reverse: boolean,\n    index: Index\n  ): NamedNode[] {\n    let toIterate: Node;\n    const merge = compoundWriteChildCompoundWrite(\n      this.visibleWrites_,\n      treePath\n    );\n    const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n    if (shadowingNode != null) {\n      toIterate = shadowingNode;\n    } else if (completeServerData != null) {\n      toIterate = compoundWriteApply(merge, completeServerData);\n    } else {\n      // no children to iterate on\n      return [];\n    }\n    toIterate = toIterate.withIndex(index);\n    if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n      const nodes = [];\n      const cmp = index.getCompare();\n      const iter = reverse\n        ? (toIterate as ChildrenNode).getReverseIteratorFrom(startPost, index)\n        : (toIterate as ChildrenNode).getIteratorFrom(startPost, index);\n      let next = iter.getNext();\n      while (next && nodes.length < count) {\n        if (cmp(next, startPost) !== 0) {\n          nodes.push(next);\n        }\n        next = iter.getNext();\n      }\n      return nodes;\n    } else {\n      return [];\n    }\n  }\n\n  private recordContainsPath_(writeRecord: WriteRecord, path: Path): boolean {\n    if (writeRecord.snap) {\n      return pathContains(writeRecord.path, path);\n    } else {\n      for (const childName in writeRecord.children) {\n        if (\n          writeRecord.children.hasOwnProperty(childName) &&\n          pathContains(pathChild(writeRecord.path, childName), path)\n        ) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n\n  /**\n   * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n   */\n  private resetTree_() {\n    this.visibleWrites_ = WriteTree.layerTree_(\n      this.allWrites_,\n      WriteTree.DefaultFilter_,\n      newEmptyPath()\n    );\n    if (this.allWrites_.length > 0) {\n      this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\n    } else {\n      this.lastWriteId_ = -1;\n    }\n  }\n\n  /**\n   * The default filter used when constructing the tree. Keep everything that's visible.\n   */\n  private static DefaultFilter_(write: WriteRecord) {\n    return write.visible;\n  }\n\n  /**\n   * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n   * event data at that path.\n   */\n  private static layerTree_(\n    writes: WriteRecord[],\n    filter: (w: WriteRecord) => boolean,\n    treeRoot: Path\n  ): CompoundWrite {\n    let compoundWrite = CompoundWrite.empty();\n    for (let i = 0; i < writes.length; ++i) {\n      const write = writes[i];\n      // Theory, a later set will either:\n      // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n      // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n      if (filter(write)) {\n        const writePath = write.path;\n        let relativePath: Path;\n        if (write.snap) {\n          if (pathContains(treeRoot, writePath)) {\n            relativePath = newRelativePath(treeRoot, writePath);\n            compoundWrite = compoundWriteAddWrite(\n              compoundWrite,\n              relativePath,\n              write.snap\n            );\n          } else if (pathContains(writePath, treeRoot)) {\n            relativePath = newRelativePath(writePath, treeRoot);\n            compoundWrite = compoundWriteAddWrite(\n              compoundWrite,\n              newEmptyPath(),\n              write.snap.getChild(relativePath)\n            );\n          } else {\n            // There is no overlap between root path and write path, ignore write\n          }\n        } else if (write.children) {\n          if (pathContains(treeRoot, writePath)) {\n            relativePath = newRelativePath(treeRoot, writePath);\n            compoundWrite = compoundWriteAddWrites(\n              compoundWrite,\n              relativePath,\n              write.children\n            );\n          } else if (pathContains(writePath, treeRoot)) {\n            relativePath = newRelativePath(writePath, treeRoot);\n            if (pathIsEmpty(relativePath)) {\n              compoundWrite = compoundWriteAddWrites(\n                compoundWrite,\n                newEmptyPath(),\n                write.children\n              );\n            } else {\n              const child = safeGet(write.children, pathGetFront(relativePath));\n              if (child) {\n                // There exists a child in this node that matches the root path\n                const deepNode = child.getChild(pathPopFront(relativePath));\n                compoundWrite = compoundWriteAddWrite(\n                  compoundWrite,\n                  newEmptyPath(),\n                  deepNode\n                );\n              }\n            }\n          } else {\n            // There is no overlap between root path and write path, ignore write\n          }\n        } else {\n          throw assertionError('WriteRecord should have .snap or .children');\n        }\n      }\n    }\n    return compoundWrite;\n  }\n}\n\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n */\nexport class WriteTreeRef {\n  /**\n   * The path to this particular write tree ref. Used for calling methods on writeTree_ while exposing a simpler\n   * interface to callers.\n   */\n  private readonly treePath_: Path;\n\n  /**\n   * * A reference to the actual tree of write data. All methods are pass-through to the tree, but with the appropriate\n   * path prefixed.\n   *\n   * This lets us make cheap references to points in the tree for sync points without having to copy and maintain all of\n   * the data.\n   */\n  private readonly writeTree_: WriteTree;\n\n  constructor(path: Path, writeTree: WriteTree) {\n    this.treePath_ = path;\n    this.writeTree_ = writeTree;\n  }\n\n  /**\n   * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n   * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n   * can lead to a more expensive calculation.\n   *\n   * @param writeIdsToExclude Optional writes to exclude.\n   * @param includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\n   */\n  calcCompleteEventCache(\n    completeServerCache: Node | null,\n    writeIdsToExclude?: number[],\n    includeHiddenWrites?: boolean\n  ): Node | null {\n    return this.writeTree_.calcCompleteEventCache(\n      this.treePath_,\n      completeServerCache,\n      writeIdsToExclude,\n      includeHiddenWrites\n    );\n  }\n\n  /**\n   * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n   * mix of the given server data and write data.\n   *\n   */\n  calcCompleteEventChildren(\n    completeServerChildren: ChildrenNode | null\n  ): ChildrenNode {\n    return this.writeTree_.calcCompleteEventChildren(\n      this.treePath_,\n      completeServerChildren\n    ) as ChildrenNode;\n  }\n\n  /**\n   * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n   * if anything, needs to be applied to the event cache.\n   *\n   * Possibilities:\n   *\n   * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n   *\n   * 2. Some write is completely shadowing. No events to be raised\n   *\n   * 3. Is partially shadowed. Events should be raised\n   *\n   * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n   *\n   *\n   */\n  calcEventCacheAfterServerOverwrite(\n    path: Path,\n    existingEventSnap: Node | null,\n    existingServerSnap: Node | null\n  ): Node | null {\n    return this.writeTree_.calcEventCacheAfterServerOverwrite(\n      this.treePath_,\n      path,\n      existingEventSnap,\n      existingServerSnap\n    );\n  }\n\n  /**\n   * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n   * a higher path, this will return the child of that write relative to the write and this path.\n   * Returns null if there is no write at this path.\n   *\n   */\n  shadowingWrite(path: Path): Node | null {\n    return this.writeTree_.shadowingWrite(pathChild(this.treePath_, path));\n  }\n\n  /**\n   * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n   * the window, but may now be in the window\n   */\n  calcIndexedSlice(\n    completeServerData: Node | null,\n    startPost: NamedNode,\n    count: number,\n    reverse: boolean,\n    index: Index\n  ): NamedNode[] {\n    return this.writeTree_.calcIndexedSlice(\n      this.treePath_,\n      completeServerData,\n      startPost,\n      count,\n      reverse,\n      index\n    );\n  }\n\n  /**\n   * Returns a complete child for a given server snap after applying all user writes or null if there is no\n   * complete child for this ChildKey.\n   */\n  calcCompleteChild(\n    childKey: string,\n    existingServerCache: CacheNode\n  ): Node | null {\n    return this.writeTree_.calcCompleteChild(\n      this.treePath_,\n      childKey,\n      existingServerCache\n    );\n  }\n\n  /**\n   * Return a WriteTreeRef for a child.\n   */\n  child(childName: string): WriteTreeRef {\n    return new WriteTreeRef(\n      pathChild(this.treePath_, childName),\n      this.writeTree_\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\nimport { each, errorForServerCode } from './util/util';\nimport { AckUserWrite } from './operation/AckUserWrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport { ListenComplete } from './operation/ListenComplete';\nimport { Merge } from './operation/Merge';\nimport {\n  newOperationSourceServer,\n  newOperationSourceServerTaggedQuery,\n  newOperationSourceUser,\n  Operation\n} from './operation/Operation';\nimport { Overwrite } from './operation/Overwrite';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathGetFront,\n  pathIsEmpty\n} from './util/Path';\nimport { SyncPoint } from './SyncPoint';\nimport { WriteTree, WriteTreeRef } from './WriteTree';\nimport { Query } from '../api/Query';\nimport { Node } from './snap/Node';\nimport { Event } from './view/Event';\nimport { EventRegistration } from './view/EventRegistration';\nimport { View } from './view/View';\nimport { CacheNode } from './view/CacheNode';\n\n/**\n * @typedef {{\n *   startListening: function(\n *     !Query,\n *     ?number,\n *     function():string,\n *     function(!string, *):!Array.<!Event>\n *   ):!Array.<!Event>,\n *\n *   stopListening: function(!Query, ?number)\n * }}\n */\nexport interface ListenProvider {\n  startListening(\n    query: Query,\n    tag: number | null,\n    hashFn: () => string,\n    onComplete: (a: string, b?: unknown) => Event[]\n  ): Event[];\n\n  stopListening(a: Query, b: number | null): void;\n}\n\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n */\nexport class SyncTree {\n  /**\n   * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n   */\n  private syncPointTree_: ImmutableTree<SyncPoint> = new ImmutableTree<SyncPoint>(\n    null\n  );\n\n  /**\n   * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n   */\n  private pendingWriteTree_ = new WriteTree();\n\n  private readonly tagToQueryMap: Map<number, string> = new Map();\n  private readonly queryToTagMap: Map<string, number> = new Map();\n\n  /**\n   * @param listenProvider_ Used by SyncTree to start / stop listening\n   *   to server data.\n   */\n  constructor(private listenProvider_: ListenProvider) {}\n\n  /**\n   * Apply the data changes for a user-generated set() or transaction() call.\n   *\n   * @return Events to raise.\n   */\n  applyUserOverwrite(\n    path: Path,\n    newData: Node,\n    writeId: number,\n    visible?: boolean\n  ): Event[] {\n    // Record pending write.\n    this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\n\n    if (!visible) {\n      return [];\n    } else {\n      return this.applyOperationToSyncPoints_(\n        new Overwrite(newOperationSourceUser(), path, newData)\n      );\n    }\n  }\n\n  /**\n   * Apply the data from a user-generated update() call\n   *\n   * @return Events to raise.\n   */\n  applyUserMerge(\n    path: Path,\n    changedChildren: { [k: string]: Node },\n    writeId: number\n  ): Event[] {\n    // Record pending merge.\n    this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\n\n    const changeTree = ImmutableTree.fromObject(changedChildren);\n\n    return this.applyOperationToSyncPoints_(\n      new Merge(newOperationSourceUser(), path, changeTree)\n    );\n  }\n\n  /**\n   * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n   *\n   * @param revert True if the given write failed and needs to be reverted\n   * @return Events to raise.\n   */\n  ackUserWrite(writeId: number, revert: boolean = false) {\n    const write = this.pendingWriteTree_.getWrite(writeId);\n    const needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\n    if (!needToReevaluate) {\n      return [];\n    } else {\n      let affectedTree = new ImmutableTree<boolean>(null);\n      if (write.snap != null) {\n        // overwrite\n        affectedTree = affectedTree.set(newEmptyPath(), true);\n      } else {\n        each(write.children, (pathString: string) => {\n          affectedTree = affectedTree.set(new Path(pathString), true);\n        });\n      }\n      return this.applyOperationToSyncPoints_(\n        new AckUserWrite(write.path, affectedTree, revert)\n      );\n    }\n  }\n\n  /**\n   * Apply new server data for the specified path..\n   *\n   * @return Events to raise.\n   */\n  applyServerOverwrite(path: Path, newData: Node): Event[] {\n    return this.applyOperationToSyncPoints_(\n      new Overwrite(newOperationSourceServer(), path, newData)\n    );\n  }\n\n  /**\n   * Apply new server data to be merged in at the specified path.\n   *\n   * @return Events to raise.\n   */\n  applyServerMerge(\n    path: Path,\n    changedChildren: { [k: string]: Node }\n  ): Event[] {\n    const changeTree = ImmutableTree.fromObject(changedChildren);\n\n    return this.applyOperationToSyncPoints_(\n      new Merge(newOperationSourceServer(), path, changeTree)\n    );\n  }\n\n  /**\n   * Apply a listen complete for a query\n   *\n   * @return Events to raise.\n   */\n  applyListenComplete(path: Path): Event[] {\n    return this.applyOperationToSyncPoints_(\n      new ListenComplete(newOperationSourceServer(), path)\n    );\n  }\n\n  /**\n   * Apply new server data for the specified tagged query.\n   *\n   * @return Events to raise.\n   */\n  applyTaggedQueryOverwrite(path: Path, snap: Node, tag: number): Event[] {\n    const queryKey = this.queryKeyForTag_(tag);\n    if (queryKey != null) {\n      const r = SyncTree.parseQueryKey_(queryKey);\n      const queryPath = r.path,\n        queryId = r.queryId;\n      const relativePath = newRelativePath(queryPath, path);\n      const op = new Overwrite(\n        newOperationSourceServerTaggedQuery(queryId),\n        relativePath,\n        snap\n      );\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // Query must have been removed already\n      return [];\n    }\n  }\n\n  /**\n   * Apply server data to be merged in for the specified tagged query.\n   *\n   * @return Events to raise.\n   */\n  applyTaggedQueryMerge(\n    path: Path,\n    changedChildren: { [k: string]: Node },\n    tag: number\n  ): Event[] {\n    const queryKey = this.queryKeyForTag_(tag);\n    if (queryKey) {\n      const r = SyncTree.parseQueryKey_(queryKey);\n      const queryPath = r.path,\n        queryId = r.queryId;\n      const relativePath = newRelativePath(queryPath, path);\n      const changeTree = ImmutableTree.fromObject(changedChildren);\n      const op = new Merge(\n        newOperationSourceServerTaggedQuery(queryId),\n        relativePath,\n        changeTree\n      );\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // We've already removed the query. No big deal, ignore the update\n      return [];\n    }\n  }\n\n  /**\n   * Apply a listen complete for a tagged query\n   *\n   * @return Events to raise.\n   */\n  applyTaggedListenComplete(path: Path, tag: number): Event[] {\n    const queryKey = this.queryKeyForTag_(tag);\n    if (queryKey) {\n      const r = SyncTree.parseQueryKey_(queryKey);\n      const queryPath = r.path,\n        queryId = r.queryId;\n      const relativePath = newRelativePath(queryPath, path);\n      const op = new ListenComplete(\n        newOperationSourceServerTaggedQuery(queryId),\n        relativePath\n      );\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // We've already removed the query. No big deal, ignore the update\n      return [];\n    }\n  }\n\n  /**\n   * Add an event callback for the specified query.\n   *\n   * @return Events to raise.\n   */\n  addEventRegistration(\n    query: Query,\n    eventRegistration: EventRegistration\n  ): Event[] {\n    const path = query.path;\n\n    let serverCache: Node | null = null;\n    let foundAncestorDefaultView = false;\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\n    this.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n      const relativePath = newRelativePath(pathToSyncPoint, path);\n      serverCache = serverCache || sp.getCompleteServerCache(relativePath);\n      foundAncestorDefaultView =\n        foundAncestorDefaultView || sp.hasCompleteView();\n    });\n    let syncPoint = this.syncPointTree_.get(path);\n    if (!syncPoint) {\n      syncPoint = new SyncPoint();\n      this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\n    } else {\n      foundAncestorDefaultView =\n        foundAncestorDefaultView || syncPoint.hasCompleteView();\n      serverCache =\n        serverCache || syncPoint.getCompleteServerCache(newEmptyPath());\n    }\n\n    let serverCacheComplete;\n    if (serverCache != null) {\n      serverCacheComplete = true;\n    } else {\n      serverCacheComplete = false;\n      serverCache = ChildrenNode.EMPTY_NODE;\n      const subtree = this.syncPointTree_.subtree(path);\n      subtree.foreachChild((childName, childSyncPoint) => {\n        const completeCache = childSyncPoint.getCompleteServerCache(\n          newEmptyPath()\n        );\n        if (completeCache) {\n          serverCache = serverCache.updateImmediateChild(\n            childName,\n            completeCache\n          );\n        }\n      });\n    }\n\n    const viewAlreadyExists = syncPoint.viewExistsForQuery(query);\n    if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\n      // We need to track a tag for this query\n      const queryKey = SyncTree.makeQueryKey_(query);\n      assert(\n        !this.queryToTagMap.has(queryKey),\n        'View does not exist, but we have a tag'\n      );\n      const tag = SyncTree.getNextQueryTag_();\n      this.queryToTagMap.set(queryKey, tag);\n      this.tagToQueryMap.set(tag, queryKey);\n    }\n    const writesCache = this.pendingWriteTree_.childWrites(path);\n    let events = syncPoint.addEventRegistration(\n      query,\n      eventRegistration,\n      writesCache,\n      serverCache,\n      serverCacheComplete\n    );\n    if (!viewAlreadyExists && !foundAncestorDefaultView) {\n      const view = syncPoint.viewForQuery(query);\n      events = events.concat(this.setupListener_(query, view));\n    }\n    return events;\n  }\n\n  /**\n   * Remove event callback(s).\n   *\n   * If query is the default query, we'll check all queries for the specified eventRegistration.\n   * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n   *\n   * @param eventRegistration If null, all callbacks are removed.\n   * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\n   * @return Cancel events, if cancelError was provided.\n   */\n  removeEventRegistration(\n    query: Query,\n    eventRegistration: EventRegistration | null,\n    cancelError?: Error\n  ): Event[] {\n    // Find the syncPoint first. Then deal with whether or not it has matching listeners\n    const path = query.path;\n    const maybeSyncPoint = this.syncPointTree_.get(path);\n    let cancelEvents: Event[] = [];\n    // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n    // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n    // not loadsAllData().\n    if (\n      maybeSyncPoint &&\n      (query.queryIdentifier() === 'default' ||\n        maybeSyncPoint.viewExistsForQuery(query))\n    ) {\n      const removedAndEvents = maybeSyncPoint.removeEventRegistration(\n        query,\n        eventRegistration,\n        cancelError\n      );\n      if (maybeSyncPoint.isEmpty()) {\n        this.syncPointTree_ = this.syncPointTree_.remove(path);\n      }\n      const removed = removedAndEvents.removed;\n      cancelEvents = removedAndEvents.events;\n      // We may have just removed one of many listeners and can short-circuit this whole process\n      // We may also not have removed a default listener, in which case all of the descendant listeners should already be\n      // properly set up.\n      //\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n      const removingDefault =\n        -1 !==\n        removed.findIndex(query => {\n          return query.getQueryParams().loadsAllData();\n        });\n      const covered = this.syncPointTree_.findOnPath(\n        path,\n        (relativePath, parentSyncPoint) => {\n          return parentSyncPoint.hasCompleteView();\n        }\n      );\n\n      if (removingDefault && !covered) {\n        const subtree = this.syncPointTree_.subtree(path);\n        // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          const newViews = this.collectDistinctViewsForSubTree_(subtree);\n\n          // Ok, we've collected all the listens we need. Set them up.\n          for (let i = 0; i < newViews.length; ++i) {\n            const view = newViews[i],\n              newQuery = view.getQuery();\n            const listener = this.createListenerForView_(view);\n            this.listenProvider_.startListening(\n              SyncTree.queryForListening_(newQuery),\n              this.tagForQuery_(newQuery),\n              listener.hashFn,\n              listener.onComplete\n            );\n          }\n        } else {\n          // There's nothing below us, so nothing we need to start listening on\n        }\n      }\n      // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          const defaultTag: number | null = null;\n          this.listenProvider_.stopListening(\n            SyncTree.queryForListening_(query),\n            defaultTag\n          );\n        } else {\n          removed.forEach((queryToRemove: Query) => {\n            const tagToRemove = this.queryToTagMap.get(\n              SyncTree.makeQueryKey_(queryToRemove)\n            );\n            this.listenProvider_.stopListening(\n              SyncTree.queryForListening_(queryToRemove),\n              tagToRemove\n            );\n          });\n        }\n      }\n      // Now, clear all of the tags we're tracking for the removed listens\n      this.removeTags_(removed);\n    } else {\n      // No-op, this listener must've been already removed\n    }\n    return cancelEvents;\n  }\n\n  /**\n   * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\n   * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\n   * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\n   *     <incremented total> as the write is applied locally and then acknowledged at the server.\n   *\n   * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n   *\n   * @param path The path to the data we want\n   * @param writeIdsToExclude A specific set to be excluded\n   */\n  calcCompleteEventCache(path: Path, writeIdsToExclude?: number[]): Node {\n    const includeHiddenSets = true;\n    const writeTree = this.pendingWriteTree_;\n    const serverCache = this.syncPointTree_.findOnPath(\n      path,\n      (pathSoFar, syncPoint) => {\n        const relativePath = newRelativePath(pathSoFar, path);\n        const serverCache = syncPoint.getCompleteServerCache(relativePath);\n        if (serverCache) {\n          return serverCache;\n        }\n      }\n    );\n    return writeTree.calcCompleteEventCache(\n      path,\n      serverCache,\n      writeIdsToExclude,\n      includeHiddenSets\n    );\n  }\n\n  getServerValue(query: Query): Node | null {\n    const path = query.path;\n    let serverCache: Node | null = null;\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\n    this.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n      const relativePath = newRelativePath(pathToSyncPoint, path);\n      serverCache = serverCache || sp.getCompleteServerCache(relativePath);\n    });\n    let syncPoint = this.syncPointTree_.get(path);\n    if (!syncPoint) {\n      syncPoint = new SyncPoint();\n      this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\n    } else {\n      serverCache =\n        serverCache || syncPoint.getCompleteServerCache(newEmptyPath());\n    }\n    const serverCacheComplete = serverCache != null;\n    const serverCacheNode: CacheNode | null = serverCacheComplete\n      ? new CacheNode(serverCache, true, false)\n      : null;\n    const writesCache: WriteTreeRef | null = this.pendingWriteTree_.childWrites(\n      query.path\n    );\n    const view: View = syncPoint.getView(\n      query,\n      writesCache,\n      serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE,\n      serverCacheComplete\n    );\n    return view.getCompleteNode();\n  }\n\n  /**\n   * This collapses multiple unfiltered views into a single view, since we only need a single\n   * listener for them.\n   */\n  private collectDistinctViewsForSubTree_(\n    subtree: ImmutableTree<SyncPoint>\n  ): View[] {\n    return subtree.fold<View[]>(\n      (relativePath, maybeChildSyncPoint, childMap) => {\n        if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\n          const completeView = maybeChildSyncPoint.getCompleteView();\n          return [completeView];\n        } else {\n          // No complete view here, flatten any deeper listens into an array\n          let views: View[] = [];\n          if (maybeChildSyncPoint) {\n            views = maybeChildSyncPoint.getQueryViews();\n          }\n          each(childMap, (_key: string, childViews: View[]) => {\n            views = views.concat(childViews);\n          });\n          return views;\n        }\n      }\n    );\n  }\n\n  private removeTags_(queries: Query[]) {\n    for (let j = 0; j < queries.length; ++j) {\n      const removedQuery = queries[j];\n      if (!removedQuery.getQueryParams().loadsAllData()) {\n        // We should have a tag for this\n        const removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\n        const removedQueryTag = this.queryToTagMap.get(removedQueryKey);\n        this.queryToTagMap.delete(removedQueryKey);\n        this.tagToQueryMap.delete(removedQueryTag);\n      }\n    }\n  }\n\n  /**\n   * Normalizes a query to a query we send the server for listening\n   *\n   * @return The normalized query\n   */\n  private static queryForListening_(query: Query): Query {\n    if (\n      query.getQueryParams().loadsAllData() &&\n      !query.getQueryParams().isDefault()\n    ) {\n      // We treat queries that load all data as default queries\n      // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n      // from Query\n      return query.getRef()!;\n    } else {\n      return query;\n    }\n  }\n\n  /**\n   * For a given new listen, manage the de-duplication of outstanding subscriptions.\n   *\n   * @return This method can return events to support synchronous data sources\n   */\n  private setupListener_(query: Query, view: View): Event[] {\n    const path = query.path;\n    const tag = this.tagForQuery_(query);\n    const listener = this.createListenerForView_(view);\n\n    const events = this.listenProvider_.startListening(\n      SyncTree.queryForListening_(query),\n      tag,\n      listener.hashFn,\n      listener.onComplete\n    );\n\n    const subtree = this.syncPointTree_.subtree(path);\n    // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n    // may need to shadow other listens as well.\n    if (tag) {\n      assert(\n        !subtree.value.hasCompleteView(),\n        \"If we're adding a query, it shouldn't be shadowed\"\n      );\n    } else {\n      // Shadow everything at or below this location, this is a default listener.\n      const queriesToStop = subtree.fold<Query[]>(\n        (relativePath, maybeChildSyncPoint, childMap) => {\n          if (\n            !pathIsEmpty(relativePath) &&\n            maybeChildSyncPoint &&\n            maybeChildSyncPoint.hasCompleteView()\n          ) {\n            return [maybeChildSyncPoint.getCompleteView().getQuery()];\n          } else {\n            // No default listener here, flatten any deeper queries into an array\n            let queries: Query[] = [];\n            if (maybeChildSyncPoint) {\n              queries = queries.concat(\n                maybeChildSyncPoint.getQueryViews().map(view => view.getQuery())\n              );\n            }\n            each(childMap, (_key: string, childQueries: Query[]) => {\n              queries = queries.concat(childQueries);\n            });\n            return queries;\n          }\n        }\n      );\n      for (let i = 0; i < queriesToStop.length; ++i) {\n        const queryToStop = queriesToStop[i];\n        this.listenProvider_.stopListening(\n          SyncTree.queryForListening_(queryToStop),\n          this.tagForQuery_(queryToStop)\n        );\n      }\n    }\n    return events;\n  }\n\n  private createListenerForView_(\n    view: View\n  ): { hashFn(): string; onComplete(a: string, b?: unknown): Event[] } {\n    const query = view.getQuery();\n    const tag = this.tagForQuery_(query);\n\n    return {\n      hashFn: () => {\n        const cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\n        return cache.hash();\n      },\n      onComplete: (status: string): Event[] => {\n        if (status === 'ok') {\n          if (tag) {\n            return this.applyTaggedListenComplete(query.path, tag);\n          } else {\n            return this.applyListenComplete(query.path);\n          }\n        } else {\n          // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n          // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n          const error = errorForServerCode(status, query);\n          return this.removeEventRegistration(\n            query,\n            /*eventRegistration*/ null,\n            error\n          );\n        }\n      }\n    };\n  }\n\n  /**\n   * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n   */\n  private static makeQueryKey_(query: Query): string {\n    return query.path.toString() + '$' + query.queryIdentifier();\n  }\n\n  /**\n   * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n   */\n  private static parseQueryKey_(\n    queryKey: string\n  ): { queryId: string; path: Path } {\n    const splitIndex = queryKey.indexOf('$');\n    assert(\n      splitIndex !== -1 && splitIndex < queryKey.length - 1,\n      'Bad queryKey.'\n    );\n    return {\n      queryId: queryKey.substr(splitIndex + 1),\n      path: new Path(queryKey.substr(0, splitIndex))\n    };\n  }\n\n  /**\n   * Return the query associated with the given tag, if we have one\n   */\n  private queryKeyForTag_(tag: number): string | null {\n    return this.tagToQueryMap.get(tag);\n  }\n\n  /**\n   * Return the tag associated with the given query.\n   */\n  private tagForQuery_(query: Query): number | null {\n    const queryKey = SyncTree.makeQueryKey_(query);\n    return this.queryToTagMap.get(queryKey);\n  }\n\n  /**\n   * Static tracker for next query tag.\n   */\n  private static nextQueryTag_ = 1;\n\n  /**\n   * Static accessor for query tags.\n   */\n  private static getNextQueryTag_(): number {\n    return SyncTree.nextQueryTag_++;\n  }\n\n  /**\n   * A helper method to apply tagged operations\n   */\n  private applyTaggedOperation_(\n    queryPath: Path,\n    operation: Operation\n  ): Event[] {\n    const syncPoint = this.syncPointTree_.get(queryPath);\n    assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n    const writesCache = this.pendingWriteTree_.childWrites(queryPath);\n    return syncPoint.applyOperation(\n      operation,\n      writesCache,\n      /*serverCache=*/ null\n    );\n  }\n\n  /**\n   * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n   *\n   * NOTES:\n   * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n   *\n   * - We call applyOperation() on each SyncPoint passing three things:\n   *   1. A version of the Operation that has been made relative to the SyncPoint location.\n   *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n   *   3. A snapshot Node with cached server data, if we have it.\n   *\n   * - We concatenate all of the events returned by each SyncPoint and return the result.\n   */\n  private applyOperationToSyncPoints_(operation: Operation): Event[] {\n    return this.applyOperationHelper_(\n      operation,\n      this.syncPointTree_,\n      /*serverCache=*/ null,\n      this.pendingWriteTree_.childWrites(newEmptyPath())\n    );\n  }\n\n  /**\n   * Recursive helper for applyOperationToSyncPoints_\n   */\n  private applyOperationHelper_(\n    operation: Operation,\n    syncPointTree: ImmutableTree<SyncPoint>,\n    serverCache: Node | null,\n    writesCache: WriteTreeRef\n  ): Event[] {\n    if (pathIsEmpty(operation.path)) {\n      return this.applyOperationDescendantsHelper_(\n        operation,\n        syncPointTree,\n        serverCache,\n        writesCache\n      );\n    } else {\n      const syncPoint = syncPointTree.get(newEmptyPath());\n\n      // If we don't have cached server data, see if we can get it from this SyncPoint.\n      if (serverCache == null && syncPoint != null) {\n        serverCache = syncPoint.getCompleteServerCache(newEmptyPath());\n      }\n\n      let events: Event[] = [];\n      const childName = pathGetFront(operation.path);\n      const childOperation = operation.operationForChild(childName);\n      const childTree = syncPointTree.children.get(childName);\n      if (childTree && childOperation) {\n        const childServerCache = serverCache\n          ? serverCache.getImmediateChild(childName)\n          : null;\n        const childWritesCache = writesCache.child(childName);\n        events = events.concat(\n          this.applyOperationHelper_(\n            childOperation,\n            childTree,\n            childServerCache,\n            childWritesCache\n          )\n        );\n      }\n\n      if (syncPoint) {\n        events = events.concat(\n          syncPoint.applyOperation(operation, writesCache, serverCache)\n        );\n      }\n\n      return events;\n    }\n  }\n\n  /**\n   * Recursive helper for applyOperationToSyncPoints_\n   */\n  private applyOperationDescendantsHelper_(\n    operation: Operation,\n    syncPointTree: ImmutableTree<SyncPoint>,\n    serverCache: Node | null,\n    writesCache: WriteTreeRef\n  ): Event[] {\n    const syncPoint = syncPointTree.get(newEmptyPath());\n\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPoint.getCompleteServerCache(newEmptyPath());\n    }\n\n    let events: Event[] = [];\n    syncPointTree.children.inorderTraversal((childName, childTree) => {\n      const childServerCache = serverCache\n        ? serverCache.getImmediateChild(childName)\n        : null;\n      const childWritesCache = writesCache.child(childName);\n      const childOperation = operation.operationForChild(childName);\n      if (childOperation) {\n        events = events.concat(\n          this.applyOperationDescendantsHelper_(\n            childOperation,\n            childTree,\n            childServerCache,\n            childWritesCache\n          )\n        );\n      }\n    });\n\n    if (syncPoint) {\n      events = events.concat(\n        syncPoint.applyOperation(operation, writesCache, serverCache)\n      );\n    }\n\n    return events;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Path } from './util/Path';\nimport { Node } from './snap/Node';\n\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n */\nexport class SnapshotHolder {\n  private rootNode_: Node = ChildrenNode.EMPTY_NODE;\n\n  getNode(path: Path): Node {\n    return this.rootNode_.getChild(path);\n  }\n\n  updateSnapshot(path: Path, newSnapshotNode: Node) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deepCopy, contains } from '@firebase/util';\n\n/**\n * Tracks a collection of stats.\n */\nexport class StatsCollection {\n  private counters_: { [k: string]: number } = {};\n\n  incrementCounter(name: string, amount: number = 1) {\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  }\n\n  get() {\n    return deepCopy(this.counters_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { StatsCollection } from './StatsCollection';\nimport { RepoInfo } from '../RepoInfo';\n\nexport class StatsManager {\n  private static collections_: { [k: string]: StatsCollection } = {};\n  private static reporters_: { [k: string]: unknown } = {};\n\n  static getCollection(repoInfo: RepoInfo): StatsCollection {\n    const hashString = repoInfo.toString();\n\n    if (!this.collections_[hashString]) {\n      this.collections_[hashString] = new StatsCollection();\n    }\n\n    return this.collections_[hashString];\n  }\n\n  static getOrCreateReporter<T>(\n    repoInfo: RepoInfo,\n    creatorFunction: () => T\n  ): T {\n    const hashString = repoInfo.toString();\n\n    if (!this.reporters_[hashString]) {\n      this.reporters_[hashString] = creatorFunction();\n    }\n\n    return this.reporters_[hashString] as T;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { StatsCollection } from './StatsCollection';\nimport { each } from '../util/util';\n\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ The collection to \"listen\" to.\n */\nexport class StatsListener {\n  private last_: { [k: string]: number } | null = null;\n\n  constructor(private collection_: StatsCollection) {}\n\n  get(): { [k: string]: number } {\n    const newStats = this.collection_.get();\n\n    const delta = { ...newStats };\n    if (this.last_) {\n      each(this.last_, (stat: string, value: number) => {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n\n    return delta;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\nimport { setTimeoutNonBlocking, each } from '../util/util';\nimport { StatsListener } from './StatsListener';\nimport { StatsCollection } from './StatsCollection';\nimport { ServerActions } from '../ServerActions';\n\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\n\n// We'll continue to report stats on average every 5 minutes.\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nexport class StatsReporter {\n  private statsListener_: StatsListener;\n  private statsToReport_: { [k: string]: boolean } = {};\n\n  /**\n   * @param collection\n   * @param server_\n   */\n  constructor(collection: StatsCollection, private server_: ServerActions) {\n    this.statsListener_ = new StatsListener(collection);\n\n    const timeout =\n      FIRST_STATS_MIN_TIME +\n      (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  includeStat(stat: string) {\n    this.statsToReport_[stat] = true;\n  }\n\n  private reportStats_() {\n    const stats = this.statsListener_.get();\n    const reportedStats: typeof stats = {};\n    let haveStatsToReport = false;\n\n    each(stats, (stat: string, value: number) => {\n      if (value > 0 && contains(this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    }\n\n    // queue our next run.\n    setTimeoutNonBlocking(\n      this.reportStats_.bind(this),\n      Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL)\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path, pathContains, pathEquals } from '../util/Path';\nimport { exceptionGuard, log, logger } from '../util/util';\nimport { Event } from './Event';\n\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n */\nexport class EventQueue {\n  eventLists_: EventList[] = [];\n\n  /**\n   * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n   */\n  recursionDepth_ = 0;\n}\n\n/**\n * @param eventDataList The new events to queue.\n */\nexport function eventQueueQueueEvents(\n  eventQueue: EventQueue,\n  eventDataList: Event[]\n) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  let currList: EventList | null = null;\n  for (let i = 0; i < eventDataList.length; i++) {\n    const data = eventDataList[i];\n    const path = data.getPath();\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = { events: [], path };\n    }\n\n    currList.events.push(data);\n  }\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones)\n * for the specified path.\n *\n * It is assumed that the new events are all for the specified path.\n *\n * @param path The path to raise events for.\n * @param eventDataList The new events to raise.\n */\nexport function eventQueueRaiseEventsAtPath(\n  eventQueue: EventQueue,\n  path: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath =>\n    pathEquals(eventPath, path)\n  );\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\n * locations related to the specified change path (i.e. all ancestors and descendants).\n *\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n *\n * @param changedPath The path to raise events for.\n * @param eventDataList The events to raise\n */\nexport function eventQueueRaiseEventsForChangedPath(\n  eventQueue: EventQueue,\n  changedPath: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(\n    eventQueue,\n    eventPath =>\n      pathContains(eventPath, changedPath) ||\n      pathContains(changedPath, eventPath)\n  );\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(\n  eventQueue: EventQueue,\n  predicate: (path: Path) => boolean\n) {\n  eventQueue.recursionDepth_++;\n\n  let sentAll = true;\n  for (let i = 0; i < eventQueue.eventLists_.length; i++) {\n    const eventList = eventQueue.eventLists_[i];\n    if (eventList) {\n      const eventPath = eventList.path;\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n\ninterface EventList {\n  events: Event[];\n  path: Path;\n}\n\n/**\n * Iterates through the list and raises each event\n */\nfunction eventListRaise(eventList: EventList) {\n  for (let i = 0; i < eventList.events.length; i++) {\n    const eventData = eventList.events[i];\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      const eventFn = eventData.getEventRunner();\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n      exceptionGuard(eventFn);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nexport abstract class EventEmitter {\n  private listeners_: {\n    [eventType: string]: Array<{\n      callback(...args: unknown[]): void;\n      context: unknown;\n    }>;\n  } = {};\n\n  constructor(private allowedEvents_: string[]) {\n    assert(\n      Array.isArray(allowedEvents_) && allowedEvents_.length > 0,\n      'Requires a non-empty array'\n    );\n  }\n\n  /**\n   * To be overridden by derived classes in order to fire an initial event when\n   * somebody subscribes for data.\n   *\n   * @return {Array.<*>} Array of parameters to trigger initial event with.\n   */\n  abstract getInitialEvent(eventType: string): unknown[];\n\n  /**\n   * To be called by derived classes to trigger events.\n   */\n  protected trigger(eventType: string, ...varArgs: unknown[]) {\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      const listeners = [...this.listeners_[eventType]];\n\n      for (let i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  }\n\n  on(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({ callback, context });\n\n    const eventData = this.getInitialEvent(eventType);\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  }\n\n  off(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    const listeners = this.listeners_[eventType] || [];\n    for (let i = 0; i < listeners.length; i++) {\n      if (\n        listeners[i].callback === callback &&\n        (!context || context === listeners[i].context)\n      ) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  private validateEventType_(eventType: string) {\n    assert(\n      this.allowedEvents_.find(et => {\n        return et === eventType;\n      }),\n      'Unknown event: ' + eventType\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter } from './EventEmitter';\nimport { assert } from '@firebase/util';\n\ndeclare const document: Document;\n\nexport class VisibilityMonitor extends EventEmitter {\n  private visible_: boolean;\n\n  static getInstance() {\n    return new VisibilityMonitor();\n  }\n\n  constructor() {\n    super(['visible']);\n    let hidden: string;\n    let visibilityChange: string;\n    if (\n      typeof document !== 'undefined' &&\n      typeof document.addEventListener !== 'undefined'\n    ) {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    }\n\n    // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n    this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(\n        visibilityChange,\n        () => {\n          const visible = !document[hidden];\n          if (visible !== this.visible_) {\n            this.visible_ = visible;\n            this.trigger('visible', visible);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isMobileCordova } from '@firebase/util';\nimport { EventEmitter } from './EventEmitter';\n\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n */\nexport class OnlineMonitor extends EventEmitter {\n  private online_ = true;\n\n  static getInstance() {\n    return new OnlineMonitor();\n  }\n\n  constructor() {\n    super(['online']);\n\n    // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window.addEventListener !== 'undefined' &&\n      !isMobileCordova()\n    ) {\n      window.addEventListener(\n        'online',\n        () => {\n          if (!this.online_) {\n            this.online_ = true;\n            this.trigger('online', true);\n          }\n        },\n        false\n      );\n\n      window.addEventListener(\n        'offline',\n        () => {\n          if (this.online_) {\n            this.online_ = false;\n            this.trigger('online', false);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  }\n\n  currentlyOnline(): boolean {\n    return this.online_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { exceptionGuard } from '../../core/util/util';\n\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n */\nexport class PacketReceiver {\n  pendingResponses: unknown[] = [];\n  currentResponseNum = 0;\n  closeAfterResponse = -1;\n  onClose: (() => void) | null = null;\n\n  /**\n   * @param onMessage_\n   */\n  constructor(private onMessage_: (a: {}) => void) {}\n\n  closeAfter(responseNum: number, callback: () => void) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  }\n\n  /**\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n   * browsers will respond in the same order as the requests we sent\n   */\n  handleResponse(requestNum: number, data: unknown[]) {\n    this.pendingResponses[requestNum] = data;\n    while (this.pendingResponses[this.currentResponseNum]) {\n      const toProcess = this.pendingResponses[\n        this.currentResponseNum\n      ] as unknown[];\n      delete this.pendingResponses[this.currentResponseNum];\n      for (let i = 0; i < toProcess.length; ++i) {\n        if (toProcess[i]) {\n          exceptionGuard(() => {\n            this.onMessage_(toProcess[i]);\n          });\n        }\n      }\n      if (this.currentResponseNum === this.closeAfterResponse) {\n        if (this.onClose) {\n          this.onClose();\n          this.onClose = null;\n        }\n        break;\n      }\n      this.currentResponseNum++;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  executeWhenDOMReady,\n  isChromeExtensionContentScript,\n  isWindowsStoreApp,\n  log,\n  logWrapper,\n  LUIDGenerator,\n  splitStringBySize\n} from '../core/util/util';\nimport { StatsManager } from '../core/stats/StatsManager';\nimport { PacketReceiver } from './polling/PacketReceiver';\nimport {\n  APPLICATION_ID_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  LONG_POLLING,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM\n} from './Constants';\nimport { base64Encode, stringify, isNodeSdk } from '@firebase/util';\n\nimport { Transport } from './Transport';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\n\n// URL query parameters associated with longpolling\nexport const FIREBASE_LONGPOLL_START_PARAM = 'start';\nexport const FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nexport const FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nexport const FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nexport const FIREBASE_LONGPOLL_ID_PARAM = 'id';\nexport const FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nexport const FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nexport const FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nexport const FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nexport const FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nexport const FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nconst MAX_URL_DATA_SIZE = 1870;\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n */\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\n\n/**\n * How long to wait before aborting a long-polling connection attempt.\n */\nconst LP_CONNECT_TIMEOUT = 30000;\n\n/**\n * This class manages a single long-polling connection.\n */\nexport class BrowserPollConnection implements Transport {\n  bytesSent = 0;\n  bytesReceived = 0;\n  urlFn: (params: object) => string;\n  scriptTagHolder: FirebaseIFrameScriptHolder;\n  myDisconnFrame: HTMLIFrameElement;\n  curSegmentNum: number;\n  myPacketOrderer: PacketReceiver;\n  id: string;\n  password: string;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_ = false;\n  private isClosed_: boolean;\n  private connectTimeoutTimer_: number | null;\n  private onDisconnect_: ((a?: boolean) => void) | null;\n\n  /**\n   * @param connId An identifier for this connection, used for logging\n   * @param repoInfo The info for the endpoint to send data to.\n   * @param applicationId The Firebase App ID for this project.\n   * @param transportSessionId Optional transportSessionid if we are reconnecting for an existing\n   *                                         transport session\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has already created a\n   *                                     connection previously\n   */\n  constructor(\n    public connId: string,\n    public repoInfo: RepoInfo,\n    private applicationId?: string,\n    public transportSessionId?: string,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(connId);\n    this.stats_ = StatsManager.getCollection(repoInfo);\n    this.urlFn = (params: { [k: string]: string }) =>\n      repoInfo.connectionURL(LONG_POLLING, params);\n  }\n\n  /**\n   * @param onMessage Callback when messages arrive\n   * @param onDisconnect Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n\n    this.connectTimeoutTimer_ = setTimeout(() => {\n      this.log_('Timed out trying to connect.');\n      // Make sure we clear the host cache\n      this.onClosed_();\n      this.connectTimeoutTimer_ = null;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)) as any;\n\n    // Ensure we delay the creation of the iframe until the DOM is loaded.\n    executeWhenDOMReady(() => {\n      if (this.isClosed_) {\n        return;\n      }\n\n      //Set up a callback that gets triggered once a connection is set up.\n      this.scriptTagHolder = new FirebaseIFrameScriptHolder(\n        (...args) => {\n          const [command, arg1, arg2, arg3, arg4] = args;\n          this.incrementIncomingBytes_(args);\n          if (!this.scriptTagHolder) {\n            return; // we closed the connection.\n          }\n\n          if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n          }\n          this.everConnected_ = true;\n          if (command === FIREBASE_LONGPOLL_START_PARAM) {\n            this.id = arg1 as string;\n            this.password = arg2 as string;\n          } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n            // Don't clear the host cache. We got a response from the server, so we know it's reachable\n            if (arg1) {\n              // We aren't expecting any more data (other than what the server's already in the process of sending us\n              // through our already open polls), so don't send any more.\n              this.scriptTagHolder.sendNewPolls = false;\n\n              // arg1 in this case is the last response number sent by the server. We should try to receive\n              // all of the responses up to this one before closing\n              this.myPacketOrderer.closeAfter(arg1 as number, () => {\n                this.onClosed_();\n              });\n            } else {\n              this.onClosed_();\n            }\n          } else {\n            throw new Error('Unrecognized command received: ' + command);\n          }\n        },\n        (...args) => {\n          const [pN, data] = args;\n          this.incrementIncomingBytes_(args);\n          this.myPacketOrderer.handleResponse(pN as number, data as unknown[]);\n        },\n        () => {\n          this.onClosed_();\n        },\n        this.urlFn\n      );\n\n      //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(\n        Math.random() * 100000000\n      );\n      if (this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[\n          FIREBASE_LONGPOLL_CALLBACK_ID_PARAM\n        ] = this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n      if (this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\n      }\n      if (this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\n      }\n      if (this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = this.applicationId;\n      }\n      if (\n        typeof location !== 'undefined' &&\n        location.hostname &&\n        FORGE_DOMAIN_RE.test(location.hostname)\n      ) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n      const connectURL = this.urlFn(urlParams);\n      this.log_('Connecting via long-poll to ' + connectURL);\n      this.scriptTagHolder.addTag(connectURL, () => {\n        /* do nothing */\n      });\n    });\n  }\n\n  /**\n   * Call this when a handshake has completed successfully and we want to consider the connection established\n   */\n  start() {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  }\n\n  private static forceAllow_: boolean;\n\n  /**\n   * Forces long polling to be considered as a potential transport\n   */\n  static forceAllow() {\n    BrowserPollConnection.forceAllow_ = true;\n  }\n\n  private static forceDisallow_: boolean;\n\n  /**\n   * Forces longpolling to not be considered as a potential transport\n   */\n  static forceDisallow() {\n    BrowserPollConnection.forceDisallow_ = true;\n  }\n\n  // Static method, use string literal so it can be accessed in a generic way\n  static isAvailable() {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return (\n        !BrowserPollConnection.forceDisallow_ &&\n        typeof document !== 'undefined' &&\n        document.createElement != null &&\n        !isChromeExtensionContentScript() &&\n        !isWindowsStoreApp()\n      );\n    }\n  }\n\n  /**\n   * No-op for polling\n   */\n  markConnectionHealthy() {}\n\n  /**\n   * Stops polling and cleans up the iframe\n   */\n  private shutdown_() {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    }\n\n    //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  }\n\n  /**\n   * Triggered when this transport is closed\n   */\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n   * that we've left.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n   * broken into chunks (since URLs have a small maximum length).\n   * @param data The JSON data to transmit.\n   */\n  send(data: {}) {\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //first, lets get the base64-encoded data\n    const base64data = base64Encode(dataStr);\n\n    //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n    const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n\n    //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(\n        this.curSegmentNum,\n        dataSegs.length,\n        dataSegs[i]\n      );\n      this.curSegmentNum++;\n    }\n  }\n\n  /**\n   * This is how we notify the server that we're leaving.\n   * We aren't able to send requests with DHTML on a window close event, but we can\n   * trigger XHR requests in some browsers (everything but Opera basically).\n   */\n  addDisconnectPingFrame(id: string, pw: string) {\n    if (isNodeSdk()) {\n      return;\n    }\n    this.myDisconnFrame = document.createElement('iframe');\n    const urlParams: { [k: string]: string } = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n\n    document.body.appendChild(this.myDisconnFrame);\n  }\n\n  /**\n   * Used to track the bytes received by this client\n   */\n  private incrementIncomingBytes_(args: unknown) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    const bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface IFrameElement extends HTMLIFrameElement {\n  doc: Document;\n}\n\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n *********************************************************************************************/\nexport class FirebaseIFrameScriptHolder {\n  //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n  //problems in some browsers.\n  outstandingRequests = new Set<number>();\n\n  //A queue of the pending segments waiting for transmission to the server.\n  pendingSegs: Array<{ seg: number; ts: number; d: unknown }> = [];\n\n  //A serial number. We use this for two things:\n  // 1) A way to ensure the browser doesn't cache responses to polls\n  // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n  //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n  //    JSONP code in the order it was added to the iframe.\n  currentSerial = Math.floor(Math.random() * 100000000);\n\n  // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n  // incoming data from the server that we're waiting for).\n  sendNewPolls = true;\n\n  uniqueCallbackIdentifier: number;\n  myIFrame: IFrameElement;\n  alive: boolean;\n  myID: string;\n  myPW: string;\n  commandCB: (command: string, ...args: unknown[]) => void;\n  onMessageCB: (...args: unknown[]) => void;\n\n  /**\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\n   */\n  constructor(\n    commandCB: (command: string, ...args: unknown[]) => void,\n    onMessageCB: (...args: unknown[]) => void,\n    public onDisconnect: () => void,\n    public urlFn: (a: object) => string\n  ) {\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[\n        FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier\n      ] = commandCB;\n      window[\n        FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier\n      ] = onMessageCB;\n\n      //Create an iframe for us to add script tags to.\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n\n      // Set the iframe's contents.\n      let script = '';\n      // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n      if (\n        this.myIFrame.src &&\n        this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:'\n      ) {\n        const currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n      const iframeContents = '<html><body>' + script + '</body></html>';\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n        if (e.stack) {\n          log(e.stack);\n        }\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n\n  /**\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n   * actually use.\n   */\n  private static createIFrame_(): IFrameElement {\n    const iframe = document.createElement('iframe') as IFrameElement;\n    iframe.style.display = 'none';\n\n    // This is necessary in order to initialize the document inside the iframe\n    if (document.body) {\n      document.body.appendChild(iframe);\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        const a = iframe.contentWindow.document;\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        const domain = document.domain;\n        iframe.src =\n          \"javascript:void((function(){document.open();document.domain='\" +\n          domain +\n          \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    }\n\n    // Get the document of the iframe in a browser-specific way.\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((iframe as any).document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = (iframe as any).document; //others?\n    }\n\n    return iframe;\n  }\n\n  /**\n   * Cancel all outstanding queries and remove the frame.\n   */\n  close() {\n    //Mark this iframe as dead, so no new requests are sent.\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(() => {\n        if (this.myIFrame !== null) {\n          document.body.removeChild(this.myIFrame);\n          this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    }\n\n    // Protect from being called recursively.\n    const onDisconnect = this.onDisconnect;\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  }\n\n  /**\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n   * @param id - The ID of this connection\n   * @param pw - The password for this connection\n   */\n  startLongPoll(id: string, pw: string) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true;\n\n    //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n    while (this.newRequest_()) {}\n  }\n\n  /**\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n   * too many outstanding requests and we are still alive.\n   *\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n   * needed.\n   */\n  private newRequest_() {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (\n      this.alive &&\n      this.sendNewPolls &&\n      this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)\n    ) {\n      //construct our url\n      this.currentSerial++;\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      let theURL = this.urlFn(urlParams);\n      //Now add as much data as we can.\n      let curDataString = '';\n      let i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        const nextSeg = this.pendingSegs[0];\n        if (\n          (nextSeg.d as unknown[]).length +\n            SEG_HEADER_SIZE +\n            curDataString.length <=\n          MAX_URL_DATA_SIZE\n        ) {\n          //great, the segment will fit. Lets append it.\n          const theSeg = this.pendingSegs.shift();\n          curDataString =\n            curDataString +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\n            i +\n            '=' +\n            theSeg.seg +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\n            i +\n            '=' +\n            theSeg.ts +\n            '&' +\n            FIREBASE_LONGPOLL_DATA_PARAM +\n            i +\n            '=' +\n            theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Queue a packet for transmission to the server.\n   * @param segnum - A sequential id for this packet segment used for reassembly\n   * @param totalsegs - The total number of segments in this packet\n   * @param data - The data for this segment.\n   */\n  enqueueSegment(segnum: number, totalsegs: number, data: unknown) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n\n    //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n    if (this.alive) {\n      this.newRequest_();\n    }\n  }\n\n  /**\n   * Add a script tag for a regular long-poll request.\n   * @param url - The URL of the script tag.\n   * @param serial - The serial number of the request.\n   */\n  private addLongPollTag_(url: string, serial: number) {\n    //remember that we sent this request.\n    this.outstandingRequests.add(serial);\n\n    const doNewRequest = () => {\n      this.outstandingRequests.delete(serial);\n      this.newRequest_();\n    };\n\n    // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n    const keepaliveTimeout = setTimeout(\n      doNewRequest,\n      Math.floor(KEEPALIVE_REQUEST_INTERVAL)\n    );\n\n    const readyStateCB = () => {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout);\n\n      // Trigger a new request so we can continue receiving data.\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  }\n\n  /**\n   * Add an arbitrary script tag to the iframe.\n   * @param url - The URL for the script tag source.\n   * @param loadCB - A callback to be triggered once the script has loaded.\n   */\n  addTag(url: string, loadCB: () => void) {\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this as any).doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(() => {\n        try {\n          // if we're already closed, don't add this poll\n          if (!this.sendNewPolls) {\n            return;\n          }\n          const newScript = this.myIFrame.doc.createElement('script');\n          newScript.type = 'text/javascript';\n          newScript.async = true;\n          newScript.src = url;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          newScript.onload = (newScript as any).onreadystatechange = function () {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const rstate = (newScript as any).readyState;\n            if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              newScript.onload = (newScript as any).onreadystatechange = null;\n              if (newScript.parentNode) {\n                newScript.parentNode.removeChild(newScript);\n              }\n              loadCB();\n            }\n          };\n          newScript.onerror = () => {\n            log('Long-poll script failed to load: ' + url);\n            this.sendNewPolls = false;\n            this.close();\n          };\n          this.myIFrame.doc.body.appendChild(newScript);\n        } catch (e) {\n          // TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The semver (www.semver.org) version of the SDK. */\nexport let SDK_VERSION = '';\n\n// SDK_VERSION should be set before any database instance is created\nexport function setSDKVersion(version: string): void {\n  SDK_VERSION = version;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { assert, jsonEval, stringify, isNodeSdk } from '@firebase/util';\nimport { logWrapper, splitStringBySize } from '../core/util/util';\nimport { StatsManager } from '../core/stats/StatsManager';\nimport {\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM,\n  WEBSOCKET\n} from './Constants';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { Transport } from './Transport';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { SDK_VERSION } from '../core/version';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const MozWebSocket: any;\n\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\n\nlet WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n\nexport function setWebSocketImpl(impl) {\n  WebSocketImpl = impl;\n}\n\n/**\n * Create a new websocket connection with the given callbacks.\n */\nexport class WebSocketConnection implements Transport {\n  keepaliveTimer: number | null = null;\n  frames: string[] | null = null;\n  totalFrames = 0;\n  bytesSent = 0;\n  bytesReceived = 0;\n  connURL: string;\n  onDisconnect: (a?: boolean) => void;\n  onMessage: (msg: {}) => void;\n  mySock: WebSocket | null;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_: boolean;\n  private isClosed_: boolean;\n  private nodeAdmin: boolean;\n\n  /**\n   * @param connId identifier for this transport\n   * @param repoInfo The info for the websocket endpoint.\n   * @param applicationId The Firebase App ID for this project.\n   * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param lastSessionId Optional lastSessionId if there was a previous connection\n   */\n  constructor(\n    public connId: string,\n    repoInfo: RepoInfo,\n    private applicationId?: string,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = StatsManager.getCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(\n      repoInfo,\n      transportSessionId,\n      lastSessionId\n    );\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n\n  /**\n   * @param repoInfo The info for the websocket endpoint.\n   * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param lastSessionId Optional lastSessionId if there was a previous connection\n   * @return connection url\n   */\n  private static connectionURL_(\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ): string {\n    const urlParams: { [k: string]: string } = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (\n      !isNodeSdk() &&\n      typeof location !== 'undefined' &&\n      location.hostname &&\n      FORGE_DOMAIN_RE.test(location.hostname)\n    ) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n    return repoInfo.connectionURL(WEBSOCKET, urlParams);\n  }\n\n  /**\n   * @param onMessage Callback when messages arrive\n   * @param onDisconnect Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n\n    this.log_('Websocket connecting to ' + this.connURL);\n\n    this.everConnected_ = false;\n    // Assume failure until proven otherwise.\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      if (isNodeSdk()) {\n        const device = this.nodeAdmin ? 'AdminNode' : 'Node';\n        // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n        const options: { [k: string]: object } = {\n          headers: {\n            'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n\n        // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n        const env = process['env'];\n        const proxy =\n          this.connURL.indexOf('wss://') === 0\n            ? env['HTTPS_PROXY'] || env['https_proxy']\n            : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = { origin: proxy };\n        }\n\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      } else {\n        const options: { [k: string]: object } = {\n          headers: {\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      }\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      const error = e.message || e.data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = () => {\n      this.log_('Websocket connected.');\n      this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = () => {\n      this.log_('Websocket connection was disconnected.');\n      this.mySock = null;\n      this.onClosed_();\n    };\n\n    this.mySock.onmessage = m => {\n      this.handleIncomingFrame(m as {});\n    };\n\n    this.mySock.onerror = e => {\n      this.log_('WebSocket error.  Closing connection.');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const error = (e as any).message || (e as any).data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n    };\n  }\n\n  /**\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n   */\n  start() {}\n\n  static forceDisallow_: boolean;\n\n  static forceDisallow() {\n    WebSocketConnection.forceDisallow_ = true;\n  }\n\n  static isAvailable(): boolean {\n    let isOldAndroid = false;\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return (\n      !isOldAndroid &&\n      WebSocketImpl !== null &&\n      !WebSocketConnection.forceDisallow_\n    );\n  }\n\n  /**\n   * Number of response before we consider the connection \"healthy.\"\n   */\n  static responsesRequiredToBeHealthy = 2;\n\n  /**\n   * Time to wait for the connection te become healthy before giving up.\n   */\n  static healthyTimeout = 30000;\n\n  /**\n   * Returns true if we previously failed to connect with this transport.\n   */\n  static previouslyFailed(): boolean {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return (\n      PersistentStorage.isInMemoryStorage ||\n      PersistentStorage.get('previous_websocket_failure') === true\n    );\n  }\n\n  markConnectionHealthy() {\n    PersistentStorage.remove('previous_websocket_failure');\n  }\n\n  private appendFrame_(data: string) {\n    this.frames.push(data);\n    if (this.frames.length === this.totalFrames) {\n      const fullMess = this.frames.join('');\n      this.frames = null;\n      const jsonMess = jsonEval(fullMess) as object;\n\n      //handle the message\n      this.onMessage(jsonMess);\n    }\n  }\n\n  /**\n   * @param frameCount The number of frames we are expecting from the server\n   */\n  private handleNewFrameCount_(frameCount: number) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  }\n\n  /**\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n   * @return Any remaining data to be process, or null if there is none\n   */\n  private extractFrameCount_(data: string): string | null {\n    assert(this.frames === null, 'We already have a frame buffer');\n    // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n    if (data.length <= 6) {\n      const frameCount = Number(data);\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n    this.handleNewFrameCount_(1);\n    return data;\n  }\n\n  /**\n   * Process a websocket frame that has arrived from the server.\n   * @param mess The frame data\n   */\n  handleIncomingFrame(mess: { [k: string]: unknown }) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n    const data = mess['data'] as string;\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      const remainingData = this.extractFrameCount_(data);\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  }\n\n  /**\n   * Send a message to the server\n   * @param data The JSON object to transmit\n   */\n  send(data: {}) {\n    this.resetKeepAlive();\n\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n\n    //Send the length header\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    }\n\n    //Send the actual data in segments.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  }\n\n  private shutdown_() {\n    this.isClosed_ = true;\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  }\n\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_();\n\n      // since this is an internal close, trigger the close listener\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler.\n   * Close the websocket and kill the connection.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n   * the last activity.\n   */\n  resetKeepAlive() {\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(() => {\n      //If there has been no websocket activity for a while, send a no-op\n      if (this.mySock) {\n        this.sendString_('0');\n      }\n      this.resetKeepAlive();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL)) as any;\n  }\n\n  /**\n   * Send a string over the websocket.\n   *\n   * @param str String to send.\n   */\n  private sendString_(str: string) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_(\n        'Exception thrown from WebSocket.send():',\n        e.message || e.data,\n        'Closing connection.'\n      );\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BrowserPollConnection } from './BrowserPollConnection';\nimport { WebSocketConnection } from './WebSocketConnection';\nimport { warn } from '../core/util/util';\nimport { TransportConstructor } from './Transport';\nimport { RepoInfo } from '../core/RepoInfo';\n\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n */\nexport class TransportManager {\n  private transports_: TransportConstructor[];\n\n  static get ALL_TRANSPORTS() {\n    return [BrowserPollConnection, WebSocketConnection];\n  }\n\n  /**\n   * @param repoInfo Metadata around the namespace we're connecting to\n   */\n  constructor(repoInfo: RepoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  private initTransports_(repoInfo: RepoInfo) {\n    const isWebSocketsAvailable: boolean =\n      WebSocketConnection && WebSocketConnection['isAvailable']();\n    let isSkipPollConnection =\n      isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\n          \"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\"\n        );\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      const transports = (this.transports_ = [] as TransportConstructor[]);\n      for (const transport of TransportManager.ALL_TRANSPORTS) {\n        if (transport && transport['isAvailable']()) {\n          transports.push(transport);\n        }\n      }\n    }\n  }\n\n  /**\n   * @return The constructor for the initial transport to use\n   */\n  initialTransport(): TransportConstructor {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  }\n\n  /**\n   * @return The constructor for the next transport, or null\n   */\n  upgradeTransport(): TransportConstructor | null {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  error,\n  logWrapper,\n  requireKey,\n  setTimeoutNonBlocking,\n  warn\n} from '../core/util/util';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { PROTOCOL_VERSION } from './Constants';\nimport { TransportManager } from './TransportManager';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { Transport, TransportConstructor } from './Transport';\nimport { Indexable } from '../core/util/misc';\n\n// Abort upgrade attempt if it takes longer than 60s.\nconst UPGRADE_TIMEOUT = 60000;\n\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\n\nconst enum RealtimeState {\n  CONNECTING,\n  CONNECTED,\n  DISCONNECTED\n}\n\nconst MESSAGE_TYPE = 't';\nconst MESSAGE_DATA = 'd';\nconst CONTROL_SHUTDOWN = 's';\nconst CONTROL_RESET = 'r';\nconst CONTROL_ERROR = 'e';\nconst CONTROL_PONG = 'o';\nconst SWITCH_ACK = 'a';\nconst END_TRANSMISSION = 'n';\nconst PING = 'p';\n\nconst SERVER_HELLO = 'h';\n\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n */\nexport class Connection {\n  connectionCount = 0;\n  pendingDataMessages: unknown[] = [];\n  sessionId: string;\n\n  private conn_: Transport;\n  private healthyTimeout_: number;\n  private isHealthy_: boolean;\n  private log_: (...args: unknown[]) => void;\n  private primaryResponsesRequired_: number;\n  private rx_: Transport;\n  private secondaryConn_: Transport;\n  private secondaryResponsesRequired_: number;\n  private state_ = RealtimeState.CONNECTING;\n  private transportManager_: TransportManager;\n  private tx_: Transport;\n\n  /**\n   * @param id - an id for this connection\n   * @param repoInfo_ - the info for the endpoint to connect to\n   * @param applicationId_ - the Firebase App ID for this project\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n   */\n  constructor(\n    public id: string,\n    private repoInfo_: RepoInfo,\n    private applicationId_: string | undefined,\n    private onMessage_: (a: {}) => void,\n    private onReady_: (a: number, b: string) => void,\n    private onDisconnect_: () => void,\n    private onKill_: (a: string) => void,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n\n  /**\n   * Starts a connection attempt\n   */\n  private start_(): void {\n    const conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      undefined,\n      this.lastSessionId\n    );\n\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessageReceived = this.connReceiver_(this.conn_);\n    const onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n\n    /*\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n     * still have the context of your originating frame.\n     */\n    setTimeout(() => {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n\n    const healthyTimeoutMS = conn['healthyTimeout'] || 0;\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(() => {\n        this.healthyTimeout_ = null;\n        if (!this.isHealthy_) {\n          if (\n            this.conn_ &&\n            this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has received ' +\n                this.conn_.bytesReceived +\n                ' bytes.  Marking connection healthy.'\n            );\n            this.isHealthy_ = true;\n            this.conn_.markConnectionHealthy();\n          } else if (\n            this.conn_ &&\n            this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has sent ' +\n                this.conn_.bytesSent +\n                ' bytes.  Leaving connection alive.'\n            );\n            // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n          } else {\n            this.log_('Closing unhealthy connection after timeout.');\n            this.close();\n          }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      }, Math.floor(healthyTimeoutMS)) as any;\n    }\n  }\n\n  private nextTransportId_(): string {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  }\n\n  private disconnReceiver_(conn) {\n    return everConnected => {\n      if (conn === this.conn_) {\n        this.onConnectionLost_(everConnected);\n      } else if (conn === this.secondaryConn_) {\n        this.log_('Secondary connection lost.');\n        this.onSecondaryConnectionLost_();\n      } else {\n        this.log_('closing an old connection');\n      }\n    };\n  }\n\n  private connReceiver_(conn: Transport) {\n    return (message: Indexable) => {\n      if (this.state_ !== RealtimeState.DISCONNECTED) {\n        if (conn === this.rx_) {\n          this.onPrimaryMessageReceived_(message);\n        } else if (conn === this.secondaryConn_) {\n          this.onSecondaryMessageReceived_(message);\n        } else {\n          this.log_('message on old connection');\n        }\n      }\n    };\n  }\n\n  /**\n   * @param dataMsg An arbitrary data message to be sent to the server\n   */\n  sendRequest(dataMsg: object) {\n    // wrap in a data message envelope and send it on\n    const msg = { t: 'd', d: dataMsg };\n    this.sendData_(msg);\n  }\n\n  tryCleanupConnection() {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_(\n        'cleaning up and promoting a connection: ' + this.secondaryConn_.connId\n      );\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null;\n      // the server will shutdown the old connection\n    }\n  }\n\n  private onSecondaryControl_(controlData: { [k: string]: unknown }) {\n    if (MESSAGE_TYPE in controlData) {\n      const cmd = controlData[MESSAGE_TYPE] as string;\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close();\n        // If we were already using this connection for something, than we need to fully close\n        if (\n          this.tx_ === this.secondaryConn_ ||\n          this.rx_ === this.secondaryConn_\n        ) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  }\n\n  private onSecondaryMessageReceived_(parsedData: Indexable) {\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onSecondaryControl_(data as Indexable);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  }\n\n  private upgradeIfSecondaryHealthy_() {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private proceedWithUpgrade_() {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start();\n    // send ack\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n\n    // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n    this.log_('Ending transmission on primary');\n    this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n    this.tx_ = this.secondaryConn_;\n\n    this.tryCleanupConnection();\n  }\n\n  private onPrimaryMessageReceived_(parsedData: { [k: string]: unknown }) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onControl_(data as { [k: string]: unknown });\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  }\n\n  private onDataMessage_(message: unknown) {\n    this.onPrimaryResponse_();\n\n    // We don't do anything with data messages, just kick them up a level\n    this.onMessage_(message);\n  }\n\n  private onPrimaryResponse_() {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  }\n\n  private onControl_(controlData: { [k: string]: unknown }) {\n    const cmd: string = requireKey(MESSAGE_TYPE, controlData) as string;\n    if (MESSAGE_DATA in controlData) {\n      const payload = controlData[MESSAGE_DATA];\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(\n          payload as {\n            ts: number;\n            v: string;\n            h: string;\n            s: string;\n          }\n        );\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n        for (let i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload as string);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload as string);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  }\n\n  /**\n   * @param handshake The handshake data returned from the server\n   */\n  private onHandshake_(handshake: {\n    ts: number;\n    v: string;\n    h: string;\n    s: string;\n  }): void {\n    const timestamp = handshake.ts;\n    const version = handshake.v;\n    const host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.updateHost(host);\n    // if we've already closed the connection, then don't bother trying to progress further\n    if (this.state_ === RealtimeState.CONNECTING) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      }\n      // TODO: do we want to upgrade? when? maybe a delay?\n      this.tryStartUpgrade_();\n    }\n  }\n\n  private tryStartUpgrade_() {\n    const conn = this.transportManager_.upgradeTransport();\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  }\n\n  private startUpgrade_(conn: TransportConstructor) {\n    this.secondaryConn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.sessionId\n    );\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.secondaryResponsesRequired_ =\n      conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessage = this.connReceiver_(this.secondaryConn_);\n    const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect);\n\n    // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n    setTimeoutNonBlocking(() => {\n      if (this.secondaryConn_) {\n        this.log_('Timed out trying to upgrade.');\n        this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  }\n\n  private onReset_(host: string) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.updateHost(host);\n    // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n    if (this.state_ === RealtimeState.CONNECTED) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  }\n\n  private onConnectionEstablished_(conn: Transport, timestamp: number) {\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = RealtimeState.CONNECTED;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    }\n\n    // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(() => {\n        this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  }\n\n  private sendPingOnPrimaryIfNecessary_() {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === RealtimeState.CONNECTED) {\n      this.log_('sending ping on primary.');\n      this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private onSecondaryConnectionLost_() {\n    const conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  }\n\n  /**\n   * @param everConnected Whether or not the connection ever reached a server. Used to determine if\n   * we should flush the host cache\n   */\n  private onConnectionLost_(everConnected: boolean) {\n    this.conn_ = null;\n\n    // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n    if (!everConnected && this.state_ === RealtimeState.CONNECTING) {\n      this.log_('Realtime connection failed.');\n      // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host);\n        // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === RealtimeState.CONNECTED) {\n      this.log_('Realtime connection lost.');\n    }\n\n    this.close();\n  }\n\n  private onConnectionShutdown_(reason: string) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    }\n\n    // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n    this.onDisconnect_ = null;\n\n    this.close();\n  }\n\n  private sendData_(data: object) {\n    if (this.state_ !== RealtimeState.CONNECTED) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  }\n\n  /**\n   * Cleans up this connection, calling the appropriate callbacks\n   */\n  close() {\n    if (this.state_ !== RealtimeState.DISCONNECTED) {\n      this.log_('Closing realtime connection.');\n      this.state_ = RealtimeState.DISCONNECTED;\n\n      this.closeConnections_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  private closeConnections_() {\n    this.log_('Shutting down all connections');\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Query } from '../api/Query';\n\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nexport abstract class ServerActions {\n  abstract listen(\n    query: Query,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ): void;\n\n  /**\n   * Remove a listen.\n   */\n  abstract unlisten(query: Query, tag: number | null): void;\n\n  /**\n   * Get the server value satisfying this query.\n   */\n  abstract get(query: Query): Promise<string>;\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {}\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {}\n\n  /**\n   * Refreshes the auth token for the current connection.\n   * @param token The authentication token\n   */\n  refreshAuthToken(token: string) {}\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  reportStats(stats: { [k: string]: unknown }) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  contains,\n  isEmpty,\n  safeGet,\n  stringify,\n  assert,\n  isAdmin,\n  isValidFormat,\n  isMobileCordova,\n  isReactNative,\n  isNodeSdk,\n  Deferred\n} from '@firebase/util';\n\nimport { error, log, logWrapper, warn, ObjectToUniqueKey } from './util/util';\nimport { Path } from './util/Path';\nimport { VisibilityMonitor } from './util/VisibilityMonitor';\nimport { OnlineMonitor } from './util/OnlineMonitor';\n\nimport { Connection } from '../realtime/Connection';\n\nimport { ServerActions } from './ServerActions';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { Query } from '../api/Query';\nimport { SDK_VERSION } from './version';\n\nconst RECONNECT_MIN_DELAY = 1000;\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nconst GET_CONNECT_TIMEOUT = 3 * 1000;\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nconst INVALID_AUTH_TOKEN_THRESHOLD = 3;\n\ninterface ListenSpec {\n  onComplete(s: string, p?: unknown): void;\n\n  hashFn(): string;\n\n  query: Query;\n  tag: number | null;\n}\n\ninterface OnDisconnectRequest {\n  pathString: string;\n  action: string;\n  data: unknown;\n  onComplete?: (a: string, b: string) => void;\n}\n\ninterface OutstandingPut {\n  action: string;\n  request: object;\n  queued?: boolean;\n  onComplete: (a: string, b?: string) => void;\n}\n\ninterface OutstandingGet {\n  request: object;\n  onComplete: (response: { [k: string]: unknown }) => void;\n}\n\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nexport class PersistentConnection extends ServerActions {\n  // Used for diagnostic logging.\n  id = PersistentConnection.nextPersistentConnectionId_++;\n  private log_ = logWrapper('p:' + this.id + ':');\n\n  private interruptReasons_: { [reason: string]: boolean } = {};\n  /** Map<path, Map<queryId, ListenSpec>> */\n  private readonly listens: Map<\n    /* path */ string,\n    Map</* queryId */ string, ListenSpec>\n  > = new Map();\n  private outstandingPuts_: OutstandingPut[] = [];\n  private outstandingGets_: OutstandingGet[] = [];\n  private outstandingPutCount_ = 0;\n  private outstandingGetCount_ = 0;\n  private onDisconnectRequestQueue_: OnDisconnectRequest[] = [];\n  private connected_ = false;\n  private reconnectDelay_ = RECONNECT_MIN_DELAY;\n  private maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n  private securityDebugCallback_: ((a: object) => void) | null = null;\n  lastSessionId: string | null = null;\n\n  private establishConnectionTimer_: number | null = null;\n\n  private visible_: boolean = false;\n\n  // Before we get connected, we keep a queue of pending messages to send.\n  private requestCBHash_: { [k: number]: (a: unknown) => void } = {};\n  private requestNumber_ = 0;\n\n  private realtime_: {\n    sendRequest(a: object): void;\n    close(): void;\n  } | null = null;\n\n  private authToken_: string | null = null;\n  private forceTokenRefresh_ = false;\n  private invalidAuthTokenCount_ = 0;\n\n  private firstConnection_ = true;\n  private lastConnectionAttemptTime_: number | null = null;\n  private lastConnectionEstablishedTime_: number | null = null;\n\n  private static nextPersistentConnectionId_ = 0;\n\n  /**\n   * Counter for number of connections created. Mainly used for tagging in the logs\n   */\n  private static nextConnectionId_ = 0;\n\n  /**\n   * @param repoInfo_ Data about the namespace we are connecting to\n   * @param applicationId_ The Firebase App ID for this project\n   * @param onDataUpdate_ A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private applicationId_: string,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private onConnectStatus_: (a: boolean) => void,\n    private onServerInfoUpdate_: (a: unknown) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private authOverride_?: object | null\n  ) {\n    super();\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error(\n        'Auth override specified in options, but not supported on non Node.js platforms'\n      );\n    }\n    this.scheduleConnect_(0);\n\n    VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', this.onOnline_, this);\n    }\n  }\n\n  protected sendRequest(\n    action: string,\n    body: unknown,\n    onResponse?: (a: unknown) => void\n  ) {\n    const curReqNum = ++this.requestNumber_;\n\n    const msg = { r: curReqNum, a: action, b: body };\n    this.log_(stringify(msg));\n    assert(\n      this.connected_,\n      \"sendRequest call when we're not connected not allowed.\"\n    );\n    this.realtime_.sendRequest(msg);\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  }\n\n  get(query: Query): Promise<string> {\n    const deferred = new Deferred<string>();\n    const request = {\n      p: query.path.toString(),\n      q: query.queryObject()\n    };\n    const outstandingGet = {\n      action: 'g',\n      request,\n      onComplete: (message: { [k: string]: unknown }) => {\n        const payload = message['d'] as string;\n        if (message['s'] === 'ok') {\n          this.onDataUpdate_(\n            request['p'],\n            payload,\n            /*isMerge*/ false,\n            /*tag*/ null\n          );\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    const index = this.outstandingGets_.length - 1;\n\n    if (!this.connected_) {\n      setTimeout(() => {\n        const get = this.outstandingGets_[index];\n        if (get === undefined || outstandingGet !== get) {\n          return;\n        }\n        delete this.outstandingGets_[index];\n        this.outstandingGetCount_--;\n        if (this.outstandingGetCount_ === 0) {\n          this.outstandingGets_ = [];\n        }\n        this.log_('get ' + index + ' timed out on connection');\n        deferred.reject(new Error('Client is offline.'));\n      }, GET_CONNECT_TIMEOUT);\n    }\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  listen(\n    query: Query,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    const queryId = query.queryIdentifier();\n    const pathString = query.path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n    assert(\n      query.getQueryParams().isDefault() ||\n        !query.getQueryParams().loadsAllData(),\n      'listen() called for non-default but complete query'\n    );\n    assert(\n      !this.listens.get(pathString)!.has(queryId),\n      'listen() called twice for same path/queryId.'\n    );\n    const listenSpec: ListenSpec = {\n      onComplete,\n      hashFn: currentHashFn,\n      query,\n      tag\n    };\n    this.listens.get(pathString)!.set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  }\n\n  private sendGet_(index: number) {\n    const get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, (message: { [k: string]: unknown }) => {\n      delete this.outstandingGets_[index];\n      this.outstandingGetCount_--;\n      if (this.outstandingGetCount_ === 0) {\n        this.outstandingGets_ = [];\n      }\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  }\n\n  private sendListen_(listenSpec: ListenSpec) {\n    const query = listenSpec.query;\n    const pathString = query.path.toString();\n    const queryId = query.queryIdentifier();\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n\n    const action = 'q';\n\n    // Only bother to send query if it's non-default.\n    if (listenSpec.tag) {\n      req['q'] = query.queryObject();\n      req['t'] = listenSpec.tag;\n    }\n\n    req[/*hash*/ 'h'] = listenSpec.hashFn();\n\n    this.sendRequest(action, req, (message: { [k: string]: unknown }) => {\n      const payload: unknown = message[/*data*/ 'd'];\n      const status = message[/*status*/ 's'] as string;\n\n      // print warnings in any case...\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      const currentListenSpec =\n        this.listens.get(pathString) &&\n        this.listens.get(pathString)!.get(queryId);\n      // only trigger actions if the listen hasn't been removed and readded\n      if (currentListenSpec === listenSpec) {\n        this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  }\n\n  private static warnOnListenWarnings_(payload: unknown, query: Query) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const warnings = safeGet(payload as any, 'w');\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        const indexSpec =\n          '\".indexOn\": \"' + query.getQueryParams().getIndex().toString() + '\"';\n        const indexPath = query.path.toString();\n        warn(\n          `Using an unspecified index. Your data will be downloaded and ` +\n            `filtered on the client. Consider adding ${indexSpec} at ` +\n            `${indexPath} to your security rules for better performance.`\n        );\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  refreshAuthToken(token: string) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, () => {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  }\n\n  private reduceReconnectDelayIfAdminCredential_(credential: string) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    const isFirebaseSecret = credential && credential.length === 40;\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_(\n        'Admin auth credential detected.  Reducing max reconnect time.'\n      );\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n   * a auth revoked (the connection is closed).\n   */\n  tryAuth() {\n    if (this.connected_ && this.authToken_) {\n      const token = this.authToken_;\n      const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\n      const requestData: { [k: string]: unknown } = { cred: token };\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n      this.sendRequest(\n        authMethod,\n        requestData,\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n\n          if (this.authToken_ === token) {\n            if (status === 'ok') {\n              this.invalidAuthTokenCount_ = 0;\n            } else {\n              // Triggers reconnect and force refresh for auth token\n              this.onAuthRevoked_(status, data);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  unlisten(query: Query, tag: number | null) {\n    const pathString = query.path.toString();\n    const queryId = query.queryIdentifier();\n\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n\n    assert(\n      query.getQueryParams().isDefault() ||\n        !query.getQueryParams().loadsAllData(),\n      'unlisten() called for non-default but complete query'\n    );\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\n    }\n  }\n\n  private sendUnlisten_(\n    pathString: string,\n    queryId: string,\n    queryObj: object,\n    tag: number | null\n  ) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n    const action = 'n';\n    // Only bother sending queryId if it's non-default.\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'o',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'om',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'oc',\n        data: null,\n        onComplete\n      });\n    }\n  }\n\n  private sendOnDisconnect_(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string) => void\n  ) {\n    const request = { /*path*/ p: pathString, /*data*/ d: data };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, (response: { [k: string]: unknown }) => {\n      if (onComplete) {\n        setTimeout(() => {\n          onComplete(\n            response[/*status*/ 's'] as string,\n            response[/* data */ 'd'] as string\n          );\n        }, Math.floor(0));\n      }\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  }\n\n  putInternal(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    const request: { [k: string]: unknown } = {\n      /*path*/ p: pathString,\n      /*data*/ d: data\n    };\n\n    if (hash !== undefined) {\n      request[/*hash*/ 'h'] = hash;\n    }\n\n    // TODO: Only keep track of the most recent put for a given path?\n    this.outstandingPuts_.push({\n      action,\n      request,\n      onComplete\n    });\n\n    this.outstandingPutCount_++;\n    const index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  }\n\n  private sendPut_(index: number) {\n    const action = this.outstandingPuts_[index].action;\n    const request = this.outstandingPuts_[index].request;\n    const onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n\n    this.sendRequest(action, request, (message: { [k: string]: unknown }) => {\n      this.log_(action + ' response', message);\n\n      delete this.outstandingPuts_[index];\n      this.outstandingPutCount_--;\n\n      // Clean up array occasionally.\n      if (this.outstandingPutCount_ === 0) {\n        this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(\n          message[/*status*/ 's'] as string,\n          message[/* data */ 'd'] as string\n        );\n      }\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  reportStats(stats: { [k: string]: unknown }) {\n    // If we're not connected, we just drop the stats.\n    if (this.connected_) {\n      const request = { /*counters*/ c: stats };\n      this.log_('reportStats', request);\n\n      this.sendRequest(/*stats*/ 's', request, result => {\n        const status = result[/*status*/ 's'];\n        if (status !== 'ok') {\n          const errorReason = result[/* data */ 'd'];\n          this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  }\n\n  private onDataMessage_(message: { [k: string]: unknown }) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      const reqNum = message['r'] as string;\n      const onResponse = this.requestCBHash_[reqNum];\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[/*body*/ 'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'] as string, message['b'] as {});\n    }\n  }\n\n  private onDataPush_(action: string, body: { [k: string]: unknown }) {\n    this.log_('handleServerMessage', action, body);\n    if (action === 'd') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge*/ false,\n        body['t'] as number\n      );\n    } else if (action === 'm') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge=*/ true,\n        body['t'] as number\n      );\n    } else if (action === 'c') {\n      this.onListenRevoked_(\n        body[/*path*/ 'p'] as string,\n        body[/*query*/ 'q'] as unknown[]\n      );\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error(\n        'Unrecognized action received from server: ' +\n          stringify(action) +\n          '\\nAre you using the latest client?'\n      );\n    }\n  }\n\n  private onReady_(timestamp: number, sessionId: string) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  }\n\n  private scheduleConnect_(timeout: number) {\n    assert(\n      !this.realtime_,\n      \"Scheduling a connect when we're already connected/ing?\"\n    );\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    }\n\n    // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n    this.establishConnectionTimer_ = setTimeout(() => {\n      this.establishConnectionTimer_ = null;\n      this.establishConnection_();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(timeout)) as any;\n  }\n\n  private onVisible_(visible: boolean) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (\n      visible &&\n      !this.visible_ &&\n      this.reconnectDelay_ === this.maxReconnectDelay_\n    ) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n    this.visible_ = visible;\n  }\n\n  private onOnline_(online: boolean) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  }\n\n  private onRealtimeDisconnect_() {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null;\n\n    // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n    this.cancelSentTransactions_();\n\n    // Clear out the pending requests.\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        const timeSinceLastConnectSucceeded =\n          new Date().getTime() - this.lastConnectionEstablishedTime_;\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      const timeSinceLastConnectAttempt =\n        new Date().getTime() - this.lastConnectionAttemptTime_;\n      let reconnectDelay = Math.max(\n        0,\n        this.reconnectDelay_ - timeSinceLastConnectAttempt\n      );\n      reconnectDelay = Math.random() * reconnectDelay;\n\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay);\n\n      // Adjust reconnect delay for next time.\n      this.reconnectDelay_ = Math.min(\n        this.maxReconnectDelay_,\n        this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER\n      );\n    }\n    this.onConnectStatus_(false);\n  }\n\n  private establishConnection_() {\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      const onDataMessage = this.onDataMessage_.bind(this);\n      const onReady = this.onReady_.bind(this);\n      const onDisconnect = this.onRealtimeDisconnect_.bind(this);\n      const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      const self = this;\n      const lastSessionId = this.lastSessionId;\n      let canceled = false;\n      let connection: Connection | null = null;\n      const closeFn = function () {\n        if (connection) {\n          connection.close();\n        } else {\n          canceled = true;\n          onDisconnect();\n        }\n      };\n      const sendRequestFn = function (msg: object) {\n        assert(\n          connection,\n          \"sendRequest call when we're not connected not allowed.\"\n        );\n        connection.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn,\n        sendRequest: sendRequestFn\n      };\n\n      const forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false;\n\n      // First fetch auth token, and establish connection after fetching the token was successful\n      this.authTokenProvider_\n        .getToken(forceRefresh)\n        .then(result => {\n          if (!canceled) {\n            log('getToken() completed. Creating connection.');\n            self.authToken_ = result && result.accessToken;\n            connection = new Connection(\n              connId,\n              self.repoInfo_,\n              self.applicationId_,\n              onDataMessage,\n              onReady,\n              onDisconnect,\n              /* onKill= */ reason => {\n                warn(reason + ' (' + self.repoInfo_.toString() + ')');\n                self.interrupt(SERVER_KILL_INTERRUPT_REASON);\n              },\n              lastSessionId\n            );\n          } else {\n            log('getToken() completed but was canceled');\n          }\n        })\n        .then(null, error => {\n          self.log_('Failed to get token: ' + error);\n          if (!canceled) {\n            if (this.repoInfo_.nodeAdmin) {\n              // This may be a critical error for the Admin Node.js SDK, so log a warning.\n              // But getToken() may also just have temporarily failed, so we still want to\n              // continue retrying.\n              warn(error);\n            }\n            closeFn();\n          }\n        });\n    }\n  }\n\n  interrupt(reason: string) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  }\n\n  resume(reason: string) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  }\n\n  private handleTimestamp_(timestamp: number) {\n    const delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({ serverTimeOffset: delta });\n  }\n\n  private cancelSentTransactions_() {\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      const put = this.outstandingPuts_[i];\n      if (put && /*hash*/ 'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    }\n\n    // Clean up array occasionally.\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  }\n\n  private onListenRevoked_(pathString: string, query?: unknown[]) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    let queryId;\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\n    }\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  }\n\n  private removeListen_(pathString: string, queryId: string): ListenSpec {\n    const normalizedPathString = new Path(pathString).toString(); // normalize path.\n    let listen;\n    if (this.listens.has(normalizedPathString)) {\n      const map = this.listens.get(normalizedPathString)!;\n      listen = map.get(queryId);\n      map.delete(queryId);\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n    return listen;\n  }\n\n  private onAuthRevoked_(statusCode: string, explanation: string) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n      if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n\n        // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onSecurityDebugPacket_(body: { [k: string]: unknown }) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log(\n          'FIREBASE: ' + (body['msg'] as string).replace('\\n', '\\nFIREBASE: ')\n        );\n      }\n    }\n  }\n\n  private restoreState_() {\n    //Re-authenticate ourselves if we have a credential stored.\n    this.tryAuth();\n\n    // Puts depend on having received the corresponding data update from the server before they complete, so we must\n    // make sure to send listens before puts.\n    for (const queries of this.listens.values()) {\n      for (const listenSpec of queries.values()) {\n        this.sendListen_(listenSpec);\n      }\n    }\n\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      const request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(\n        request.action,\n        request.pathString,\n        request.data,\n        request.onComplete\n      );\n    }\n\n    for (let i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  }\n\n  /**\n   * Sends client stats for first connection\n   */\n  private sendConnectStats_() {\n    const stats: { [k: string]: number } = {};\n\n    let clientName = 'js';\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n    this.reportStats(stats);\n  }\n\n  private shouldReconnect_(): boolean {\n    const online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  jsonEval,\n  safeGet,\n  querystring,\n  Deferred\n} from '@firebase/util';\nimport { logWrapper, warn } from './util/util';\n\nimport { ServerActions } from './ServerActions';\nimport { RepoInfo } from './RepoInfo';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { Query } from '../api/Query';\nimport { queryParamsToRestQueryStringParameters } from './view/QueryParams';\n\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nexport class ReadonlyRestClient extends ServerActions {\n  reportStats(stats: { [k: string]: unknown }): void {\n    throw new Error('Method not implemented.');\n  }\n\n  /** @private {function(...[*])} */\n  private log_: (...args: unknown[]) => void = logWrapper('p:rest:');\n\n  /**\n   * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n   * that's been removed. :-/\n   */\n  private listens_: { [k: string]: object } = {};\n\n  static getListenId_(query: Query, tag?: number | null): string {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(\n        query.getQueryParams().isDefault(),\n        \"should have a tag if it's not a default query.\"\n      );\n      return query.path.toString();\n    }\n  }\n\n  /**\n   * @param repoInfo_ Data about the namespace we are connecting to\n   * @param onDataUpdate_ A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private authTokenProvider_: AuthTokenProvider\n  ) {\n    super();\n  }\n\n  /** @inheritDoc */\n  listen(\n    query: Query,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    const pathString = query.path.toString();\n    this.log_(\n      'Listen called for ' + pathString + ' ' + query.queryIdentifier()\n    );\n\n    // Mark this listener so we can tell if it's removed.\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    const thisListen = {};\n    this.listens_[listenId] = thisListen;\n\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query.getQueryParams()\n    );\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n        }\n\n        if (safeGet(this.listens_, listenId) === thisListen) {\n          let status;\n          if (!error) {\n            status = 'ok';\n          } else if (error === 401) {\n            status = 'permission_denied';\n          } else {\n            status = 'rest_error:' + error;\n          }\n\n          onComplete(status, null);\n        }\n      }\n    );\n  }\n\n  /** @inheritDoc */\n  unlisten(query: Query, tag: number | null) {\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  }\n\n  get(query: Query): Promise<string> {\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query.getQueryParams()\n    );\n\n    const pathString = query.path.toString();\n\n    const deferred = new Deferred<string>();\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(\n            pathString,\n            data,\n            /*isMerge=*/ false,\n            /*tag=*/ null\n          );\n          deferred.resolve(data as string);\n        } else {\n          deferred.reject(new Error(data as string));\n        }\n      }\n    );\n    return deferred.promise;\n  }\n\n  /** @inheritDoc */\n  refreshAuthToken(token: string) {\n    // no-op since we just always call getToken.\n  }\n\n  /**\n   * Performs a REST request to the given path, with the provided query string parameters,\n   * and any auth credentials we have.\n   */\n  private restRequest_(\n    pathString: string,\n    queryStringParameters: { [k: string]: string | number } = {},\n    callback: ((a: number | null, b?: unknown) => void) | null\n  ) {\n    queryStringParameters['format'] = 'export';\n\n    this.authTokenProvider_\n      .getToken(/*forceRefresh=*/ false)\n      .then(authTokenData => {\n        const authToken = authTokenData && authTokenData.accessToken;\n        if (authToken) {\n          queryStringParameters['auth'] = authToken;\n        }\n\n        const url =\n          (this.repoInfo_.secure ? 'https://' : 'http://') +\n          this.repoInfo_.host +\n          pathString +\n          '?' +\n          'ns=' +\n          this.repoInfo_.namespace +\n          querystring(queryStringParameters);\n\n        this.log_('Sending REST request for ' + url);\n        const xhr = new XMLHttpRequest();\n        xhr.onreadystatechange = () => {\n          if (callback && xhr.readyState === 4) {\n            this.log_(\n              'REST Response for ' + url + ' received. status:',\n              xhr.status,\n              'response:',\n              xhr.responseText\n            );\n            let res = null;\n            if (xhr.status >= 200 && xhr.status < 300) {\n              try {\n                res = jsonEval(xhr.responseText);\n              } catch (e) {\n                warn(\n                  'Failed to parse JSON response for ' +\n                    url +\n                    ': ' +\n                    xhr.responseText\n                );\n              }\n              callback(null, res);\n            } else {\n              // 401 and 404 are expected.\n              if (xhr.status !== 401 && xhr.status !== 404) {\n                warn(\n                  'Got unsuccessful REST response for ' +\n                    url +\n                    ' Status: ' +\n                    xhr.status\n                );\n              }\n              callback(xhr.status);\n            }\n            callback = null;\n          }\n        };\n\n        xhr.open('GET', url, /*asynchronous=*/ true);\n        xhr.send();\n      });\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains, safeGet } from '@firebase/util';\nimport { Path, pathGetFront, pathPopFront } from './Path';\n\nimport { each } from './util';\n\n/**\n * Node in a Tree.\n */\nexport class TreeNode<T> {\n  // TODO: Consider making accessors that create children and value lazily or\n  // separate Internal / Leaf 'types'.\n  children: { [name: string]: TreeNode<T> } = {};\n  childCount = 0;\n  value: T | null = null;\n}\n\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\nexport class Tree<T> {\n  /**\n   * @param name_ Optional name of the node.\n   * @param parent_ Optional parent node.\n   * @param node_ Optional node to wrap.\n   */\n  constructor(\n    private name_: string = '',\n    private parent_: Tree<T> | null = null,\n    private node_: TreeNode<T> = new TreeNode<T>()\n  ) {}\n\n  /**\n   * Returns a sub-Tree for the given path.\n   *\n   * @param pathObj Path to look up.\n   * @return Tree for path.\n   */\n  subTree(pathObj: string | Path): Tree<T> {\n    // TODO: Require pathObj to be Path?\n    let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n    let child = this as Tree<T>,\n      next = pathGetFront(path);\n    while (next !== null) {\n      const childNode = safeGet(child.node_.children, next) || new TreeNode();\n      child = new Tree(next, child, childNode);\n      path = pathPopFront(path);\n      next = pathGetFront(path);\n    }\n\n    return child;\n  }\n\n  /**\n   * Returns the data associated with this tree node.\n   *\n   * @return The data or null if no data exists.\n   */\n  getValue(): T | null {\n    return this.node_.value;\n  }\n\n  /**\n   * Sets data to this tree node.\n   *\n   * @param value Value to set.\n   */\n  setValue(value: T) {\n    assert(typeof value !== 'undefined', 'Cannot set value to undefined');\n    this.node_.value = value;\n    this.updateParents_();\n  }\n\n  /**\n   * Clears the contents of the tree node (its value and all children).\n   */\n  clear() {\n    this.node_.value = null;\n    this.node_.children = {};\n    this.node_.childCount = 0;\n    this.updateParents_();\n  }\n\n  /**\n   * @return Whether the tree has any children.\n   */\n  hasChildren(): boolean {\n    return this.node_.childCount > 0;\n  }\n\n  /**\n   * @return Whethe rthe tree is empty (no value or children).\n   */\n  isEmpty(): boolean {\n    return this.getValue() === null && !this.hasChildren();\n  }\n\n  /**\n   * Calls action for each child of this tree node.\n   *\n   * @param action Action to be called for each child.\n   */\n  forEachChild(action: (tree: Tree<T>) => void) {\n    each(this.node_.children, (child: string, childTree: TreeNode<T>) => {\n      action(new Tree<T>(child, this, childTree));\n    });\n  }\n\n  /**\n   * Does a depth-first traversal of this node's descendants, calling action for each one.\n   *\n   * @param action Action to be called for each child.\n   * @param includeSelf Whether to call action on this node as well. Defaults to\n   *   false.\n   * @param childrenFirst Whether to call action on children before calling it on\n   *   parent.\n   */\n  forEachDescendant(\n    action: (tree: Tree<T>) => void,\n    includeSelf?: boolean,\n    childrenFirst?: boolean\n  ) {\n    if (includeSelf && !childrenFirst) {\n      action(this);\n    }\n\n    this.forEachChild(child => {\n      child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\n    });\n\n    if (includeSelf && childrenFirst) {\n      action(this);\n    }\n  }\n\n  /**\n   * Calls action on each ancestor node.\n   *\n   * @param action Action to be called on each parent; return\n   *   true to abort.\n   * @param includeSelf Whether to call action on this node as well.\n   * @return true if the action callback returned true.\n   */\n  forEachAncestor(\n    action: (tree: Tree<T>) => unknown,\n    includeSelf?: boolean\n  ): boolean {\n    let node = includeSelf ? this : this.parent();\n    while (node !== null) {\n      if (action(node)) {\n        return true;\n      }\n      node = node.parent();\n    }\n    return false;\n  }\n\n  /**\n   * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n   * is found, action is called on it and traversal does not continue inside the node.\n   * Action is *not* called on this node.\n   *\n   * @param action Action to be called for each child.\n   */\n  forEachImmediateDescendantWithValue(action: (tree: Tree<T>) => void) {\n    this.forEachChild(child => {\n      if (child.getValue() !== null) {\n        action(child);\n      } else {\n        child.forEachImmediateDescendantWithValue(action);\n      }\n    });\n  }\n\n  /**\n   * @return The path of this tree node, as a Path.\n   */\n  path(): Path {\n    return new Path(\n      this.parent_ === null\n        ? this.name_\n        : this.parent_.path() + '/' + this.name_\n    );\n  }\n\n  /**\n   * @return The name of the tree node.\n   */\n  name(): string {\n    return this.name_;\n  }\n\n  /**\n   * @return The parent tree node, or null if this is the root of the tree.\n   */\n  parent(): Tree<T> | null {\n    return this.parent_;\n  }\n\n  /**\n   * Adds or removes this child from its parent based on whether it's empty or not.\n   */\n  private updateParents_() {\n    if (this.parent_ !== null) {\n      this.parent_.updateChild_(this.name_, this);\n    }\n  }\n\n  /**\n   * Adds or removes the passed child to this tree node, depending on whether it's empty.\n   *\n   * @param childName The name of the child to update.\n   * @param child The child to update.\n   */\n  private updateChild_(childName: string, child: Tree<T>) {\n    const childEmpty = child.isEmpty();\n    const childExists = contains(this.node_.children, childName);\n    if (childEmpty && childExists) {\n      delete this.node_.children[childName];\n      this.node_.childCount--;\n      this.updateParents_();\n    } else if (!childEmpty && !childExists) {\n      this.node_.children[childName] = child.node_;\n      this.node_.childCount++;\n      this.updateParents_();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  generateWithValues,\n  resolveDeferredValueSnapshot,\n  resolveDeferredValueTree\n} from './util/ServerValues';\nimport { nodeFromJSON } from './snap/nodeFromJSON';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathPopFront\n} from './util/Path';\nimport { SparseSnapshotTree } from './SparseSnapshotTree';\nimport { SyncTree } from './SyncTree';\nimport { SnapshotHolder } from './SnapshotHolder';\nimport {\n  assert,\n  contains,\n  isEmpty,\n  map,\n  safeGet,\n  stringify\n} from '@firebase/util';\nimport {\n  beingCrawled,\n  each,\n  exceptionGuard,\n  log,\n  LUIDGenerator,\n  warn\n} from './util/util';\n\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { StatsManager } from './stats/StatsManager';\nimport { StatsReporter } from './stats/StatsReporter';\nimport { StatsListener } from './stats/StatsListener';\nimport {\n  EventQueue,\n  eventQueueQueueEvents,\n  eventQueueRaiseEventsAtPath,\n  eventQueueRaiseEventsForChangedPath\n} from './view/EventQueue';\nimport { PersistentConnection } from './PersistentConnection';\nimport { ReadonlyRestClient } from './ReadonlyRestClient';\nimport { RepoInfo } from './RepoInfo';\nimport { Database } from '../api/Database';\nimport { DataSnapshot } from '../api/DataSnapshot';\nimport { ServerActions } from './ServerActions';\nimport { Query } from '../api/Query';\nimport { EventRegistration } from './view/EventRegistration';\nimport { StatsCollection } from './stats/StatsCollection';\nimport { Event } from './view/Event';\nimport { Node } from './snap/Node';\nimport { Indexable } from './util/misc';\nimport { Tree } from './util/Tree';\nimport { isValidPriority, validateFirebaseData } from './util/validation';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { Reference } from '../api/Reference';\nimport { FirebaseAppLike } from './RepoManager';\n\nconst INTERRUPT_REASON = 'repo_interrupt';\n\n/**\n * If a transaction does not succeed after 25 retries, we abort it. Among other\n * things this ensure that if there's ever a bug causing a mismatch between\n * client / server hashes for some data, we won't retry indefinitely.\n */\nconst MAX_TRANSACTION_RETRIES = 25;\n\nexport enum TransactionStatus {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  RUN,\n\n  // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n  SENT,\n\n  // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n  COMPLETED,\n\n  // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n  SENT_NEEDS_ABORT,\n\n  // Temporary state used to mark transactions that need to be aborted.\n  NEEDS_ABORT\n}\n\ninterface Transaction {\n  path: Path;\n  update: (a: unknown) => unknown;\n  onComplete: (a: Error | null, b: boolean, c: DataSnapshot | null) => void;\n  status: TransactionStatus;\n  order: number;\n  applyLocally: boolean;\n  retryCount: number;\n  unwatcher: () => void;\n  abortReason: string | null;\n  currentWriteId: number;\n  currentInputSnapshot: Node | null;\n  currentOutputSnapshotRaw: Node | null;\n  currentOutputSnapshotResolved: Node | null;\n}\n\n/**\n * A connection to a single data repository.\n */\nexport class Repo {\n  /** Key for uniquely identifying this repo, used in RepoManager */\n  readonly key: string;\n\n  dataUpdateCount = 0;\n  private infoSyncTree_: SyncTree;\n  private serverSyncTree_: SyncTree;\n\n  private stats_: StatsCollection;\n  private statsListener_: StatsListener | null = null;\n  private eventQueue_ = new EventQueue();\n  private nextWriteId_ = 1;\n  private server_: ServerActions;\n  private statsReporter_: StatsReporter;\n  private infoData_: SnapshotHolder;\n  private interceptServerDataCallback_:\n    | ((a: string, b: unknown) => void)\n    | null = null;\n  private __database: Database;\n\n  /** A list of data pieces and paths to be set when this client disconnects. */\n  private onDisconnect_ = new SparseSnapshotTree();\n\n  /** Stores queues of outstanding transactions for Firebase locations. */\n  private transactionQueueTree_ = new Tree<Transaction[]>();\n\n  // TODO: This should be @private but it's used by test_access.js and internal.js\n  persistentConnection_: PersistentConnection | null = null;\n\n  constructor(\n    public repoInfo_: RepoInfo,\n    private forceRestClient_: boolean,\n    public app: FirebaseAppLike,\n    public authTokenProvider_: AuthTokenProvider\n  ) {\n    // This key is intentionally not updated if RepoInfo is later changed or replaced\n    this.key = this.repoInfo_.toURLString();\n  }\n\n  start(): void {\n    this.stats_ = StatsManager.getCollection(this.repoInfo_);\n\n    if (this.forceRestClient_ || beingCrawled()) {\n      this.server_ = new ReadonlyRestClient(\n        this.repoInfo_,\n        this.onDataUpdate_.bind(this),\n        this.authTokenProvider_\n      );\n\n      // Minor hack: Fire onConnect immediately, since there's no actual connection.\n      setTimeout(this.onConnectStatus_.bind(this, true), 0);\n    } else {\n      const authOverride = this.app.options['databaseAuthVariableOverride'];\n      // Validate authOverride\n      if (typeof authOverride !== 'undefined' && authOverride !== null) {\n        if (typeof authOverride !== 'object') {\n          throw new Error(\n            'Only objects are supported for option databaseAuthVariableOverride'\n          );\n        }\n        try {\n          stringify(authOverride);\n        } catch (e) {\n          throw new Error('Invalid authOverride provided: ' + e);\n        }\n      }\n\n      this.persistentConnection_ = new PersistentConnection(\n        this.repoInfo_,\n        this.app.options.appId,\n        this.onDataUpdate_.bind(this),\n        this.onConnectStatus_.bind(this),\n        this.onServerInfoUpdate_.bind(this),\n        this.authTokenProvider_,\n        authOverride\n      );\n\n      this.server_ = this.persistentConnection_;\n    }\n\n    this.authTokenProvider_.addTokenChangeListener(token => {\n      this.server_.refreshAuthToken(token);\n    });\n\n    // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n    // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n    this.statsReporter_ = StatsManager.getOrCreateReporter(\n      this.repoInfo_,\n      () => new StatsReporter(this.stats_, this.server_)\n    );\n\n    // Used for .info.\n    this.infoData_ = new SnapshotHolder();\n    this.infoSyncTree_ = new SyncTree({\n      startListening: (query, tag, currentHashFn, onComplete) => {\n        let infoEvents: Event[] = [];\n        const node = this.infoData_.getNode(query.path);\n        // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n        // on initial data...\n        if (!node.isEmpty()) {\n          infoEvents = this.infoSyncTree_.applyServerOverwrite(\n            query.path,\n            node\n          );\n          setTimeout(() => {\n            onComplete('ok');\n          }, 0);\n        }\n        return infoEvents;\n      },\n      stopListening: () => {}\n    });\n    this.updateInfo_('connected', false);\n\n    this.serverSyncTree_ = new SyncTree({\n      startListening: (query, tag, currentHashFn, onComplete) => {\n        this.server_.listen(query, currentHashFn, tag, (status, data) => {\n          const events = onComplete(status, data);\n          eventQueueRaiseEventsForChangedPath(\n            this.eventQueue_,\n            query.path,\n            events\n          );\n        });\n        // No synchronous events for network-backed sync trees\n        return [];\n      },\n      stopListening: (query, tag) => {\n        this.server_.unlisten(query, tag);\n      }\n    });\n  }\n\n  /**\n   * @return The URL corresponding to the root of this Firebase.\n   */\n  toString(): string {\n    return (\n      (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host\n    );\n  }\n\n  /**\n   * @return The namespace represented by the repo.\n   */\n  name(): string {\n    return this.repoInfo_.namespace;\n  }\n\n  /**\n   * @return The time in milliseconds, taking the server offset into account if we have one.\n   */\n  serverTime(): number {\n    const offsetNode = this.infoData_.getNode(\n      new Path('.info/serverTimeOffset')\n    );\n    const offset = (offsetNode.val() as number) || 0;\n    return new Date().getTime() + offset;\n  }\n\n  /**\n   * Generate ServerValues using some variables from the repo object.\n   */\n  generateServerValues(): Indexable {\n    return generateWithValues({\n      timestamp: this.serverTime()\n    });\n  }\n\n  /**\n   * Called by realtime when we get new messages from the server.\n   */\n  private onDataUpdate_(\n    pathString: string,\n    data: unknown,\n    isMerge: boolean,\n    tag: number | null\n  ) {\n    // For testing.\n    this.dataUpdateCount++;\n    const path = new Path(pathString);\n    data = this.interceptServerDataCallback_\n      ? this.interceptServerDataCallback_(pathString, data)\n      : data;\n    let events = [];\n    if (tag) {\n      if (isMerge) {\n        const taggedChildren = map(\n          data as { [k: string]: unknown },\n          (raw: unknown) => nodeFromJSON(raw)\n        );\n        events = this.serverSyncTree_.applyTaggedQueryMerge(\n          path,\n          taggedChildren,\n          tag\n        );\n      } else {\n        const taggedSnap = nodeFromJSON(data);\n        events = this.serverSyncTree_.applyTaggedQueryOverwrite(\n          path,\n          taggedSnap,\n          tag\n        );\n      }\n    } else if (isMerge) {\n      const changedChildren = map(\n        data as { [k: string]: unknown },\n        (raw: unknown) => nodeFromJSON(raw)\n      );\n      events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\n    } else {\n      const snap = nodeFromJSON(data);\n      events = this.serverSyncTree_.applyServerOverwrite(path, snap);\n    }\n    let affectedPath = path;\n    if (events.length > 0) {\n      // Since we have a listener outstanding for each transaction, receiving any events\n      // is a proxy for some change having occurred.\n      affectedPath = this.rerunTransactions_(path);\n    }\n    eventQueueRaiseEventsForChangedPath(this.eventQueue_, affectedPath, events);\n  }\n\n  // TODO: This should be @private but it's used by test_access.js and internal.js\n  interceptServerData_(callback: ((a: string, b: unknown) => unknown) | null) {\n    this.interceptServerDataCallback_ = callback;\n  }\n\n  private onConnectStatus_(connectStatus: boolean) {\n    this.updateInfo_('connected', connectStatus);\n    if (connectStatus === false) {\n      this.runOnDisconnectEvents_();\n    }\n  }\n\n  private onServerInfoUpdate_(updates: object) {\n    each(updates, (key: string, value: unknown) => {\n      this.updateInfo_(key, value);\n    });\n  }\n\n  private updateInfo_(pathString: string, value: unknown) {\n    const path = new Path('/.info/' + pathString);\n    const newNode = nodeFromJSON(value);\n    this.infoData_.updateSnapshot(path, newNode);\n    const events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\n    eventQueueRaiseEventsForChangedPath(this.eventQueue_, path, events);\n  }\n\n  private getNextWriteId_(): number {\n    return this.nextWriteId_++;\n  }\n\n  /**\n   * The purpose of `getValue` is to return the latest known value\n   * satisfying `query`.\n   *\n   * This method will first check for in-memory cached values\n   * belonging to active listeners. If they are found, such values\n   * are considered to be the most up-to-date.\n   *\n   * If the client is not connected, this method will try to\n   * establish a connection and request the value for `query`. If\n   * the client is not able to retrieve the query result, it reports\n   * an error.\n   *\n   * @param query - The query to surface a value for.\n   */\n  getValue(query: Query): Promise<DataSnapshot> {\n    // Only active queries are cached. There is no persisted cache.\n    const cached = this.serverSyncTree_.getServerValue(query);\n    if (cached != null) {\n      return Promise.resolve(\n        new DataSnapshot(\n          cached,\n          query.getRef(),\n          query.getQueryParams().getIndex()\n        )\n      );\n    }\n    return this.server_.get(query).then(\n      payload => {\n        const node = nodeFromJSON(payload as string);\n        const events = this.serverSyncTree_.applyServerOverwrite(\n          query.path,\n          node\n        );\n        eventQueueRaiseEventsAtPath(this.eventQueue_, query.path, events);\n        return Promise.resolve(\n          new DataSnapshot(\n            node,\n            query.getRef(),\n            query.getQueryParams().getIndex()\n          )\n        );\n      },\n      err => {\n        this.log_('get for query ' + stringify(query) + ' failed: ' + err);\n        return Promise.reject(new Error(err as string));\n      }\n    );\n  }\n\n  setWithPriority(\n    path: Path,\n    newVal: unknown,\n    newPriority: number | string | null,\n    onComplete: ((status: Error | null, errorReason?: string) => void) | null\n  ) {\n    this.log_('set', {\n      path: path.toString(),\n      value: newVal,\n      priority: newPriority\n    });\n\n    // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n    // (b) store unresolved paths on JSON parse\n    const serverValues = this.generateServerValues();\n    const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\n    const existing = this.serverSyncTree_.calcCompleteEventCache(path);\n    const newNode = resolveDeferredValueSnapshot(\n      newNodeUnresolved,\n      existing,\n      serverValues\n    );\n\n    const writeId = this.getNextWriteId_();\n    const events = this.serverSyncTree_.applyUserOverwrite(\n      path,\n      newNode,\n      writeId,\n      true\n    );\n    eventQueueQueueEvents(this.eventQueue_, events);\n    this.server_.put(\n      path.toString(),\n      newNodeUnresolved.val(/*export=*/ true),\n      (status, errorReason) => {\n        const success = status === 'ok';\n        if (!success) {\n          warn('set at ' + path + ' failed: ' + status);\n        }\n\n        const clearEvents = this.serverSyncTree_.ackUserWrite(\n          writeId,\n          !success\n        );\n        eventQueueRaiseEventsForChangedPath(\n          this.eventQueue_,\n          path,\n          clearEvents\n        );\n        this.callOnCompleteCallback(onComplete, status, errorReason);\n      }\n    );\n    const affectedPath = this.abortTransactions_(path);\n    this.rerunTransactions_(affectedPath);\n    // We queued the events above, so just flush the queue here\n    eventQueueRaiseEventsForChangedPath(this.eventQueue_, affectedPath, []);\n  }\n\n  update(\n    path: Path,\n    childrenToMerge: { [k: string]: unknown },\n    onComplete: ((status: Error | null, errorReason?: string) => void) | null\n  ) {\n    this.log_('update', { path: path.toString(), value: childrenToMerge });\n\n    // Start with our existing data and merge each child into it.\n    let empty = true;\n    const serverValues = this.generateServerValues();\n    const changedChildren: { [k: string]: Node } = {};\n    each(childrenToMerge, (changedKey: string, changedValue: unknown) => {\n      empty = false;\n      changedChildren[changedKey] = resolveDeferredValueTree(\n        pathChild(path, changedKey),\n        nodeFromJSON(changedValue),\n        this.serverSyncTree_,\n        serverValues\n      );\n    });\n\n    if (!empty) {\n      const writeId = this.getNextWriteId_();\n      const events = this.serverSyncTree_.applyUserMerge(\n        path,\n        changedChildren,\n        writeId\n      );\n      eventQueueQueueEvents(this.eventQueue_, events);\n      this.server_.merge(\n        path.toString(),\n        childrenToMerge,\n        (status, errorReason) => {\n          const success = status === 'ok';\n          if (!success) {\n            warn('update at ' + path + ' failed: ' + status);\n          }\n\n          const clearEvents = this.serverSyncTree_.ackUserWrite(\n            writeId,\n            !success\n          );\n          const affectedPath =\n            clearEvents.length > 0 ? this.rerunTransactions_(path) : path;\n          eventQueueRaiseEventsForChangedPath(\n            this.eventQueue_,\n            affectedPath,\n            clearEvents\n          );\n          this.callOnCompleteCallback(onComplete, status, errorReason);\n        }\n      );\n\n      each(childrenToMerge, (changedPath: string) => {\n        const affectedPath = this.abortTransactions_(\n          pathChild(path, changedPath)\n        );\n        this.rerunTransactions_(affectedPath);\n      });\n\n      // We queued the events above, so just flush the queue here\n      eventQueueRaiseEventsForChangedPath(this.eventQueue_, path, []);\n    } else {\n      log(\"update() called with empty data.  Don't do anything.\");\n      this.callOnCompleteCallback(onComplete, 'ok');\n    }\n  }\n\n  /**\n   * Applies all of the changes stored up in the onDisconnect_ tree.\n   */\n  private runOnDisconnectEvents_() {\n    this.log_('onDisconnectEvents');\n\n    const serverValues = this.generateServerValues();\n    const resolvedOnDisconnectTree = new SparseSnapshotTree();\n    this.onDisconnect_.forEachTree(newEmptyPath(), (path, node) => {\n      const resolved = resolveDeferredValueTree(\n        path,\n        node,\n        this.serverSyncTree_,\n        serverValues\n      );\n      resolvedOnDisconnectTree.remember(path, resolved);\n    });\n    let events: Event[] = [];\n\n    resolvedOnDisconnectTree.forEachTree(newEmptyPath(), (path, snap) => {\n      events = events.concat(\n        this.serverSyncTree_.applyServerOverwrite(path, snap)\n      );\n      const affectedPath = this.abortTransactions_(path);\n      this.rerunTransactions_(affectedPath);\n    });\n\n    this.onDisconnect_ = new SparseSnapshotTree();\n    eventQueueRaiseEventsForChangedPath(\n      this.eventQueue_,\n      newEmptyPath(),\n      events\n    );\n  }\n\n  onDisconnectCancel(\n    path: Path,\n    onComplete: ((status: Error | null, errorReason?: string) => void) | null\n  ) {\n    this.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\n      if (status === 'ok') {\n        this.onDisconnect_.forget(path);\n      }\n      this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  }\n\n  onDisconnectSet(\n    path: Path,\n    value: unknown,\n    onComplete: ((status: Error | null, errorReason?: string) => void) | null\n  ) {\n    const newNode = nodeFromJSON(value);\n    this.server_.onDisconnectPut(\n      path.toString(),\n      newNode.val(/*export=*/ true),\n      (status, errorReason) => {\n        if (status === 'ok') {\n          this.onDisconnect_.remember(path, newNode);\n        }\n        this.callOnCompleteCallback(onComplete, status, errorReason);\n      }\n    );\n  }\n\n  onDisconnectSetWithPriority(\n    path: Path,\n    value: unknown,\n    priority: unknown,\n    onComplete: ((status: Error | null, errorReason?: string) => void) | null\n  ) {\n    const newNode = nodeFromJSON(value, priority);\n    this.server_.onDisconnectPut(\n      path.toString(),\n      newNode.val(/*export=*/ true),\n      (status, errorReason) => {\n        if (status === 'ok') {\n          this.onDisconnect_.remember(path, newNode);\n        }\n        this.callOnCompleteCallback(onComplete, status, errorReason);\n      }\n    );\n  }\n\n  onDisconnectUpdate(\n    path: Path,\n    childrenToMerge: { [k: string]: unknown },\n    onComplete: ((status: Error | null, errorReason?: string) => void) | null\n  ) {\n    if (isEmpty(childrenToMerge)) {\n      log(\n        \"onDisconnect().update() called with empty data.  Don't do anything.\"\n      );\n      this.callOnCompleteCallback(onComplete, 'ok');\n      return;\n    }\n\n    this.server_.onDisconnectMerge(\n      path.toString(),\n      childrenToMerge,\n      (status, errorReason) => {\n        if (status === 'ok') {\n          each(childrenToMerge, (childName: string, childNode: unknown) => {\n            const newChildNode = nodeFromJSON(childNode);\n            this.onDisconnect_.remember(\n              pathChild(path, childName),\n              newChildNode\n            );\n          });\n        }\n        this.callOnCompleteCallback(onComplete, status, errorReason);\n      }\n    );\n  }\n\n  addEventCallbackForQuery(query: Query, eventRegistration: EventRegistration) {\n    let events;\n    if (pathGetFront(query.path) === '.info') {\n      events = this.infoSyncTree_.addEventRegistration(\n        query,\n        eventRegistration\n      );\n    } else {\n      events = this.serverSyncTree_.addEventRegistration(\n        query,\n        eventRegistration\n      );\n    }\n    eventQueueRaiseEventsAtPath(this.eventQueue_, query.path, events);\n  }\n\n  removeEventCallbackForQuery(\n    query: Query,\n    eventRegistration: EventRegistration\n  ) {\n    // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n    // a little bit by handling the return values anyways.\n    let events;\n    if (pathGetFront(query.path) === '.info') {\n      events = this.infoSyncTree_.removeEventRegistration(\n        query,\n        eventRegistration\n      );\n    } else {\n      events = this.serverSyncTree_.removeEventRegistration(\n        query,\n        eventRegistration\n      );\n    }\n    eventQueueRaiseEventsAtPath(this.eventQueue_, query.path, events);\n  }\n\n  interrupt() {\n    if (this.persistentConnection_) {\n      this.persistentConnection_.interrupt(INTERRUPT_REASON);\n    }\n  }\n\n  resume() {\n    if (this.persistentConnection_) {\n      this.persistentConnection_.resume(INTERRUPT_REASON);\n    }\n  }\n\n  stats(showDelta: boolean = false) {\n    if (typeof console === 'undefined') {\n      return;\n    }\n\n    let stats: { [k: string]: unknown };\n    if (showDelta) {\n      if (!this.statsListener_) {\n        this.statsListener_ = new StatsListener(this.stats_);\n      }\n      stats = this.statsListener_.get();\n    } else {\n      stats = this.stats_.get();\n    }\n\n    const longestName = Object.keys(stats).reduce(\n      (previousValue, currentValue) =>\n        Math.max(currentValue.length, previousValue),\n      0\n    );\n\n    each(stats, (stat: string, value: unknown) => {\n      let paddedStat = stat;\n      // pad stat names to be the same length (plus 2 extra spaces).\n      for (let i = stat.length; i < longestName + 2; i++) {\n        paddedStat += ' ';\n      }\n      console.log(paddedStat + value);\n    });\n  }\n\n  statsIncrementCounter(metric: string) {\n    this.stats_.incrementCounter(metric);\n    this.statsReporter_.includeStat(metric);\n  }\n\n  private log_(...varArgs: unknown[]) {\n    let prefix = '';\n    if (this.persistentConnection_) {\n      prefix = this.persistentConnection_.id + ':';\n    }\n    log(prefix, ...varArgs);\n  }\n\n  callOnCompleteCallback(\n    callback: ((status: Error | null, errorReason?: string) => void) | null,\n    status: string,\n    errorReason?: string | null\n  ) {\n    if (callback) {\n      exceptionGuard(() => {\n        if (status === 'ok') {\n          callback(null);\n        } else {\n          const code = (status || 'error').toUpperCase();\n          let message = code;\n          if (errorReason) {\n            message += ': ' + errorReason;\n          }\n\n          const error = new Error(message);\n\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (error as any).code = code;\n          callback(error);\n        }\n      });\n    }\n  }\n\n  get database(): Database {\n    return this.__database || (this.__database = new Database(this));\n  }\n\n  /**\n   * Creates a new transaction, adds it to the transactions we're tracking, and\n   * sends it to the server if possible.\n   *\n   * @param path Path at which to do transaction.\n   * @param transactionUpdate Update callback.\n   * @param onComplete Completion callback.\n   * @param applyLocally Whether or not to make intermediate results visible\n   */\n  startTransaction(\n    path: Path,\n    transactionUpdate: (a: unknown) => unknown,\n    onComplete: ((a: Error, b: boolean, c: DataSnapshot) => void) | null,\n    applyLocally: boolean\n  ) {\n    this.log_('transaction on ' + path);\n\n    // Add a watch to make sure we get server updates.\n    const valueCallback = function () {};\n    const watchRef = new Reference(this, path);\n    watchRef.on('value', valueCallback);\n    const unwatcher = function () {\n      watchRef.off('value', valueCallback);\n    };\n\n    // Initialize transaction.\n    const transaction: Transaction = {\n      path,\n      update: transactionUpdate,\n      onComplete,\n      // One of TransactionStatus enums.\n      status: null,\n      // Used when combining transactions at different locations to figure out\n      // which one goes first.\n      order: LUIDGenerator(),\n      // Whether to raise local events for this transaction.\n      applyLocally,\n      // Count of how many times we've retried the transaction.\n      retryCount: 0,\n      // Function to call to clean up our .on() listener.\n      unwatcher,\n      // Stores why a transaction was aborted.\n      abortReason: null,\n      currentWriteId: null,\n      currentInputSnapshot: null,\n      currentOutputSnapshotRaw: null,\n      currentOutputSnapshotResolved: null\n    };\n\n    // Run transaction initially.\n    const currentState = this.getLatestState_(path);\n    transaction.currentInputSnapshot = currentState;\n    const newVal = transaction.update(currentState.val());\n    if (newVal === undefined) {\n      // Abort transaction.\n      transaction.unwatcher();\n      transaction.currentOutputSnapshotRaw = null;\n      transaction.currentOutputSnapshotResolved = null;\n      if (transaction.onComplete) {\n        // We just set the input snapshot, so this cast should be safe\n        const snapshot = new DataSnapshot(\n          transaction.currentInputSnapshot,\n          new Reference(this, transaction.path),\n          PRIORITY_INDEX\n        );\n        transaction.onComplete(null, false, snapshot);\n      }\n    } else {\n      validateFirebaseData(\n        'transaction failed: Data returned ',\n        newVal,\n        transaction.path\n      );\n\n      // Mark as run and add to our queue.\n      transaction.status = TransactionStatus.RUN;\n      const queueNode = this.transactionQueueTree_.subTree(path);\n      const nodeQueue = queueNode.getValue() || [];\n      nodeQueue.push(transaction);\n\n      queueNode.setValue(nodeQueue);\n\n      // Update visibleData and raise events\n      // Note: We intentionally raise events after updating all of our\n      // transaction state, since the user could start new transactions from the\n      // event callbacks.\n      let priorityForNode;\n      if (\n        typeof newVal === 'object' &&\n        newVal !== null &&\n        contains(newVal, '.priority')\n      ) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        priorityForNode = safeGet(newVal as any, '.priority');\n        assert(\n          isValidPriority(priorityForNode),\n          'Invalid priority returned by transaction. ' +\n            'Priority must be a valid string, finite number, server value, or null.'\n        );\n      } else {\n        const currentNode =\n          this.serverSyncTree_.calcCompleteEventCache(path) ||\n          ChildrenNode.EMPTY_NODE;\n        priorityForNode = currentNode.getPriority().val();\n      }\n\n      const serverValues = this.generateServerValues();\n      const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\n      const newNode = resolveDeferredValueSnapshot(\n        newNodeUnresolved,\n        currentState,\n        serverValues\n      );\n      transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n      transaction.currentOutputSnapshotResolved = newNode;\n      transaction.currentWriteId = this.getNextWriteId_();\n\n      const events = this.serverSyncTree_.applyUserOverwrite(\n        path,\n        newNode,\n        transaction.currentWriteId,\n        transaction.applyLocally\n      );\n      eventQueueRaiseEventsForChangedPath(this.eventQueue_, path, events);\n\n      this.sendReadyTransactions_();\n    }\n  }\n\n  /**\n   * @param excludeSets A specific set to exclude\n   */\n  private getLatestState_(path: Path, excludeSets?: number[]): Node {\n    return (\n      this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\n      ChildrenNode.EMPTY_NODE\n    );\n  }\n\n  /**\n   * Sends any already-run transactions that aren't waiting for outstanding\n   * transactions to complete.\n   *\n   * Externally it's called with no arguments, but it calls itself recursively\n   * with a particular transactionQueueTree node to recurse through the tree.\n   *\n   * @param node transactionQueueTree node to start at.\n   */\n  private sendReadyTransactions_(\n    node: Tree<Transaction[]> = this.transactionQueueTree_\n  ) {\n    // Before recursing, make sure any completed transactions are removed.\n    if (!node) {\n      this.pruneCompletedTransactionsBelowNode_(node);\n    }\n\n    if (node.getValue() !== null) {\n      const queue = this.buildTransactionQueue_(node);\n      assert(queue.length > 0, 'Sending zero length transaction queue');\n\n      const allRun = queue.every(\n        (transaction: Transaction) =>\n          transaction.status === TransactionStatus.RUN\n      );\n\n      // If they're all run (and not sent), we can send them.  Else, we must wait.\n      if (allRun) {\n        this.sendTransactionQueue_(node.path(), queue);\n      }\n    } else if (node.hasChildren()) {\n      node.forEachChild(childNode => {\n        this.sendReadyTransactions_(childNode);\n      });\n    }\n  }\n\n  /**\n   * Given a list of run transactions, send them to the server and then handle\n   * the result (success or failure).\n   *\n   * @param path The location of the queue.\n   * @param queue Queue of transactions under the specified location.\n   */\n  private sendTransactionQueue_(path: Path, queue: Transaction[]) {\n    // Mark transactions as sent and increment retry count!\n    const setsToIgnore = queue.map(txn => {\n      return txn.currentWriteId;\n    });\n    const latestState = this.getLatestState_(path, setsToIgnore);\n    let snapToSend = latestState;\n    const latestHash = latestState.hash();\n    for (let i = 0; i < queue.length; i++) {\n      const txn = queue[i];\n      assert(\n        txn.status === TransactionStatus.RUN,\n        'tryToSendTransactionQueue_: items in queue should all be run.'\n      );\n      txn.status = TransactionStatus.SENT;\n      txn.retryCount++;\n      const relativePath = newRelativePath(path, txn.path);\n      // If we've gotten to this point, the output snapshot must be defined.\n      snapToSend = snapToSend.updateChild(\n        relativePath /** @type {!Node} */,\n        txn.currentOutputSnapshotRaw\n      );\n    }\n\n    const dataToSend = snapToSend.val(true);\n    const pathToSend = path;\n\n    // Send the put.\n    this.server_.put(\n      pathToSend.toString(),\n      dataToSend,\n      (status: string) => {\n        this.log_('transaction put response', {\n          path: pathToSend.toString(),\n          status\n        });\n\n        let events: Event[] = [];\n        if (status === 'ok') {\n          // Queue up the callbacks and fire them after cleaning up all of our\n          // transaction state, since the callback could trigger more\n          // transactions or sets.\n          const callbacks = [];\n          for (let i = 0; i < queue.length; i++) {\n            queue[i].status = TransactionStatus.COMPLETED;\n            events = events.concat(\n              this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId)\n            );\n            if (queue[i].onComplete) {\n              // We never unset the output snapshot, and given that this\n              // transaction is complete, it should be set\n              const node = queue[i].currentOutputSnapshotResolved as Node;\n              const ref = new Reference(this, queue[i].path);\n              const snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\n              callbacks.push(\n                queue[i].onComplete.bind(null, null, true, snapshot)\n              );\n            }\n            queue[i].unwatcher();\n          }\n\n          // Now remove the completed transactions.\n          this.pruneCompletedTransactionsBelowNode_(\n            this.transactionQueueTree_.subTree(path)\n          );\n          // There may be pending transactions that we can now send.\n          this.sendReadyTransactions_();\n\n          eventQueueRaiseEventsForChangedPath(this.eventQueue_, path, events);\n\n          // Finally, trigger onComplete callbacks.\n          for (let i = 0; i < callbacks.length; i++) {\n            exceptionGuard(callbacks[i]);\n          }\n        } else {\n          // transactions are no longer sent.  Update their status appropriately.\n          if (status === 'datastale') {\n            for (let i = 0; i < queue.length; i++) {\n              if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n                queue[i].status = TransactionStatus.NEEDS_ABORT;\n              } else {\n                queue[i].status = TransactionStatus.RUN;\n              }\n            }\n          } else {\n            warn(\n              'transaction at ' + pathToSend.toString() + ' failed: ' + status\n            );\n            for (let i = 0; i < queue.length; i++) {\n              queue[i].status = TransactionStatus.NEEDS_ABORT;\n              queue[i].abortReason = status;\n            }\n          }\n\n          this.rerunTransactions_(path);\n        }\n      },\n      latestHash\n    );\n  }\n\n  /**\n   * Finds all transactions dependent on the data at changedPath and reruns them.\n   *\n   * Should be called any time cached data changes.\n   *\n   * Return the highest path that was affected by rerunning transactions. This\n   * is the path at which events need to be raised for.\n   *\n   * @param changedPath The path in mergedData that changed.\n   * @return The rootmost path that was affected by rerunning transactions.\n   */\n  private rerunTransactions_(changedPath: Path): Path {\n    const rootMostTransactionNode = this.getAncestorTransactionNode_(\n      changedPath\n    );\n    const path = rootMostTransactionNode.path();\n\n    const queue = this.buildTransactionQueue_(rootMostTransactionNode);\n    this.rerunTransactionQueue_(queue, path);\n\n    return path;\n  }\n\n  /**\n   * Does all the work of rerunning transactions (as well as cleans up aborted\n   * transactions and whatnot).\n   *\n   * @param queue The queue of transactions to run.\n   * @param path The path the queue is for.\n   */\n  private rerunTransactionQueue_(queue: Transaction[], path: Path) {\n    if (queue.length === 0) {\n      return; // Nothing to do!\n    }\n\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions or\n    // sets.\n    const callbacks = [];\n    let events: Event[] = [];\n    // Ignore all of the sets we're going to re-run.\n    const txnsToRerun = queue.filter(q => {\n      return q.status === TransactionStatus.RUN;\n    });\n    const setsToIgnore = txnsToRerun.map(q => {\n      return q.currentWriteId;\n    });\n    for (let i = 0; i < queue.length; i++) {\n      const transaction = queue[i];\n      const relativePath = newRelativePath(path, transaction.path);\n      let abortTransaction = false,\n        abortReason;\n      assert(\n        relativePath !== null,\n        'rerunTransactionsUnderNode_: relativePath should not be null.'\n      );\n\n      if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n        abortTransaction = true;\n        abortReason = transaction.abortReason;\n        events = events.concat(\n          this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true)\n        );\n      } else if (transaction.status === TransactionStatus.RUN) {\n        if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n          abortTransaction = true;\n          abortReason = 'maxretry';\n          events = events.concat(\n            this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true)\n          );\n        } else {\n          // This code reruns a transaction\n          const currentNode = this.getLatestState_(\n            transaction.path,\n            setsToIgnore\n          );\n          transaction.currentInputSnapshot = currentNode;\n          const newData = queue[i].update(currentNode.val());\n          if (newData !== undefined) {\n            validateFirebaseData(\n              'transaction failed: Data returned ',\n              newData,\n              transaction.path\n            );\n            let newDataNode = nodeFromJSON(newData);\n            const hasExplicitPriority =\n              typeof newData === 'object' &&\n              newData != null &&\n              contains(newData, '.priority');\n            if (!hasExplicitPriority) {\n              // Keep the old priority if there wasn't a priority explicitly specified.\n              newDataNode = newDataNode.updatePriority(\n                currentNode.getPriority()\n              );\n            }\n\n            const oldWriteId = transaction.currentWriteId;\n            const serverValues = this.generateServerValues();\n            const newNodeResolved = resolveDeferredValueSnapshot(\n              newDataNode,\n              currentNode,\n              serverValues\n            );\n\n            transaction.currentOutputSnapshotRaw = newDataNode;\n            transaction.currentOutputSnapshotResolved = newNodeResolved;\n            transaction.currentWriteId = this.getNextWriteId_();\n            // Mutates setsToIgnore in place\n            setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n            events = events.concat(\n              this.serverSyncTree_.applyUserOverwrite(\n                transaction.path,\n                newNodeResolved,\n                transaction.currentWriteId,\n                transaction.applyLocally\n              )\n            );\n            events = events.concat(\n              this.serverSyncTree_.ackUserWrite(oldWriteId, true)\n            );\n          } else {\n            abortTransaction = true;\n            abortReason = 'nodata';\n            events = events.concat(\n              this.serverSyncTree_.ackUserWrite(\n                transaction.currentWriteId,\n                true\n              )\n            );\n          }\n        }\n      }\n      eventQueueRaiseEventsForChangedPath(this.eventQueue_, path, events);\n      events = [];\n      if (abortTransaction) {\n        // Abort.\n        queue[i].status = TransactionStatus.COMPLETED;\n\n        // Removing a listener can trigger pruning which can muck with\n        // mergedData/visibleData (as it prunes data). So defer the unwatcher\n        // until we're done.\n        (function (unwatcher) {\n          setTimeout(unwatcher, Math.floor(0));\n        })(queue[i].unwatcher);\n\n        if (queue[i].onComplete) {\n          if (abortReason === 'nodata') {\n            const ref = new Reference(this, queue[i].path);\n            // We set this field immediately, so it's safe to cast to an actual snapshot\n            const lastInput /** @type {!Node} */ =\n              queue[i].currentInputSnapshot;\n            const snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\n            callbacks.push(\n              queue[i].onComplete.bind(null, null, false, snapshot)\n            );\n          } else {\n            callbacks.push(\n              queue[i].onComplete.bind(\n                null,\n                new Error(abortReason),\n                false,\n                null\n              )\n            );\n          }\n        }\n      }\n    }\n\n    // Clean up completed transactions.\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\n\n    // Now fire callbacks, now that we're in a good, known state.\n    for (let i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n\n    // Try to send the transaction result to the server.\n    this.sendReadyTransactions_();\n  }\n\n  /**\n   * Returns the rootmost ancestor node of the specified path that has a pending\n   * transaction on it, or just returns the node for the given path if there are\n   * no pending transactions on any ancestor.\n   *\n   * @param path The location to start at.\n   * @return The rootmost node with a transaction.\n   */\n  private getAncestorTransactionNode_(path: Path): Tree<Transaction[]> {\n    let front;\n\n    // Start at the root and walk deeper into the tree towards path until we\n    // find a node with pending transactions.\n    let transactionNode = this.transactionQueueTree_;\n    front = pathGetFront(path);\n    while (front !== null && transactionNode.getValue() === null) {\n      transactionNode = transactionNode.subTree(front);\n      path = pathPopFront(path);\n      front = pathGetFront(path);\n    }\n\n    return transactionNode;\n  }\n\n  /**\n   * Builds the queue of all transactions at or below the specified\n   * transactionNode.\n   *\n   * @param transactionNode\n   * @return The generated queue.\n   */\n  private buildTransactionQueue_(\n    transactionNode: Tree<Transaction[]>\n  ): Transaction[] {\n    // Walk any child transaction queues and aggregate them into a single queue.\n    const transactionQueue: Transaction[] = [];\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\n\n    // Sort them by the order the transactions were created.\n    transactionQueue.sort((a, b) => {\n      return a.order - b.order;\n    });\n\n    return transactionQueue;\n  }\n\n  private aggregateTransactionQueuesForNode_(\n    node: Tree<Transaction[]>,\n    queue: Transaction[]\n  ) {\n    const nodeQueue = node.getValue();\n    if (nodeQueue !== null) {\n      for (let i = 0; i < nodeQueue.length; i++) {\n        queue.push(nodeQueue[i]);\n      }\n    }\n\n    node.forEachChild(child => {\n      this.aggregateTransactionQueuesForNode_(child, queue);\n    });\n  }\n\n  /**\n   * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n   */\n  private pruneCompletedTransactionsBelowNode_(node: Tree<Transaction[]>) {\n    const queue = node.getValue();\n    if (queue) {\n      let to = 0;\n      for (let from = 0; from < queue.length; from++) {\n        if (queue[from].status !== TransactionStatus.COMPLETED) {\n          queue[to] = queue[from];\n          to++;\n        }\n      }\n      queue.length = to;\n      node.setValue(queue.length > 0 ? queue : null);\n    }\n\n    node.forEachChild(childNode => {\n      this.pruneCompletedTransactionsBelowNode_(childNode);\n    });\n  }\n\n  /**\n   * Aborts all transactions on ancestors or descendants of the specified path.\n   * Called when doing a set() or update() since we consider them incompatible\n   * with transactions.\n   *\n   * @param path Path for which we want to abort related transactions.\n   */\n  private abortTransactions_(path: Path): Path {\n    const affectedPath = this.getAncestorTransactionNode_(path).path();\n\n    const transactionNode = this.transactionQueueTree_.subTree(path);\n\n    transactionNode.forEachAncestor((node: Tree<Transaction[]>) => {\n      this.abortTransactionsOnNode_(node);\n    });\n\n    this.abortTransactionsOnNode_(transactionNode);\n\n    transactionNode.forEachDescendant((node: Tree<Transaction[]>) => {\n      this.abortTransactionsOnNode_(node);\n    });\n\n    return affectedPath;\n  }\n\n  /**\n   * Abort transactions stored in this transaction queue node.\n   *\n   * @param node Node to abort transactions for.\n   */\n  private abortTransactionsOnNode_(node: Tree<Transaction[]>) {\n    const queue = node.getValue();\n    if (queue !== null) {\n      // Queue up the callbacks and fire them after cleaning up all of our\n      // transaction state, since the callback could trigger more transactions\n      // or sets.\n      const callbacks = [];\n\n      // Go through queue.  Any already-sent transactions must be marked for\n      // abort, while the unsent ones can be immediately aborted and removed.\n      let events: Event[] = [];\n      let lastSent = -1;\n      for (let i = 0; i < queue.length; i++) {\n        if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n          // Already marked.  No action needed.\n        } else if (queue[i].status === TransactionStatus.SENT) {\n          assert(\n            lastSent === i - 1,\n            'All SENT items should be at beginning of queue.'\n          );\n          lastSent = i;\n          // Mark transaction for abort when it comes back.\n          queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n          queue[i].abortReason = 'set';\n        } else {\n          assert(\n            queue[i].status === TransactionStatus.RUN,\n            'Unexpected transaction status in abort'\n          );\n          // We can abort it immediately.\n          queue[i].unwatcher();\n          events = events.concat(\n            this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true)\n          );\n          if (queue[i].onComplete) {\n            const snapshot: DataSnapshot | null = null;\n            callbacks.push(\n              queue[i].onComplete.bind(null, new Error('set'), false, snapshot)\n            );\n          }\n        }\n      }\n      if (lastSent === -1) {\n        // We're not waiting for any sent transactions.  We can clear the queue.\n        node.setValue(null);\n      } else {\n        // Remove the transactions we aborted.\n        queue.length = lastSent + 1;\n      }\n\n      // Now fire the callbacks.\n      eventQueueRaiseEventsForChangedPath(\n        this.eventQueue_,\n        node.path(),\n        events\n      );\n      for (let i = 0; i < callbacks.length; i++) {\n        exceptionGuard(callbacks[i]);\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OnDisconnect } from './onDisconnect';\nimport { TransactionResult } from './TransactionResult';\nimport { warn } from '../core/util/util';\nimport { nextPushId } from '../core/util/NextPushId';\nimport { Query } from './Query';\nimport { Repo } from '../core/Repo';\nimport {\n  Path,\n  pathChild,\n  pathGetBack,\n  pathGetFront,\n  pathIsEmpty,\n  pathParent\n} from '../core/util/Path';\nimport { QueryParams } from '../core/view/QueryParams';\nimport {\n  validateBoolean,\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validatePathString,\n  validatePriority,\n  validateRootPathString,\n  validateWritablePath\n} from '../core/util/validation';\nimport { Deferred, validateArgCount, validateCallback } from '@firebase/util';\n\nimport { SyncPoint } from '../core/SyncPoint';\nimport { Database } from './Database';\nimport { DataSnapshot } from './DataSnapshot';\n\nexport interface ReferenceConstructor {\n  new (repo: Repo, path: Path): Reference;\n}\n\nexport class Reference extends Query {\n  then: Promise<Reference>['then'];\n  catch: Promise<Reference>['catch'];\n\n  /**\n   * Call options:\n   *   new Reference(Repo, Path) or\n   *   new Reference(url: string, string|RepoManager)\n   *\n   * Externally - this is the firebase.database.Reference type.\n   */\n  constructor(repo: Repo, path: Path) {\n    if (!(repo instanceof Repo)) {\n      throw new Error(\n        'new Reference() no longer supported - use app.database().'\n      );\n    }\n\n    // call Query's constructor, passing in the repo and path.\n    super(repo, path, new QueryParams(), false);\n  }\n\n  /** @return {?string} */\n  getKey(): string | null {\n    validateArgCount('Reference.key', 0, 0, arguments.length);\n\n    if (pathIsEmpty(this.path)) {\n      return null;\n    } else {\n      return pathGetBack(this.path);\n    }\n  }\n\n  child(pathString: string | Path): Reference {\n    validateArgCount('Reference.child', 1, 1, arguments.length);\n    if (typeof pathString === 'number') {\n      pathString = String(pathString);\n    } else if (!(pathString instanceof Path)) {\n      if (pathGetFront(this.path) === null) {\n        validateRootPathString('Reference.child', 1, pathString, false);\n      } else {\n        validatePathString('Reference.child', 1, pathString, false);\n      }\n    }\n\n    return new Reference(this.repo, pathChild(this.path, pathString));\n  }\n\n  /** @return {?Reference} */\n  getParent(): Reference | null {\n    validateArgCount('Reference.parent', 0, 0, arguments.length);\n\n    const parentPath = pathParent(this.path);\n    return parentPath === null ? null : new Reference(this.repo, parentPath);\n  }\n\n  /** @return {!Reference} */\n  getRoot(): Reference {\n    validateArgCount('Reference.root', 0, 0, arguments.length);\n\n    let ref: Reference = this;\n    while (ref.getParent() !== null) {\n      ref = ref.getParent();\n    }\n    return ref;\n  }\n\n  /** @return {!Database} */\n  databaseProp(): Database {\n    return this.repo.database;\n  }\n\n  set(\n    newVal: unknown,\n    onComplete?: (a: Error | null) => void\n  ): Promise<unknown> {\n    validateArgCount('Reference.set', 1, 2, arguments.length);\n    validateWritablePath('Reference.set', this.path);\n    validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\n    validateCallback('Reference.set', 2, onComplete, true);\n\n    const deferred = new Deferred();\n    this.repo.setWithPriority(\n      this.path,\n      newVal,\n      /*priority=*/ null,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  update(\n    objectToMerge: object,\n    onComplete?: (a: Error | null) => void\n  ): Promise<unknown> {\n    validateArgCount('Reference.update', 1, 2, arguments.length);\n    validateWritablePath('Reference.update', this.path);\n\n    if (Array.isArray(objectToMerge)) {\n      const newObjectToMerge: { [k: string]: unknown } = {};\n      for (let i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n      objectToMerge = newObjectToMerge;\n      warn(\n        'Passing an Array to Firebase.update() is deprecated. ' +\n          'Use set() if you want to overwrite the existing data, or ' +\n          'an Object with integer keys if you really do want to ' +\n          'only update some of the children.'\n      );\n    }\n    validateFirebaseMergeDataArg(\n      'Reference.update',\n      1,\n      objectToMerge,\n      this.path,\n      false\n    );\n    validateCallback('Reference.update', 2, onComplete, true);\n    const deferred = new Deferred();\n    this.repo.update(\n      this.path,\n      objectToMerge as { [k: string]: unknown },\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  setWithPriority(\n    newVal: unknown,\n    newPriority: string | number | null,\n    onComplete?: (a: Error | null) => void\n  ): Promise<unknown> {\n    validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\n    validateWritablePath('Reference.setWithPriority', this.path);\n    validateFirebaseDataArg(\n      'Reference.setWithPriority',\n      1,\n      newVal,\n      this.path,\n      false\n    );\n    validatePriority('Reference.setWithPriority', 2, newPriority, false);\n    validateCallback('Reference.setWithPriority', 3, onComplete, true);\n\n    if (this.getKey() === '.length' || this.getKey() === '.keys') {\n      throw (\n        'Reference.setWithPriority failed: ' +\n        this.getKey() +\n        ' is a read-only object.'\n      );\n    }\n\n    const deferred = new Deferred();\n    this.repo.setWithPriority(\n      this.path,\n      newVal,\n      newPriority,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  remove(onComplete?: (a: Error | null) => void): Promise<unknown> {\n    validateArgCount('Reference.remove', 0, 1, arguments.length);\n    validateWritablePath('Reference.remove', this.path);\n    validateCallback('Reference.remove', 1, onComplete, true);\n\n    return this.set(null, onComplete);\n  }\n\n  transaction(\n    transactionUpdate: (a: unknown) => unknown,\n    onComplete?: (a: Error | null, b: boolean, c: DataSnapshot | null) => void,\n    applyLocally?: boolean\n  ): Promise<TransactionResult> {\n    validateArgCount('Reference.transaction', 1, 3, arguments.length);\n    validateWritablePath('Reference.transaction', this.path);\n    validateCallback('Reference.transaction', 1, transactionUpdate, false);\n    validateCallback('Reference.transaction', 2, onComplete, true);\n    // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\n    // to expose it.\n    validateBoolean('Reference.transaction', 3, applyLocally, true);\n\n    if (this.getKey() === '.length' || this.getKey() === '.keys') {\n      throw (\n        'Reference.transaction failed: ' +\n        this.getKey() +\n        ' is a read-only object.'\n      );\n    }\n\n    if (applyLocally === undefined) {\n      applyLocally = true;\n    }\n\n    const deferred = new Deferred<TransactionResult>();\n    if (typeof onComplete === 'function') {\n      deferred.promise.catch(() => {});\n    }\n\n    const promiseComplete = function (\n      error: Error,\n      committed: boolean,\n      snapshot: DataSnapshot\n    ) {\n      if (error) {\n        deferred.reject(error);\n      } else {\n        deferred.resolve(new TransactionResult(committed, snapshot));\n      }\n      if (typeof onComplete === 'function') {\n        onComplete(error, committed, snapshot);\n      }\n    };\n    this.repo.startTransaction(\n      this.path,\n      transactionUpdate,\n      promiseComplete,\n      applyLocally\n    );\n\n    return deferred.promise;\n  }\n\n  setPriority(\n    priority: string | number | null,\n    onComplete?: (a: Error | null) => void\n  ): Promise<unknown> {\n    validateArgCount('Reference.setPriority', 1, 2, arguments.length);\n    validateWritablePath('Reference.setPriority', this.path);\n    validatePriority('Reference.setPriority', 1, priority, false);\n    validateCallback('Reference.setPriority', 2, onComplete, true);\n\n    const deferred = new Deferred();\n    this.repo.setWithPriority(\n      pathChild(this.path, '.priority'),\n      priority,\n      null,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  push(value?: unknown, onComplete?: (a: Error | null) => void): Reference {\n    validateArgCount('Reference.push', 0, 2, arguments.length);\n    validateWritablePath('Reference.push', this.path);\n    validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\n    validateCallback('Reference.push', 2, onComplete, true);\n\n    const now = this.repo.serverTime();\n    const name = nextPushId(now);\n\n    // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\n    // We use child() to create handles to two different references. The first is turned into a\n    // ThennableReference below by adding then() and catch() methods and is used as the\n    // return value of push(). The second remains a regular Reference and is used as the fulfilled\n    // value of the first ThennableReference.\n    const thennablePushRef = this.child(name);\n    const pushRef = this.child(name);\n\n    let promise;\n    if (value != null) {\n      promise = thennablePushRef.set(value, onComplete).then(() => pushRef);\n    } else {\n      promise = Promise.resolve(pushRef);\n    }\n\n    thennablePushRef.then = promise.then.bind(promise);\n    thennablePushRef.catch = promise.then.bind(promise, undefined);\n\n    if (typeof onComplete === 'function') {\n      promise.catch(() => {});\n    }\n\n    return thennablePushRef;\n  }\n\n  onDisconnect(): OnDisconnect {\n    validateWritablePath('Reference.onDisconnect', this.path);\n    return new OnDisconnect(this.repo, this.path);\n  }\n\n  get database(): Database {\n    return this.databaseProp();\n  }\n\n  get key(): string | null {\n    return this.getKey();\n  }\n\n  get parent(): Reference | null {\n    return this.getParent();\n  }\n\n  get root(): Reference {\n    return this.getRoot();\n  }\n}\n\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\nQuery.__referenceConstructor = Reference;\nSyncPoint.__referenceConstructor = Reference;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseAuthTokenData } from '@firebase/app-types/private';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\nimport { log, warn } from './util/util';\nimport { FirebaseAppLike } from './RepoManager';\n\nexport interface AuthTokenProvider {\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData>;\n  addTokenChangeListener(listener: (token: string | null) => void): void;\n  removeTokenChangeListener(listener: (token: string | null) => void): void;\n  notifyForInvalidToken(): void;\n}\n\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nexport class FirebaseAuthTokenProvider implements AuthTokenProvider {\n  private auth_: FirebaseAuthInternal | null = null;\n  constructor(\n    private app_: FirebaseAppLike,\n    private authProvider_: Provider<FirebaseAuthInternalName>\n  ) {\n    this.auth_ = authProvider_.getImmediate({ optional: true });\n    if (!this.auth_) {\n      authProvider_.get().then(auth => (this.auth_ = auth));\n    }\n  }\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    if (!this.auth_) {\n      return Promise.resolve(null);\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(error => {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      setTimeout(() => listener(null), 0);\n      this.authProvider_\n        .get()\n        .then(auth => auth.addAuthTokenListener(listener));\n    }\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {\n    this.authProvider_\n      .get()\n      .then(auth => auth.removeAuthTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    let errorMessage =\n      'Provided authentication credentials for the app named \"' +\n      this.app_.name +\n      '\" are invalid. This usually indicates your app was not ' +\n      'initialized correctly. ';\n    if ('credential' in this.app_.options) {\n      errorMessage +=\n        'Make sure the \"credential\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else if ('serviceAccount' in this.app_.options) {\n      errorMessage +=\n        'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else {\n      errorMessage +=\n        'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n        'initializeApp() match the values provided for your app at ' +\n        'https://console.firebase.google.com/.';\n    }\n    warn(errorMessage);\n  }\n}\n\n/* Auth token provider that the Admin SDK uses to connect to the Emulator. */\nexport class EmulatorAdminTokenProvider implements AuthTokenProvider {\n  private static EMULATOR_AUTH_TOKEN = 'owner';\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    return Promise.resolve({\n      accessToken: EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN);\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {}\n\n  notifyForInvalidToken(): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { FirebaseApp as FirebaseAppExp } from '@firebase/app-exp';\nimport { safeGet } from '@firebase/util';\nimport { Repo } from './Repo';\nimport { fatal, log } from './util/util';\nimport { parseRepoInfo } from './util/libs/parser';\nimport { validateUrl } from './util/validation';\nimport { Database } from '../api/Database';\nimport { RepoInfo } from './RepoInfo';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\nimport {\n  AuthTokenProvider,\n  EmulatorAdminTokenProvider,\n  FirebaseAuthTokenProvider\n} from './AuthTokenProvider';\nimport { pathIsEmpty } from './util/Path';\n\n/**\n * This variable is also defined in the firebase node.js admin SDK. Before\n * modifying this definition, consult the definition in:\n *\n * https://github.com/firebase/firebase-admin-node\n *\n * and make sure the two are consistent.\n */\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\nlet _staticInstance: RepoManager;\n\n/**\n * Intersection type that allows the SDK to be used from firebase-exp and\n * firebase v8.\n */\nexport type FirebaseAppLike = FirebaseApp | FirebaseAppExp;\n\n/**\n * Creates and caches Repo instances.\n */\nexport class RepoManager {\n  private repos_: {\n    [appName: string]: {\n      [dbUrl: string]: Repo;\n    };\n  } = {};\n\n  /**\n   * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\n   */\n  private useRestClient_: boolean = false;\n\n  static getInstance(): RepoManager {\n    if (!_staticInstance) {\n      _staticInstance = new RepoManager();\n    }\n    return _staticInstance;\n  }\n\n  // TODO(koss): Remove these functions unless used in tests?\n  interrupt() {\n    for (const appName of Object.keys(this.repos_)) {\n      for (const dbUrl of Object.keys(this.repos_[appName])) {\n        this.repos_[appName][dbUrl].interrupt();\n      }\n    }\n  }\n\n  resume() {\n    for (const appName of Object.keys(this.repos_)) {\n      for (const dbUrl of Object.keys(this.repos_[appName])) {\n        this.repos_[appName][dbUrl].resume();\n      }\n    }\n  }\n\n  /**\n   * Update an existing repo in place to point to a new host/port.\n   */\n  applyEmulatorSettings(repo: Repo, host: string, port: number): void {\n    repo.repoInfo_ = new RepoInfo(\n      `${host}:${port}`,\n      /* secure= */ false,\n      repo.repoInfo_.namespace,\n      repo.repoInfo_.webSocketOnly,\n      repo.repoInfo_.nodeAdmin,\n      repo.repoInfo_.persistenceKey,\n      repo.repoInfo_.includeNamespaceInQueryParams\n    );\n\n    if (repo.repoInfo_.nodeAdmin) {\n      repo.authTokenProvider_ = new EmulatorAdminTokenProvider();\n    }\n  }\n\n  /**\n   * This function should only ever be called to CREATE a new database instance.\n   */\n  databaseFromApp(\n    app: FirebaseAppLike,\n    authProvider: Provider<FirebaseAuthInternalName>,\n    url?: string,\n    nodeAdmin?: boolean\n  ): Database {\n    let dbUrl: string | undefined = url || app.options.databaseURL;\n    if (dbUrl === undefined) {\n      if (!app.options.projectId) {\n        fatal(\n          \"Can't determine Firebase Database URL. Be sure to include \" +\n            ' a Project ID when calling firebase.initializeApp().'\n        );\n      }\n\n      log('Using default host for project ', app.options.projectId);\n      dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\n    }\n\n    let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    let repoInfo = parsedUrl.repoInfo;\n\n    let isEmulator: boolean;\n\n    let dbEmulatorHost: string | undefined = undefined;\n    if (typeof process !== 'undefined') {\n      dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n    }\n\n    if (dbEmulatorHost) {\n      isEmulator = true;\n      dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\n      parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n      repoInfo = parsedUrl.repoInfo;\n    } else {\n      isEmulator = !parsedUrl.repoInfo.secure;\n    }\n\n    const authTokenProvider =\n      nodeAdmin && isEmulator\n        ? new EmulatorAdminTokenProvider()\n        : new FirebaseAuthTokenProvider(app, authProvider);\n\n    validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\n    if (!pathIsEmpty(parsedUrl.path)) {\n      fatal(\n        'Database URL must point to the root of a Firebase Database ' +\n          '(not including a child path).'\n      );\n    }\n\n    const repo = this.createRepo(repoInfo, app, authTokenProvider);\n\n    return repo.database;\n  }\n\n  /**\n   * Remove the repo and make sure it is disconnected.\n   *\n   */\n  deleteRepo(repo: Repo) {\n    const appRepos = safeGet(this.repos_, repo.app.name);\n    // This should never happen...\n    if (!appRepos || safeGet(appRepos, repo.key) !== repo) {\n      fatal(\n        `Database ${repo.app.name}(${repo.repoInfo_}) has already been deleted.`\n      );\n    }\n    repo.interrupt();\n    delete appRepos[repo.key];\n  }\n\n  /**\n   * Ensures a repo doesn't already exist and then creates one using the\n   * provided app.\n   *\n   * @param repoInfo The metadata about the Repo\n   * @return The Repo object for the specified server / repoName.\n   */\n  createRepo(\n    repoInfo: RepoInfo,\n    app: FirebaseAppLike,\n    authTokenProvider: AuthTokenProvider\n  ): Repo {\n    let appRepos = safeGet(this.repos_, app.name);\n\n    if (!appRepos) {\n      appRepos = {};\n      this.repos_[app.name] = appRepos;\n    }\n\n    let repo = safeGet(appRepos, repoInfo.toURLString());\n    if (repo) {\n      fatal(\n        'Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.'\n      );\n    }\n    repo = new Repo(repoInfo, this.useRestClient_, app, authTokenProvider);\n    appRepos[repoInfo.toURLString()] = repo;\n\n    return repo;\n  }\n\n  /**\n   * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n   */\n  forceRestClient(forceRestClient: boolean) {\n    this.useRestClient_ = forceRestClient;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { fatal } from '../core/util/util';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { newEmptyPath } from '../core/util/Path';\nimport { Reference } from './Reference';\nimport { Repo } from '../core/Repo';\nimport { RepoManager } from '../core/RepoManager';\nimport { validateArgCount } from '@firebase/util';\nimport { validateUrl } from '../core/util/validation';\nimport { FirebaseApp } from '@firebase/app-types';\nimport { FirebaseService } from '@firebase/app-types/private';\n\n/**\n * Class representing a firebase database.\n */\nexport class Database implements FirebaseService {\n  /** Track if the instance has been used (root or repo accessed) */\n  private instanceStarted_: boolean = false;\n\n  /** Backing state for root_ */\n  private rootInternal_?: Reference;\n\n  static readonly ServerValue = {\n    TIMESTAMP: {\n      '.sv': 'timestamp'\n    },\n    increment: (delta: number) => {\n      return {\n        '.sv': {\n          'increment': delta\n        }\n      };\n    }\n  };\n\n  /**\n   * The constructor should not be called by users of our public API.\n   */\n  constructor(private repoInternal_: Repo) {\n    if (!(repoInternal_ instanceof Repo)) {\n      fatal(\n        \"Don't call new Database() directly - please use firebase.database().\"\n      );\n    }\n  }\n\n  INTERNAL = {\n    delete: async () => {\n      this.checkDeleted_('delete');\n      RepoManager.getInstance().deleteRepo(this.repo_);\n      this.repoInternal_ = null;\n      this.rootInternal_ = null;\n    }\n  };\n\n  private get repo_(): Repo {\n    if (!this.instanceStarted_) {\n      this.repoInternal_.start();\n      this.instanceStarted_ = true;\n    }\n    return this.repoInternal_;\n  }\n\n  get root_(): Reference {\n    if (!this.rootInternal_) {\n      this.rootInternal_ = new Reference(this.repo_, newEmptyPath());\n    }\n\n    return this.rootInternal_;\n  }\n\n  get app(): FirebaseApp {\n    return this.repo_.app as FirebaseApp;\n  }\n\n  /**\n   * Modify this instance to communicate with the Realtime Database emulator.\n   *\n   * <p>Note: This method must be called before performing any other operation.\n   *\n   * @param host the emulator host (ex: localhost)\n   * @param port the emulator port (ex: 8080)\n   */\n  useEmulator(host: string, port: number): void {\n    this.checkDeleted_('useEmulator');\n    if (this.instanceStarted_) {\n      fatal(\n        'Cannot call useEmulator() after instance has already been initialized.'\n      );\n      return;\n    }\n\n    // Modify the repo to apply emulator settings\n    RepoManager.getInstance().applyEmulatorSettings(\n      this.repoInternal_,\n      host,\n      port\n    );\n  }\n\n  /**\n   * Returns a reference to the root or to the path specified in the provided\n   * argument.\n   *\n   * @param path The relative string path or an existing Reference to a database\n   * location.\n   * @throws If a Reference is provided, throws if it does not belong to the\n   * same project.\n   * @return Firebase reference.\n   */\n  ref(path?: string): Reference;\n  ref(path?: Reference): Reference;\n  ref(path?: string | Reference): Reference {\n    this.checkDeleted_('ref');\n    validateArgCount('database.ref', 0, 1, arguments.length);\n\n    if (path instanceof Reference) {\n      return this.refFromURL(path.toString());\n    }\n\n    return path !== undefined ? this.root_.child(path) : this.root_;\n  }\n\n  /**\n   * Returns a reference to the root or the path specified in url.\n   * We throw a exception if the url is not in the same domain as the\n   * current repo.\n   * @return Firebase reference.\n   */\n  refFromURL(url: string): Reference {\n    /** @const {string} */\n    const apiName = 'database.refFromURL';\n    this.checkDeleted_(apiName);\n    validateArgCount(apiName, 1, 1, arguments.length);\n    const parsedURL = parseRepoInfo(url, this.repo_.repoInfo_.nodeAdmin);\n    validateUrl(apiName, 1, parsedURL);\n\n    const repoInfo = parsedURL.repoInfo;\n    if (\n      !this.repo_.repoInfo_.isCustomHost() &&\n      repoInfo.host !== this.repo_.repoInfo_.host\n    ) {\n      fatal(\n        apiName +\n          ': Host name does not match the current database: ' +\n          '(found ' +\n          repoInfo.host +\n          ' but expected ' +\n          this.repo_.repoInfo_.host +\n          ')'\n      );\n    }\n\n    return this.ref(parsedURL.path.toString());\n  }\n\n  private checkDeleted_(apiName: string) {\n    if (this.repoInternal_ === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }\n\n  // Make individual repo go offline.\n  goOffline(): void {\n    validateArgCount('database.goOffline', 0, 0, arguments.length);\n    this.checkDeleted_('goOffline');\n    this.repo_.interrupt();\n  }\n\n  goOnline(): void {\n    validateArgCount('database.goOnline', 0, 0, arguments.length);\n    this.checkDeleted_('goOnline');\n    this.repo_.resume();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WebSocketConnection } from '../realtime/WebSocketConnection';\nimport { BrowserPollConnection } from '../realtime/BrowserPollConnection';\nimport { Reference } from './Reference';\nimport { RepoManager } from '../core/RepoManager';\nimport { setSDKVersion } from '../core/version';\nimport { FirebaseApp } from '@firebase/app-types';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport * as types from '@firebase/database-types';\nimport {\n  Provider,\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\n\n/**\n * INTERNAL methods for internal-use only (tests, etc.).\n *\n * Customers shouldn't use these or else should be aware that they could break at any time.\n */\n\nexport const forceLongPolling = function () {\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n};\n\nexport const forceWebSockets = function () {\n  BrowserPollConnection.forceDisallow();\n};\n\n/* Used by App Manager */\nexport const isWebSocketsAvailable = function (): boolean {\n  return WebSocketConnection['isAvailable']();\n};\n\nexport const setSecurityDebugCallback = function (\n  ref: Reference,\n  callback: (a: object) => void\n) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (ref.repo.persistentConnection_ as any).securityDebugCallback_ = callback;\n};\n\nexport const stats = function (ref: Reference, showDelta?: boolean) {\n  ref.repo.stats(showDelta);\n};\n\nexport const statsIncrementCounter = function (ref: Reference, metric: string) {\n  ref.repo.statsIncrementCounter(metric);\n};\n\nexport const dataUpdateCount = function (ref: Reference): number {\n  return ref.repo.dataUpdateCount;\n};\n\nexport const interceptServerData = function (\n  ref: Reference,\n  callback: ((a: string, b: unknown) => void) | null\n) {\n  return ref.repo.interceptServerData_(callback);\n};\n\n/**\n * Used by console to create a database based on the app,\n * passed database URL and a custom auth implementation.\n *\n * @param app A valid FirebaseApp-like object\n * @param url A valid Firebase databaseURL\n * @param version custom version e.g. firebase-admin version\n * @param customAuthImpl custom auth implementation\n */\nexport function initStandalone<T>({\n  app,\n  url,\n  version,\n  customAuthImpl,\n  namespace,\n  nodeAdmin = false\n}: {\n  app: FirebaseApp;\n  url: string;\n  version: string;\n  customAuthImpl: FirebaseAuthInternal;\n  namespace: T;\n  nodeAdmin?: boolean;\n}): {\n  instance: types.Database;\n  namespace: T;\n} {\n  setSDKVersion(version);\n\n  /**\n   * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\n   * any actual function.\n   */\n  const authProvider = new Provider<FirebaseAuthInternalName>(\n    'auth-internal',\n    new ComponentContainer('database-standalone')\n  );\n  authProvider.setComponent(\n    new Component('auth-internal', () => customAuthImpl, ComponentType.PRIVATE)\n  );\n\n  return {\n    instance: RepoManager.getInstance().databaseFromApp(\n      app,\n      authProvider,\n      url,\n      nodeAdmin\n    ) as types.Database,\n    namespace\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { PersistentConnection } from '../core/PersistentConnection';\nimport { RepoManager } from '../core/RepoManager';\nimport { Connection } from '../realtime/Connection';\nimport { Query } from './Query';\n\nexport const DataConnection = PersistentConnection;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).simpleListen = function (\n  pathString: string,\n  onComplete: (a: unknown) => void\n) {\n  this.sendRequest('q', { p: pathString }, onComplete);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).echo = function (\n  data: unknown,\n  onEcho: (a: unknown) => void\n) {\n  this.sendRequest('echo', { d: data }, onEcho);\n};\n\n// RealTimeConnection properties that we use in tests.\nexport const RealTimeConnection = Connection;\n\nexport const hijackHash = function (newHash: () => string) {\n  const oldPut = PersistentConnection.prototype.put;\n  PersistentConnection.prototype.put = function (\n    pathString,\n    data,\n    onComplete,\n    hash\n  ) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nexport const ConnectionTarget = RepoInfo;\n\nexport const queryIdentifier = function (query: Query) {\n  return query.queryIdentifier();\n};\n\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n */\nexport const forceRestClient = function (forceRestClient: boolean) {\n  RepoManager.getInstance().forceRestClient(forceRestClient);\n};\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WindowService {\n\n  get windowRef() {\n    return window;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from '../../services/auth.service';\n\nimport { NgForm } from '@angular/forms';\n\nimport { AngularFirestore } from '@angular/fire/firestore';\n\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  authError: any;\n\n  constructor(private auth: AuthService, private test: AngularFirestore) { }\n\n  ngOnInit(): void {\n    // console.log('test', this.test.collection('Users').get());\n\n    this.auth.eventAuthError$.subscribe(data => {\n      this.authError = data;\n    })\n  }\n\n  createUser(form) {\n    console.log(\"click register button\");\n    console.log(\"form value: \" + form.value)\n    this.auth.createUser(form.value);\n  }\n\n}\n","<div class=\"register\">\n    <!-- Header -->\n    <div class=\"register__header\">\n        <div class=\"container-fluid\">\n            <!-- Back -->\n            <button routerLink=\"/login\" class=\"back btn material-icons\"> arrow_right_alt </button>\n            <!-- Title -->\n            <div class=\"register__header-title\">\n                Đăng ký tài khoản\n            </div>\n        </div>\n    </div>\n\n    <!-- Register Form -->\n    <div class=\"container-fluid\">\n        <!-- Error alert -->\n        <p class=\"error-text\">{{authError?.message}}</p>\n        <form #registerForm=\"ngForm\" class=\"register__form\" (ngSubmit)=\"createUser(registerForm)\">\n            <!-- Name -->\n            <input type=\"text\" class=\"name register__form-input\" placeholder=\"Họ tên\" ngModel #fullName=\"ngModel\"\n                name=\"fullName\" required>\n            <!-- Email -->\n            <input type=\"email\" class=\"email register__form-input\" placeholder=\"Email của bạn\" ngModel #email=\"ngModel\"\n                name=\"email\" required>\n            <!-- Phone number -->\n            <input type=\"text\" class=\"phone register__form-input\" placeholder=\"Số điện thoại\" ngModel #phone=\"ngModel\"\n                name=\"phone\" required>\n            <!-- Address -->\n            <input type=\"text\" class=\"address register__form-input\" placeholder=\"Địa chỉ\" ngModel #address=\"ngModel\"\n                name=\"address\" required>\n            <!-- Password -->\n            <input type=\"password\" class=\"password register__form-input\" placeholder=\"Mật khẩu ( 8 kí tự)\" ngModel\n                #password=\"ngModel\" name=\"password\" required>\n            <button type=\"submit\" class=\"registerBtn btn \">Đăng ký</button>\n        </form>\n\n    </div>\n</div>","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport { name, version } from '../package.json';\n\nfirebase.registerVersion(name, version, 'app');\n\nexport default firebase;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport '@firebase/installations';\n\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, ErrorCode } from './util/errors';\nimport {\n  FirebaseService,\n  _FirebaseNamespace\n} from '@firebase/app-types/private';\n\nimport { FirebaseInternalDependencies } from './interfaces/internal-dependencies';\nimport { FirebaseMessaging } from '@firebase/messaging-types';\nimport { SwController } from './controllers/sw-controller';\nimport { WindowController } from './controllers/window-controller';\nimport { extractAppConfig } from './helpers/extract-app-config';\nimport firebase from '@firebase/app';\n\nconst MESSAGING_NAME = 'messaging';\nfunction factoryMethod(\n  container: ComponentContainer\n): FirebaseService & FirebaseMessaging {\n  // Dependencies.\n  const app = container.getProvider('app').getImmediate();\n  const appConfig = extractAppConfig(app);\n  const installations = container.getProvider('installations').getImmediate();\n  const analyticsProvider = container.getProvider('analytics-internal');\n\n  const firebaseDependencies: FirebaseInternalDependencies = {\n    app,\n    appConfig,\n    installations,\n    analyticsProvider\n  };\n\n  if (!isSupported()) {\n    throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n  }\n\n  if (self && 'ServiceWorkerGlobalScope' in self) {\n    // Running in ServiceWorker context\n    return new SwController(firebaseDependencies);\n  } else {\n    // Assume we are in the window context.\n    return new WindowController(firebaseDependencies);\n  }\n}\n\nconst NAMESPACE_EXPORTS = {\n  isSupported\n};\n\n(firebase as _FirebaseNamespace).INTERNAL.registerComponent(\n  new Component(\n    MESSAGING_NAME,\n    factoryMethod,\n    ComponentType.PUBLIC\n  ).setServiceProps(NAMESPACE_EXPORTS)\n);\n\n/**\n * Define extension behavior of `registerMessaging`\n */\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    messaging: {\n      (app?: FirebaseApp): FirebaseMessaging;\n      isSupported(): boolean;\n    };\n  }\n  interface FirebaseApp {\n    messaging(): FirebaseMessaging;\n  }\n}\n\nfunction isSupported(): boolean {\n  if (self && 'ServiceWorkerGlobalScope' in self) {\n    // Running in ServiceWorker context\n    return isSWControllerSupported();\n  } else {\n    // Assume we are in the window context.\n    return isWindowControllerSupported();\n  }\n}\n\n/**\n * Checks to see if the required APIs exist.\n */\nfunction isWindowControllerSupported(): boolean {\n  return (\n    'indexedDB' in window &&\n    indexedDB !== null &&\n    navigator.cookieEnabled &&\n    'serviceWorker' in navigator &&\n    'PushManager' in window &&\n    'Notification' in window &&\n    'fetch' in window &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n\n/**\n * Checks to see if the required APIs exist within SW Context.\n */\nfunction isSWControllerSupported(): boolean {\n  return (\n    'indexedDB' in self &&\n    indexedDB !== null &&\n    'PushManager' in self &&\n    'Notification' in self &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory } from '@firebase/util';\nimport { SERVICE, SERVICE_NAME } from '../constants';\n\nexport const enum ErrorCode {\n  TRACE_STARTED_BEFORE = 'trace started',\n  TRACE_STOPPED_BEFORE = 'trace stopped',\n  NONPOSITIVE_TRACE_START_TIME = 'nonpositive trace startTime',\n  NONPOSITIVE_TRACE_DURATION = 'nonpositive trace duration',\n  NO_WINDOW = 'no window',\n  NO_APP_ID = 'no app id',\n  NO_PROJECT_ID = 'no project id',\n  NO_API_KEY = 'no api key',\n  INVALID_CC_LOG = 'invalid cc log',\n  FB_NOT_DEFAULT = 'FB not default',\n  RC_NOT_OK = 'RC response not ok',\n  INVALID_ATTRIBUTE_NAME = 'invalid attribute name',\n  INVALID_ATTRIBUTE_VALUE = 'invalid attribute value',\n  INVALID_CUSTOM_METRIC_NAME = 'invalid custom metric name',\n  INVALID_STRING_MERGER_PARAMETER = 'invalid String merger input'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.TRACE_STARTED_BEFORE]: 'Trace {$traceName} was started before.',\n  [ErrorCode.TRACE_STOPPED_BEFORE]: 'Trace {$traceName} is not running.',\n  [ErrorCode.NONPOSITIVE_TRACE_START_TIME]:\n    'Trace {$traceName} startTime should be positive.',\n  [ErrorCode.NONPOSITIVE_TRACE_DURATION]:\n    'Trace {$traceName} duration should be positive.',\n  [ErrorCode.NO_WINDOW]: 'Window is not available.',\n  [ErrorCode.NO_APP_ID]: 'App id is not available.',\n  [ErrorCode.NO_PROJECT_ID]: 'Project id is not available.',\n  [ErrorCode.NO_API_KEY]: 'Api key is not available.',\n  [ErrorCode.INVALID_CC_LOG]: 'Attempted to queue invalid cc event',\n  [ErrorCode.FB_NOT_DEFAULT]:\n    'Performance can only start when Firebase app instance is the default one.',\n  [ErrorCode.RC_NOT_OK]: 'RC response is not ok',\n  [ErrorCode.INVALID_ATTRIBUTE_NAME]:\n    'Attribute name {$attributeName} is invalid.',\n  [ErrorCode.INVALID_ATTRIBUTE_VALUE]:\n    'Attribute value {$attributeValue} is invalid.',\n  [ErrorCode.INVALID_CUSTOM_METRIC_NAME]:\n    'Custom metric name {$customMetricName} is invalid',\n  [ErrorCode.INVALID_STRING_MERGER_PARAMETER]:\n    'Input for String merger is invalid, contact support team to resolve.'\n};\n\ninterface ErrorParams {\n  [ErrorCode.TRACE_STARTED_BEFORE]: { traceName: string };\n  [ErrorCode.TRACE_STOPPED_BEFORE]: { traceName: string };\n  [ErrorCode.NONPOSITIVE_TRACE_START_TIME]: { traceName: string };\n  [ErrorCode.NONPOSITIVE_TRACE_DURATION]: { traceName: string };\n  [ErrorCode.INVALID_ATTRIBUTE_NAME]: { attributeName: string };\n  [ErrorCode.INVALID_ATTRIBUTE_VALUE]: { attributeValue: string };\n  [ErrorCode.INVALID_CUSTOM_METRIC_NAME]: { customMetricName: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  SERVICE,\n  SERVICE_NAME,\n  ERROR_DESCRIPTION_MAP\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { SERVICE_NAME } from '../constants';\n\nexport const consoleLogger = new Logger(SERVICE_NAME);\nconsoleLogger.logLevel = LogLevel.INFO;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\nimport { isIndexedDBAvailable } from '@firebase/util';\nimport { consoleLogger } from '../utils/console_logger';\ndeclare global {\n  interface Window {\n    PerformanceObserver: typeof PerformanceObserver;\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    perfMetrics?: { onFirstInputDelay: Function };\n  }\n}\n\nlet apiInstance: Api | undefined;\nlet windowInstance: Window | undefined;\n\nexport type EntryType =\n  | 'mark'\n  | 'measure'\n  | 'paint'\n  | 'resource'\n  | 'frame'\n  | 'navigation';\n\n/**\n * This class holds a reference to various browser related objects injected by\n * set methods.\n */\nexport class Api {\n  private readonly performance: Performance;\n  /** PreformanceObserver constructor function. */\n  private readonly PerformanceObserver: typeof PerformanceObserver;\n  private readonly windowLocation: Location;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  readonly onFirstInputDelay?: Function;\n  readonly localStorage?: Storage;\n  readonly document: Document;\n  readonly navigator: Navigator;\n\n  constructor(readonly window?: Window) {\n    if (!window) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_WINDOW);\n    }\n    this.performance = window.performance;\n    this.PerformanceObserver = window.PerformanceObserver;\n    this.windowLocation = window.location;\n    this.navigator = window.navigator;\n    this.document = window.document;\n    if (this.navigator && this.navigator.cookieEnabled) {\n      // If user blocks cookies on the browser, accessing localStorage will\n      // throw an exception.\n      this.localStorage = window.localStorage;\n    }\n    if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\n      this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\n    }\n  }\n\n  getUrl(): string {\n    // Do not capture the string query part of url.\n    return this.windowLocation.href.split('?')[0];\n  }\n\n  mark(name: string): void {\n    if (!this.performance || !this.performance.mark) {\n      return;\n    }\n    this.performance.mark(name);\n  }\n\n  measure(measureName: string, mark1: string, mark2: string): void {\n    if (!this.performance || !this.performance.measure) {\n      return;\n    }\n    this.performance.measure(measureName, mark1, mark2);\n  }\n\n  getEntriesByType(type: EntryType): PerformanceEntry[] {\n    if (!this.performance || !this.performance.getEntriesByType) {\n      return [];\n    }\n    return this.performance.getEntriesByType(type);\n  }\n\n  getEntriesByName(name: string): PerformanceEntry[] {\n    if (!this.performance || !this.performance.getEntriesByName) {\n      return [];\n    }\n    return this.performance.getEntriesByName(name);\n  }\n\n  getTimeOrigin(): number {\n    // Polyfill the time origin with performance.timing.navigationStart.\n    return (\n      this.performance &&\n      (this.performance.timeOrigin || this.performance.timing.navigationStart)\n    );\n  }\n\n  requiredApisAvailable(): boolean {\n    if (\n      !fetch ||\n      !Promise ||\n      !this.navigator ||\n      !this.navigator.cookieEnabled\n    ) {\n      consoleLogger.info(\n        'Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.'\n      );\n      return false;\n    }\n\n    if (!isIndexedDBAvailable()) {\n      consoleLogger.info('IndexedDB is not supported by current browswer');\n      return false;\n    }\n    return true;\n  }\n\n  setupObserver(\n    entryType: EntryType,\n    callback: (entry: PerformanceEntry) => void\n  ): void {\n    if (!this.PerformanceObserver) {\n      return;\n    }\n    const observer = new this.PerformanceObserver(list => {\n      for (const entry of list.getEntries()) {\n        // `entry` is a PerformanceEntry instance.\n        callback(entry);\n      }\n    });\n\n    // Start observing the entry types you care about.\n    observer.observe({ entryTypes: [entryType] });\n  }\n\n  static getInstance(): Api {\n    if (apiInstance === undefined) {\n      apiInstance = new Api(windowInstance);\n    }\n    return apiInstance;\n  }\n}\n\nexport function setupApi(window: Window): void {\n  windowInstance = window;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from './errors';\n\nexport function mergeStrings(part1: string, part2: string): string {\n  const sizeDiff = part1.length - part2.length;\n  if (sizeDiff < 0 || sizeDiff > 1) {\n    throw ERROR_FACTORY.create(ErrorCode.INVALID_STRING_MERGER_PARAMETER);\n  }\n\n  const resultArray = [];\n  for (let i = 0; i < part1.length; i++) {\n    resultArray.push(part1.charAt(i));\n    if (part2.length > i) {\n      resultArray.push(part2.charAt(i));\n    }\n  }\n\n  return resultArray.join('');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\nimport { FirebaseInstallations } from '@firebase/installations-types';\nimport { mergeStrings } from '../utils/string_merger';\n\nlet settingsServiceInstance: SettingsService | undefined;\n\nexport class SettingsService {\n  // The variable which controls logging of automatic traces and HTTP/S network monitoring.\n  instrumentationEnabled = true;\n\n  // The variable which controls logging of custom traces.\n  dataCollectionEnabled = true;\n\n  // Configuration flags set through remote config.\n  loggingEnabled = false;\n  // Sampling rate between 0 and 1.\n  tracesSamplingRate = 1;\n  networkRequestsSamplingRate = 1;\n\n  // Address of logging service.\n  logEndPointUrl =\n    'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto';\n  // Performance event transport endpoint URL which should be compatible with proto3.\n  // New Address for transport service, not configurable via Remote Config.\n  flTransportEndpointUrl = mergeStrings(\n    'hts/frbslgigp.ogepscmv/ieo/eaylg',\n    'tp:/ieaeogn-agolai.o/1frlglgc/o'\n  );\n\n  transportKey = mergeStrings('AzSC8r6ReiGqFMyfvgow', 'Iayx0u-XT3vksVM-pIV');\n\n  // Source type for performance event logs.\n  logSource = 462;\n\n  // Flags which control per session logging of traces and network requests.\n  logTraceAfterSampling = false;\n  logNetworkAfterSampling = false;\n\n  // TTL of config retrieved from remote config in hours.\n  configTimeToLive = 12;\n\n  firebaseAppInstance!: FirebaseApp;\n\n  installationsService!: FirebaseInstallations;\n\n  getAppId(): string {\n    const appId =\n      this.firebaseAppInstance &&\n      this.firebaseAppInstance.options &&\n      this.firebaseAppInstance.options.appId;\n    if (!appId) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_APP_ID);\n    }\n    return appId;\n  }\n\n  getProjectId(): string {\n    const projectId =\n      this.firebaseAppInstance &&\n      this.firebaseAppInstance.options &&\n      this.firebaseAppInstance.options.projectId;\n    if (!projectId) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_PROJECT_ID);\n    }\n    return projectId;\n  }\n\n  getApiKey(): string {\n    const apiKey =\n      this.firebaseAppInstance &&\n      this.firebaseAppInstance.options &&\n      this.firebaseAppInstance.options.apiKey;\n    if (!apiKey) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_API_KEY);\n    }\n    return apiKey;\n  }\n\n  getFlTransportFullUrl(): string {\n    return this.flTransportEndpointUrl.concat('?key=', this.transportKey);\n  }\n\n  static getInstance(): SettingsService {\n    if (settingsServiceInstance === undefined) {\n      settingsServiceInstance = new SettingsService();\n    }\n    return settingsServiceInstance;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SettingsService } from './settings_service';\n\nlet iid: string | undefined;\nlet authToken: string | undefined;\n\nexport function getIidPromise(): Promise<string> {\n  const iidPromise = SettingsService.getInstance().installationsService.getId();\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  iidPromise.then((iidVal: string) => {\n    iid = iidVal;\n  });\n  return iidPromise;\n}\n\n// This method should be used after the iid is retrieved by getIidPromise method.\nexport function getIid(): string | undefined {\n  return iid;\n}\n\nexport function getAuthTokenPromise(): Promise<string> {\n  const authTokenPromise = SettingsService.getInstance().installationsService.getToken();\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  authTokenPromise.then((authTokenVal: string) => {\n    authToken = authTokenVal;\n  });\n  return authTokenPromise;\n}\n\nexport function getAuthenticationToken(): string | undefined {\n  return authToken;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Api } from '../services/api_service';\n\n// The values and orders of the following enums should not be changed.\nconst enum ServiceWorkerStatus {\n  UNKNOWN = 0,\n  UNSUPPORTED = 1,\n  CONTROLLED = 2,\n  UNCONTROLLED = 3\n}\n\nexport enum VisibilityState {\n  UNKNOWN = 0,\n  VISIBLE = 1,\n  HIDDEN = 2\n}\n\nconst enum EffectiveConnectionType {\n  UNKNOWN = 0,\n  CONNECTION_SLOW_2G = 1,\n  CONNECTION_2G = 2,\n  CONNECTION_3G = 3,\n  CONNECTION_4G = 4\n}\n\n/**\n * NetworkInformation\n *\n * ref: https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation\n */\ninterface NetworkInformation {\n  readonly effectiveType?: 'slow-2g' | '2g' | '3g' | '4g';\n}\n\ninterface NavigatorWithConnection extends Navigator {\n  readonly connection: NetworkInformation;\n}\n\nconst RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\nconst ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\w*$');\nconst MAX_ATTRIBUTE_NAME_LENGTH = 40;\nconst MAX_ATTRIBUTE_VALUE_LENGTH = 100;\n\nexport function getServiceWorkerStatus(): ServiceWorkerStatus {\n  const navigator = Api.getInstance().navigator;\n  if ('serviceWorker' in navigator) {\n    if (navigator.serviceWorker.controller) {\n      return ServiceWorkerStatus.CONTROLLED;\n    } else {\n      return ServiceWorkerStatus.UNCONTROLLED;\n    }\n  } else {\n    return ServiceWorkerStatus.UNSUPPORTED;\n  }\n}\n\nexport function getVisibilityState(): VisibilityState {\n  const document = Api.getInstance().document;\n  const visibilityState = document.visibilityState;\n  switch (visibilityState) {\n    case 'visible':\n      return VisibilityState.VISIBLE;\n    case 'hidden':\n      return VisibilityState.HIDDEN;\n    default:\n      return VisibilityState.UNKNOWN;\n  }\n}\n\nexport function getEffectiveConnectionType(): EffectiveConnectionType {\n  const navigator = Api.getInstance().navigator;\n  const navigatorConnection = (navigator as NavigatorWithConnection).connection;\n  const effectiveType =\n    navigatorConnection && navigatorConnection.effectiveType;\n  switch (effectiveType) {\n    case 'slow-2g':\n      return EffectiveConnectionType.CONNECTION_SLOW_2G;\n    case '2g':\n      return EffectiveConnectionType.CONNECTION_2G;\n    case '3g':\n      return EffectiveConnectionType.CONNECTION_3G;\n    case '4g':\n      return EffectiveConnectionType.CONNECTION_4G;\n    default:\n      return EffectiveConnectionType.UNKNOWN;\n  }\n}\n\nexport function isValidCustomAttributeName(name: string): boolean {\n  if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\n    return false;\n  }\n  const matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(prefix =>\n    name.startsWith(prefix)\n  );\n  return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\n}\n\nexport function isValidCustomAttributeValue(value: string): boolean {\n  return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CONFIG_EXPIRY_LOCAL_STORAGE_KEY,\n  CONFIG_LOCAL_STORAGE_KEY,\n  SDK_VERSION\n} from '../constants';\nimport { consoleLogger } from '../utils/console_logger';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\n\nimport { Api } from './api_service';\nimport { getAuthTokenPromise } from './iid_service';\nimport { SettingsService } from './settings_service';\n\nconst REMOTE_CONFIG_SDK_VERSION = '0.0.1';\n\ninterface SecondaryConfig {\n  loggingEnabled?: boolean;\n  logSource?: number;\n  logEndPointUrl?: string;\n  transportKey?: string;\n  tracesSamplingRate?: number;\n  networkRequestsSamplingRate?: number;\n}\n\n// These values will be used if the remote config object is successfully\n// retrieved, but the template does not have these fields.\nconst DEFAULT_CONFIGS: SecondaryConfig = {\n  loggingEnabled: true\n};\n\n/* eslint-disable camelcase */\ninterface RemoteConfigTemplate {\n  fpr_enabled?: string;\n  fpr_log_source?: string;\n  fpr_log_endpoint_url?: string;\n  fpr_log_transport_key?: string;\n  fpr_log_transport_web_percent?: string;\n  fpr_vc_network_request_sampling_rate?: string;\n  fpr_vc_trace_sampling_rate?: string;\n  fpr_vc_session_sampling_rate?: string;\n}\n/* eslint-enable camelcase */\n\ninterface RemoteConfigResponse {\n  entries?: RemoteConfigTemplate;\n  state?: string;\n}\n\nconst FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\n\nexport function getConfig(iid: string): Promise<void> {\n  const config = getStoredConfig();\n  if (config) {\n    processConfig(config);\n    return Promise.resolve();\n  }\n\n  return getRemoteConfig(iid)\n    .then(processConfig)\n    .then(\n      config => storeConfig(config),\n      /** Do nothing for error, use defaults set in settings service. */\n      () => {}\n    );\n}\n\nfunction getStoredConfig(): RemoteConfigResponse | undefined {\n  const localStorage = Api.getInstance().localStorage;\n  if (!localStorage) {\n    return;\n  }\n  const expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\n  if (!expiryString || !configValid(expiryString)) {\n    return;\n  }\n\n  const configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\n  if (!configStringified) {\n    return;\n  }\n  try {\n    const configResponse: RemoteConfigResponse = JSON.parse(configStringified);\n    return configResponse;\n  } catch {\n    return;\n  }\n}\n\nfunction storeConfig(config: RemoteConfigResponse | undefined): void {\n  const localStorage = Api.getInstance().localStorage;\n  if (!config || !localStorage) {\n    return;\n  }\n\n  localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\n  localStorage.setItem(\n    CONFIG_EXPIRY_LOCAL_STORAGE_KEY,\n    String(\n      Date.now() +\n        SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000\n    )\n  );\n}\n\nconst COULD_NOT_GET_CONFIG_MSG =\n  'Could not fetch config, will use default configs';\n\nfunction getRemoteConfig(\n  iid: string\n): Promise<RemoteConfigResponse | undefined> {\n  // Perf needs auth token only to retrieve remote config.\n  return getAuthTokenPromise()\n    .then(authToken => {\n      const projectId = SettingsService.getInstance().getProjectId();\n      const configEndPoint = `https://firebaseremoteconfig.googleapis.com/v1/projects/${projectId}/namespaces/fireperf:fetch?key=${SettingsService.getInstance().getApiKey()}`;\n      const request = new Request(configEndPoint, {\n        method: 'POST',\n        headers: { Authorization: `${FIS_AUTH_PREFIX} ${authToken}` },\n        /* eslint-disable camelcase */\n        body: JSON.stringify({\n          app_instance_id: iid,\n          app_instance_id_token: authToken,\n          app_id: SettingsService.getInstance().getAppId(),\n          app_version: SDK_VERSION,\n          sdk_version: REMOTE_CONFIG_SDK_VERSION\n        })\n        /* eslint-enable camelcase */\n      });\n      return fetch(request).then(response => {\n        if (response.ok) {\n          return response.json() as RemoteConfigResponse;\n        }\n        // In case response is not ok. This will be caught by catch.\n        throw ERROR_FACTORY.create(ErrorCode.RC_NOT_OK);\n      });\n    })\n    .catch(() => {\n      consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\n      return undefined;\n    });\n}\n\n/**\n * Processes config coming either from calling RC or from local storage.\n * This method only runs if call is successful or config in storage\n * is valid.\n */\nfunction processConfig(\n  config?: RemoteConfigResponse\n): RemoteConfigResponse | undefined {\n  if (!config) {\n    return config;\n  }\n  const settingsServiceInstance = SettingsService.getInstance();\n  const entries = config.entries || {};\n  if (entries.fpr_enabled !== undefined) {\n    // TODO: Change the assignment of loggingEnabled once the received type is\n    // known.\n    settingsServiceInstance.loggingEnabled =\n      String(entries.fpr_enabled) === 'true';\n  } else if (DEFAULT_CONFIGS.loggingEnabled !== undefined) {\n    // Config retrieved successfully, but there is no fpr_enabled in template.\n    // Use secondary configs value.\n    settingsServiceInstance.loggingEnabled = DEFAULT_CONFIGS.loggingEnabled;\n  }\n  if (entries.fpr_log_source) {\n    settingsServiceInstance.logSource = Number(entries.fpr_log_source);\n  } else if (DEFAULT_CONFIGS.logSource) {\n    settingsServiceInstance.logSource = DEFAULT_CONFIGS.logSource;\n  }\n\n  if (entries.fpr_log_endpoint_url) {\n    settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\n  } else if (DEFAULT_CONFIGS.logEndPointUrl) {\n    settingsServiceInstance.logEndPointUrl = DEFAULT_CONFIGS.logEndPointUrl;\n  }\n\n  // Key from Remote Config has to be non-empty string, otherwsie use local value.\n  if (entries.fpr_log_transport_key) {\n    settingsServiceInstance.transportKey = entries.fpr_log_transport_key;\n  } else if (DEFAULT_CONFIGS.transportKey) {\n    settingsServiceInstance.transportKey = DEFAULT_CONFIGS.transportKey;\n  }\n\n  if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\n    settingsServiceInstance.networkRequestsSamplingRate = Number(\n      entries.fpr_vc_network_request_sampling_rate\n    );\n  } else if (DEFAULT_CONFIGS.networkRequestsSamplingRate !== undefined) {\n    settingsServiceInstance.networkRequestsSamplingRate =\n      DEFAULT_CONFIGS.networkRequestsSamplingRate;\n  }\n  if (entries.fpr_vc_trace_sampling_rate !== undefined) {\n    settingsServiceInstance.tracesSamplingRate = Number(\n      entries.fpr_vc_trace_sampling_rate\n    );\n  } else if (DEFAULT_CONFIGS.tracesSamplingRate !== undefined) {\n    settingsServiceInstance.tracesSamplingRate =\n      DEFAULT_CONFIGS.tracesSamplingRate;\n  }\n  // Set the per session trace and network logging flags.\n  settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(\n    settingsServiceInstance.tracesSamplingRate\n  );\n  settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(\n    settingsServiceInstance.networkRequestsSamplingRate\n  );\n  return config;\n}\n\nfunction configValid(expiry: string): boolean {\n  return Number(expiry) > Date.now();\n}\n\nfunction shouldLogAfterSampling(samplingRate: number): boolean {\n  return Math.random() <= samplingRate;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getIidPromise } from './iid_service';\nimport { getConfig } from './remote_config_service';\nimport { Api } from './api_service';\n\nconst enum InitializationStatus {\n  notInitialized = 1,\n  initializationPending,\n  initialized\n}\n\nlet initializationStatus = InitializationStatus.notInitialized;\n\nlet initializationPromise: Promise<void> | undefined;\n\nexport function getInitializationPromise(): Promise<void> {\n  initializationStatus = InitializationStatus.initializationPending;\n\n  initializationPromise = initializationPromise || initializePerf();\n\n  return initializationPromise;\n}\n\nexport function isPerfInitialized(): boolean {\n  return initializationStatus === InitializationStatus.initialized;\n}\n\nfunction initializePerf(): Promise<void> {\n  return getDocumentReadyComplete()\n    .then(() => getIidPromise())\n    .then(iid => getConfig(iid))\n    .then(\n      () => changeInitializationStatus(),\n      () => changeInitializationStatus()\n    );\n}\n\n/**\n * Returns a promise which resolves whenever the document readystate is complete or\n * immediately if it is called after page load complete.\n */\nfunction getDocumentReadyComplete(): Promise<void> {\n  const document = Api.getInstance().document;\n  return new Promise(resolve => {\n    if (document && document.readyState !== 'complete') {\n      const handler = (): void => {\n        if (document.readyState === 'complete') {\n          document.removeEventListener('readystatechange', handler);\n          resolve();\n        }\n      };\n      document.addEventListener('readystatechange', handler);\n    } else {\n      resolve();\n    }\n  });\n}\n\nfunction changeInitializationStatus(): void {\n  initializationStatus = InitializationStatus.initialized;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SettingsService } from './settings_service';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\nimport { consoleLogger } from '../utils/console_logger';\n\nconst DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\nconst INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000;\n// If end point does not work, the call will be tried for these many times.\nconst DEFAULT_REMAINING_TRIES = 3;\nconst MAX_EVENT_COUNT_PER_REQUEST = 1000;\nlet remainingTries = DEFAULT_REMAINING_TRIES;\n\ninterface LogResponseDetails {\n  responseAction?: string;\n}\n\ninterface BatchEvent {\n  message: string;\n  eventTime: number;\n}\n\n/* eslint-disable camelcase */\n// CC/Fl accepted log format.\ninterface TransportBatchLogFormat {\n  request_time_ms: string;\n  client_info: ClientInfo;\n  log_source: number;\n  log_event: Log[];\n}\n\ninterface ClientInfo {\n  client_type: number;\n  js_client_info: {};\n}\n\ninterface Log {\n  source_extension_json_proto3: string;\n  event_time_ms: string;\n}\n/* eslint-enable camelcase */\n\nlet queue: BatchEvent[] = [];\n\nlet isTransportSetup: boolean = false;\n\nexport function setupTransportService(): void {\n  if (!isTransportSetup) {\n    processQueue(INITIAL_SEND_TIME_DELAY_MS);\n    isTransportSetup = true;\n  }\n}\n\n/**\n * Utilized by testing to clean up message queue and un-initialize transport service.\n */\nexport function resetTransportService(): void {\n  isTransportSetup = false;\n  queue = [];\n}\n\nfunction processQueue(timeOffset: number): void {\n  setTimeout(() => {\n    // If there is no remainingTries left, stop retrying.\n    if (remainingTries === 0) {\n      return;\n    }\n\n    // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\n    if (!queue.length) {\n      return processQueue(DEFAULT_SEND_INTERVAL_MS);\n    }\n\n    dispatchQueueEvents();\n  }, timeOffset);\n}\n\nfunction dispatchQueueEvents(): void {\n  // Extract events up to the maximum cap of single logRequest from top of \"official queue\".\n  // The staged events will be used for current logRequest attempt, remaining events will be kept\n  // for next attempt.\n  const staged = queue.splice(0, MAX_EVENT_COUNT_PER_REQUEST);\n\n  /* eslint-disable camelcase */\n  // We will pass the JSON serialized event to the backend.\n  const log_event: Log[] = staged.map(evt => ({\n    source_extension_json_proto3: evt.message,\n    event_time_ms: String(evt.eventTime)\n  }));\n\n  const data: TransportBatchLogFormat = {\n    request_time_ms: String(Date.now()),\n    client_info: {\n      client_type: 1, // 1 is JS\n      js_client_info: {}\n    },\n    log_source: SettingsService.getInstance().logSource,\n    log_event\n  };\n  /* eslint-enable camelcase */\n\n  sendEventsToFl(data, staged).catch(() => {\n    // If the request fails for some reason, add the events that were attempted\n    // back to the primary queue to retry later.\n    queue = [...staged, ...queue];\n    remainingTries--;\n    consoleLogger.info(`Tries left: ${remainingTries}.`);\n    processQueue(DEFAULT_SEND_INTERVAL_MS);\n  });\n}\n\nfunction sendEventsToFl(\n  data: TransportBatchLogFormat,\n  staged: BatchEvent[]\n): Promise<void> {\n  return postToFlEndpoint(data)\n    .then(res => {\n      if (!res.ok) {\n        consoleLogger.info('Call to Firebase backend failed.');\n      }\n      return res.json();\n    })\n    .then(res => {\n      // Find the next call wait time from the response.\n      const transportWait = Number(res.nextRequestWaitMillis);\n      let requestOffset = DEFAULT_SEND_INTERVAL_MS;\n      if (!isNaN(transportWait)) {\n        requestOffset = Math.max(transportWait, requestOffset);\n      }\n\n      // Delete request if response include RESPONSE_ACTION_UNKNOWN or DELETE_REQUEST action.\n      // Otherwise, retry request using normal scheduling if response include RETRY_REQUEST_LATER.\n      const logResponseDetails: LogResponseDetails[] = res.logResponseDetails;\n      if (\n        Array.isArray(logResponseDetails) &&\n        logResponseDetails.length > 0 &&\n        logResponseDetails[0].responseAction === 'RETRY_REQUEST_LATER'\n      ) {\n        queue = [...staged, ...queue];\n        consoleLogger.info(`Retry transport request later.`);\n      }\n\n      remainingTries = DEFAULT_REMAINING_TRIES;\n      // Schedule the next process.\n      processQueue(requestOffset);\n    });\n}\n\nfunction postToFlEndpoint(data: TransportBatchLogFormat): Promise<Response> {\n  const flTransportFullUrl = SettingsService.getInstance().getFlTransportFullUrl();\n  return fetch(flTransportFullUrl, {\n    method: 'POST',\n    body: JSON.stringify(data)\n  });\n}\n\nfunction addToQueue(evt: BatchEvent): void {\n  if (!evt.eventTime || !evt.message) {\n    throw ERROR_FACTORY.create(ErrorCode.INVALID_CC_LOG);\n  }\n  // Add the new event to the queue.\n  queue = [...queue, evt];\n}\n\n/** Log handler for cc service to send the performance logs to the server. */\nexport function transportHandler(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  serializer: (...args: any[]) => string\n): (...args: unknown[]) => void {\n  return (...args) => {\n    const message = serializer(...args);\n    addToQueue({\n      message,\n      eventTime: Date.now()\n    });\n  };\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getIid } from './iid_service';\nimport { NetworkRequest } from '../resources/network_request';\nimport { Trace } from '../resources/trace';\nimport { Api } from './api_service';\nimport { SettingsService } from './settings_service';\nimport {\n  getServiceWorkerStatus,\n  getVisibilityState,\n  VisibilityState,\n  getEffectiveConnectionType\n} from '../utils/attributes_utils';\nimport {\n  isPerfInitialized,\n  getInitializationPromise\n} from './initialization_service';\nimport { transportHandler } from './transport_service';\nimport { SDK_VERSION } from '../constants';\n\nconst enum ResourceType {\n  NetworkRequest,\n  Trace\n}\n\n/* eslint-disable camelcase */\ninterface ApplicationInfo {\n  google_app_id: string;\n  app_instance_id?: string;\n  web_app_info: WebAppInfo;\n  application_process_state: number;\n}\n\ninterface WebAppInfo {\n  sdk_version: string;\n  page_url: string;\n  service_worker_status: number;\n  visibility_state: number;\n  effective_connection_type: number;\n}\n\ninterface PerfNetworkLog {\n  application_info: ApplicationInfo;\n  network_request_metric: NetworkRequestMetric;\n}\n\ninterface PerfTraceLog {\n  application_info: ApplicationInfo;\n  trace_metric: TraceMetric;\n}\n\ninterface NetworkRequestMetric {\n  url: string;\n  http_method: number;\n  http_response_code: number;\n  response_payload_bytes?: number;\n  client_start_time_us?: number;\n  time_to_response_initiated_us?: number;\n  time_to_response_completed_us?: number;\n}\n\ninterface TraceMetric {\n  name: string;\n  is_auto: boolean;\n  client_start_time_us: number;\n  duration_us: number;\n  counters?: { [key: string]: number };\n  custom_attributes?: { [key: string]: string };\n}\n\n/* eslint-enble camelcase */\n\nlet logger: (\n  resource: NetworkRequest | Trace,\n  resourceType: ResourceType\n) => void | undefined;\n// This method is not called before initialization.\nfunction sendLog(\n  resource: NetworkRequest | Trace,\n  resourceType: ResourceType\n): void {\n  if (!logger) {\n    logger = transportHandler(serializer);\n  }\n  logger(resource, resourceType);\n}\n\nexport function logTrace(trace: Trace): void {\n  const settingsService = SettingsService.getInstance();\n  // Do not log if trace is auto generated and instrumentation is disabled.\n  if (!settingsService.instrumentationEnabled && trace.isAuto) {\n    return;\n  }\n  // Do not log if trace is custom and data collection is disabled.\n  if (!settingsService.dataCollectionEnabled && !trace.isAuto) {\n    return;\n  }\n  // Do not log if required apis are not available.\n  if (!Api.getInstance().requiredApisAvailable()) {\n    return;\n  }\n\n  // Only log the page load auto traces if page is visible.\n  if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE) {\n    return;\n  }\n\n  if (isPerfInitialized()) {\n    sendTraceLog(trace);\n  } else {\n    // Custom traces can be used before the initialization but logging\n    // should wait until after.\n\n    getInitializationPromise().then(\n      () => sendTraceLog(trace),\n      () => sendTraceLog(trace)\n    );\n  }\n}\n\nfunction sendTraceLog(trace: Trace): void {\n  if (!getIid()) {\n    return;\n  }\n\n  const settingsService = SettingsService.getInstance();\n  if (\n    !settingsService.loggingEnabled ||\n    !settingsService.logTraceAfterSampling\n  ) {\n    return;\n  }\n\n  setTimeout(() => sendLog(trace, ResourceType.Trace), 0);\n}\n\nexport function logNetworkRequest(networkRequest: NetworkRequest): void {\n  const settingsService = SettingsService.getInstance();\n  // Do not log network requests if instrumentation is disabled.\n  if (!settingsService.instrumentationEnabled) {\n    return;\n  }\n\n  // Do not log the js sdk's call to transport service domain to avoid unnecessary cycle.\n  // Need to blacklist both old and new endpoints to avoid migration gap.\n  const networkRequestUrl = networkRequest.url;\n\n  // Blacklist old log endpoint and new transport endpoint.\n  // Because Performance SDK doesn't instrument requests sent from SDK itself.\n  const logEndpointUrl = settingsService.logEndPointUrl.split('?')[0];\n  const flEndpointUrl = settingsService.flTransportEndpointUrl.split('?')[0];\n  if (\n    networkRequestUrl === logEndpointUrl ||\n    networkRequestUrl === flEndpointUrl\n  ) {\n    return;\n  }\n\n  if (\n    !settingsService.loggingEnabled ||\n    !settingsService.logNetworkAfterSampling\n  ) {\n    return;\n  }\n\n  setTimeout(() => sendLog(networkRequest, ResourceType.NetworkRequest), 0);\n}\n\nfunction serializer(\n  resource: NetworkRequest | Trace,\n  resourceType: ResourceType\n): string {\n  if (resourceType === ResourceType.NetworkRequest) {\n    return serializeNetworkRequest(resource as NetworkRequest);\n  }\n  return serializeTrace(resource as Trace);\n}\n\nfunction serializeNetworkRequest(networkRequest: NetworkRequest): string {\n  const networkRequestMetric: NetworkRequestMetric = {\n    url: networkRequest.url,\n    http_method: networkRequest.httpMethod || 0,\n    http_response_code: 200,\n    response_payload_bytes: networkRequest.responsePayloadBytes,\n    client_start_time_us: networkRequest.startTimeUs,\n    time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\n    time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\n  };\n  const perfMetric: PerfNetworkLog = {\n    application_info: getApplicationInfo(),\n    network_request_metric: networkRequestMetric\n  };\n  return JSON.stringify(perfMetric);\n}\n\nfunction serializeTrace(trace: Trace): string {\n  const traceMetric: TraceMetric = {\n    name: trace.name,\n    is_auto: trace.isAuto,\n    client_start_time_us: trace.startTimeUs,\n    duration_us: trace.durationUs\n  };\n\n  if (Object.keys(trace.counters).length !== 0) {\n    traceMetric.counters = trace.counters;\n  }\n  const customAttributes = trace.getAttributes();\n  if (Object.keys(customAttributes).length !== 0) {\n    traceMetric.custom_attributes = customAttributes;\n  }\n\n  const perfMetric: PerfTraceLog = {\n    application_info: getApplicationInfo(),\n    trace_metric: traceMetric\n  };\n  return JSON.stringify(perfMetric);\n}\n\nfunction getApplicationInfo(): ApplicationInfo {\n  return {\n    google_app_id: SettingsService.getInstance().getAppId(),\n    app_instance_id: getIid(),\n    web_app_info: {\n      sdk_version: SDK_VERSION,\n      page_url: Api.getInstance().getUrl(),\n      service_worker_status: getServiceWorkerStatus(),\n      visibility_state: getVisibilityState(),\n      effective_connection_type: getEffectiveConnectionType()\n    },\n    application_process_state: 0\n  };\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FIRST_PAINT_COUNTER_NAME,\n  FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n  FIRST_INPUT_DELAY_COUNTER_NAME,\n  OOB_TRACE_PAGE_LOAD_PREFIX\n} from '../constants';\nimport { consoleLogger } from '../utils/console_logger';\n\nconst MAX_METRIC_NAME_LENGTH = 100;\nconst RESERVED_AUTO_PREFIX = '_';\nconst oobMetrics = [\n  FIRST_PAINT_COUNTER_NAME,\n  FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n  FIRST_INPUT_DELAY_COUNTER_NAME\n];\n\n/**\n * Returns true if the metric is custom and does not start with reserved prefix, or if\n * the metric is one of out of the box page load trace metrics.\n */\nexport function isValidMetricName(name: string, traceName?: string): boolean {\n  if (name.length === 0 || name.length > MAX_METRIC_NAME_LENGTH) {\n    return false;\n  }\n  return (\n    (traceName &&\n      traceName.startsWith(OOB_TRACE_PAGE_LOAD_PREFIX) &&\n      oobMetrics.indexOf(name) > -1) ||\n    !name.startsWith(RESERVED_AUTO_PREFIX)\n  );\n}\n\n/**\n * Converts the provided value to an integer value to be used in case of a metric.\n * @param providedValue Provided number value of the metric that needs to be converted to an integer.\n *\n * @returns Converted integer number to be set for the metric.\n */\nexport function convertMetricValueToInteger(providedValue: number): number {\n  const valueAsInteger: number = Math.floor(providedValue);\n  if (valueAsInteger < providedValue) {\n    consoleLogger.info(\n      `Metric value should be an Integer, setting the value as : ${valueAsInteger}.`\n    );\n  }\n  return valueAsInteger;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  TRACE_START_MARK_PREFIX,\n  TRACE_STOP_MARK_PREFIX,\n  TRACE_MEASURE_PREFIX,\n  OOB_TRACE_PAGE_LOAD_PREFIX,\n  FIRST_PAINT_COUNTER_NAME,\n  FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n  FIRST_INPUT_DELAY_COUNTER_NAME\n} from '../constants';\nimport { Api } from '../services/api_service';\nimport { logTrace } from '../services/perf_logger';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\nimport {\n  isValidCustomAttributeName,\n  isValidCustomAttributeValue\n} from '../utils/attributes_utils';\nimport {\n  isValidMetricName,\n  convertMetricValueToInteger\n} from '../utils/metric_utils';\nimport { PerformanceTrace } from '@firebase/performance-types';\n\nconst enum TraceState {\n  UNINITIALIZED = 1,\n  RUNNING,\n  TERMINATED\n}\n\nexport class Trace implements PerformanceTrace {\n  private state: TraceState = TraceState.UNINITIALIZED;\n  startTimeUs!: number;\n  durationUs!: number;\n  private customAttributes: { [key: string]: string } = {};\n  counters: { [counterName: string]: number } = {};\n  private api = Api.getInstance();\n  private randomId = Math.floor(Math.random() * 1000000);\n  private traceStartMark!: string;\n  private traceStopMark!: string;\n  private traceMeasure!: string;\n\n  /**\n   * @param name The name of the trace.\n   * @param isAuto If the trace is auto-instrumented.\n   * @param traceMeasureName The name of the measure marker in user timing specification. This field\n   * is only set when the trace is built for logging when the user directly uses the user timing\n   * api (performance.mark and performance.measure).\n   */\n  constructor(\n    readonly name: string,\n    readonly isAuto = false,\n    traceMeasureName?: string\n  ) {\n    if (!this.isAuto) {\n      this.traceStartMark = `${TRACE_START_MARK_PREFIX}-${this.randomId}-${this.name}`;\n      this.traceStopMark = `${TRACE_STOP_MARK_PREFIX}-${this.randomId}-${this.name}`;\n      this.traceMeasure =\n        traceMeasureName ||\n        `${TRACE_MEASURE_PREFIX}-${this.randomId}-${this.name}`;\n\n      if (traceMeasureName) {\n        // For the case of direct user timing traces, no start stop will happen. The measure object\n        // is already available.\n        this.calculateTraceMetrics();\n      }\n    }\n  }\n\n  /**\n   * Starts a trace. The measurement of the duration starts at this point.\n   */\n  start(): void {\n    if (this.state !== TraceState.UNINITIALIZED) {\n      throw ERROR_FACTORY.create(ErrorCode.TRACE_STARTED_BEFORE, {\n        traceName: this.name\n      });\n    }\n    this.api.mark(this.traceStartMark);\n    this.state = TraceState.RUNNING;\n  }\n\n  /**\n   * Stops the trace. The measurement of the duration of the trace stops at this point and trace\n   * is logged.\n   */\n  stop(): void {\n    if (this.state !== TraceState.RUNNING) {\n      throw ERROR_FACTORY.create(ErrorCode.TRACE_STOPPED_BEFORE, {\n        traceName: this.name\n      });\n    }\n    this.state = TraceState.TERMINATED;\n    this.api.mark(this.traceStopMark);\n    this.api.measure(\n      this.traceMeasure,\n      this.traceStartMark,\n      this.traceStopMark\n    );\n    this.calculateTraceMetrics();\n    logTrace(this);\n  }\n\n  /**\n   * Records a trace with predetermined values. If this method is used a trace is created and logged\n   * directly. No need to use start and stop methods.\n   * @param startTime Trace start time since epoch in millisec\n   * @param duration The duraction of the trace in millisec\n   * @param options An object which can optionally hold maps of custom metrics and custom attributes\n   */\n  record(\n    startTime: number,\n    duration: number,\n    options?: {\n      metrics?: { [key: string]: number };\n      attributes?: { [key: string]: string };\n    }\n  ): void {\n    if (startTime <= 0) {\n      throw ERROR_FACTORY.create(ErrorCode.NONPOSITIVE_TRACE_START_TIME, {\n        traceName: this.name\n      });\n    }\n    if (duration <= 0) {\n      throw ERROR_FACTORY.create(ErrorCode.NONPOSITIVE_TRACE_DURATION, {\n        traceName: this.name\n      });\n    }\n\n    this.durationUs = Math.floor(duration * 1000);\n    this.startTimeUs = Math.floor(startTime * 1000);\n    if (options && options.attributes) {\n      this.customAttributes = { ...options.attributes };\n    }\n    if (options && options.metrics) {\n      for (const metric of Object.keys(options.metrics)) {\n        if (!isNaN(Number(options.metrics[metric]))) {\n          this.counters[metric] = Number(Math.floor(options.metrics[metric]));\n        }\n      }\n    }\n    logTrace(this);\n  }\n\n  /**\n   * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\n   * custom metric if one with the given name does not exist. The value will be floored down to an\n   * integer.\n   * @param counter Name of the custom metric\n   * @param numAsInteger Increment by value\n   */\n  incrementMetric(counter: string, numAsInteger = 1): void {\n    if (this.counters[counter] === undefined) {\n      this.putMetric(counter, numAsInteger);\n    } else {\n      this.putMetric(counter, this.counters[counter] + numAsInteger);\n    }\n  }\n\n  /**\n   * Sets a custom metric to a specified value. Will create a new custom metric if one with the\n   * given name does not exist. The value will be floored down to an integer.\n   * @param counter Name of the custom metric\n   * @param numAsInteger Set custom metric to this value\n   */\n  putMetric(counter: string, numAsInteger: number): void {\n    if (isValidMetricName(counter, this.name)) {\n      this.counters[counter] = convertMetricValueToInteger(numAsInteger);\n    } else {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_CUSTOM_METRIC_NAME, {\n        customMetricName: counter\n      });\n    }\n  }\n\n  /**\n   * Returns the value of the custom metric by that name. If a custom metric with that name does\n   * not exist will return zero.\n   * @param counter\n   */\n  getMetric(counter: string): number {\n    return this.counters[counter] || 0;\n  }\n\n  /**\n   * Sets a custom attribute of a trace to a certain value.\n   * @param attr\n   * @param value\n   */\n  putAttribute(attr: string, value: string): void {\n    const isValidName = isValidCustomAttributeName(attr);\n    const isValidValue = isValidCustomAttributeValue(value);\n    if (isValidName && isValidValue) {\n      this.customAttributes[attr] = value;\n      return;\n    }\n    // Throw appropriate error when the attribute name or value is invalid.\n    if (!isValidName) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_ATTRIBUTE_NAME, {\n        attributeName: attr\n      });\n    }\n    if (!isValidValue) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_ATTRIBUTE_VALUE, {\n        attributeValue: value\n      });\n    }\n  }\n\n  /**\n   * Retrieves the value a custom attribute of a trace is set to.\n   * @param attr\n   */\n  getAttribute(attr: string): string | undefined {\n    return this.customAttributes[attr];\n  }\n\n  removeAttribute(attr: string): void {\n    if (this.customAttributes[attr] === undefined) {\n      return;\n    }\n    delete this.customAttributes[attr];\n  }\n\n  getAttributes(): { [key: string]: string } {\n    return { ...this.customAttributes };\n  }\n\n  private setStartTime(startTime: number): void {\n    this.startTimeUs = startTime;\n  }\n\n  private setDuration(duration: number): void {\n    this.durationUs = duration;\n  }\n\n  /**\n   * Calculates and assigns the duration and start time of the trace using the measure performance\n   * entry.\n   */\n  private calculateTraceMetrics(): void {\n    const perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\n    const perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\n    if (perfMeasureEntry) {\n      this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\n      this.startTimeUs = Math.floor(\n        (perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000\n      );\n    }\n  }\n\n  /**\n   * @param navigationTimings A single element array which contains the navigationTIming object of\n   * the page load\n   * @param paintTimings A array which contains paintTiming object of the page load\n   * @param firstInputDelay First input delay in millisec\n   */\n  static createOobTrace(\n    navigationTimings: PerformanceNavigationTiming[],\n    paintTimings: PerformanceEntry[],\n    firstInputDelay?: number\n  ): void {\n    const route = Api.getInstance().getUrl();\n    if (!route) {\n      return;\n    }\n    const trace = new Trace(OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\n    const timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\n    trace.setStartTime(timeOriginUs);\n\n    // navigationTimings includes only one element.\n    if (navigationTimings && navigationTimings[0]) {\n      trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\n      trace.putMetric(\n        'domInteractive',\n        Math.floor(navigationTimings[0].domInteractive * 1000)\n      );\n      trace.putMetric(\n        'domContentLoadedEventEnd',\n        Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000)\n      );\n      trace.putMetric(\n        'loadEventEnd',\n        Math.floor(navigationTimings[0].loadEventEnd * 1000)\n      );\n    }\n\n    const FIRST_PAINT = 'first-paint';\n    const FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\n    if (paintTimings) {\n      const firstPaint = paintTimings.find(\n        paintObject => paintObject.name === FIRST_PAINT\n      );\n      if (firstPaint && firstPaint.startTime) {\n        trace.putMetric(\n          FIRST_PAINT_COUNTER_NAME,\n          Math.floor(firstPaint.startTime * 1000)\n        );\n      }\n      const firstContentfulPaint = paintTimings.find(\n        paintObject => paintObject.name === FIRST_CONTENTFUL_PAINT\n      );\n      if (firstContentfulPaint && firstContentfulPaint.startTime) {\n        trace.putMetric(\n          FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n          Math.floor(firstContentfulPaint.startTime * 1000)\n        );\n      }\n\n      if (firstInputDelay) {\n        trace.putMetric(\n          FIRST_INPUT_DELAY_COUNTER_NAME,\n          Math.floor(firstInputDelay * 1000)\n        );\n      }\n    }\n\n    logTrace(trace);\n  }\n\n  static createUserTimingTrace(measureName: string): void {\n    const trace = new Trace(measureName, false, measureName);\n    logTrace(trace);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Api } from '../services/api_service';\nimport { logNetworkRequest } from '../services/perf_logger';\n\n// The order of values of this enum should not be changed.\nexport const enum HttpMethod {\n  HTTP_METHOD_UNKNOWN = 0,\n  GET = 1,\n  PUT = 2,\n  POST = 3,\n  DELETE = 4,\n  HEAD = 5,\n  PATCH = 6,\n  OPTIONS = 7,\n  TRACE = 8,\n  CONNECT = 9\n}\n\n// Durations are in microseconds.\nexport interface NetworkRequest {\n  url: string;\n  httpMethod?: HttpMethod;\n  requestPayloadBytes?: number;\n  responsePayloadBytes?: number;\n  httpResponseCode?: number;\n  responseContentType?: string;\n  startTimeUs?: number;\n  timeToRequestCompletedUs?: number;\n  timeToResponseInitiatedUs?: number;\n  timeToResponseCompletedUs?: number;\n}\n\nexport function createNetworkRequestEntry(entry: PerformanceEntry): void {\n  const performanceEntry = entry as PerformanceResourceTiming;\n  if (!performanceEntry || performanceEntry.responseStart === undefined) {\n    return;\n  }\n  const timeOrigin = Api.getInstance().getTimeOrigin();\n  const startTimeUs = Math.floor(\n    (performanceEntry.startTime + timeOrigin) * 1000\n  );\n  const timeToResponseInitiatedUs = performanceEntry.responseStart\n    ? Math.floor(\n        (performanceEntry.responseStart - performanceEntry.startTime) * 1000\n      )\n    : undefined;\n  const timeToResponseCompletedUs = Math.floor(\n    (performanceEntry.responseEnd - performanceEntry.startTime) * 1000\n  );\n  // Remove the query params from logged network request url.\n  const url = performanceEntry.name && performanceEntry.name.split('?')[0];\n  const networkRequest: NetworkRequest = {\n    url,\n    responsePayloadBytes: performanceEntry.transferSize,\n    startTimeUs,\n    timeToResponseInitiatedUs,\n    timeToResponseCompletedUs\n  };\n\n  logNetworkRequest(networkRequest);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Api } from './api_service';\nimport { Trace } from '../resources/trace';\nimport { createNetworkRequestEntry } from '../resources/network_request';\nimport { TRACE_MEASURE_PREFIX } from '../constants';\nimport { getIid } from './iid_service';\n\nconst FID_WAIT_TIME_MS = 5000;\n\nexport function setupOobResources(): void {\n  // Do not initialize unless iid is available.\n  if (!getIid()) {\n    return;\n  }\n  // The load event might not have fired yet, and that means performance navigation timing\n  // object has a duration of 0. The setup should run after all current tasks in js queue.\n  setTimeout(() => setupOobTraces(), 0);\n  setTimeout(() => setupNetworkRequests(), 0);\n  setTimeout(() => setupUserTimingTraces(), 0);\n}\n\nfunction setupNetworkRequests(): void {\n  const api = Api.getInstance();\n  const resources = api.getEntriesByType('resource');\n  for (const resource of resources) {\n    createNetworkRequestEntry(resource);\n  }\n  api.setupObserver('resource', createNetworkRequestEntry);\n}\n\nfunction setupOobTraces(): void {\n  const api = Api.getInstance();\n  const navigationTimings = api.getEntriesByType(\n    'navigation'\n  ) as PerformanceNavigationTiming[];\n  const paintTimings = api.getEntriesByType('paint');\n  // If First Input Desly polyfill is added to the page, report the fid value.\n  // https://github.com/GoogleChromeLabs/first-input-delay\n  if (api.onFirstInputDelay) {\n    // If the fid call back is not called for certain time, continue without it.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let timeoutId: any = setTimeout(() => {\n      Trace.createOobTrace(navigationTimings, paintTimings);\n      timeoutId = undefined;\n    }, FID_WAIT_TIME_MS);\n    api.onFirstInputDelay((fid: number) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n        Trace.createOobTrace(navigationTimings, paintTimings, fid);\n      }\n    });\n  } else {\n    Trace.createOobTrace(navigationTimings, paintTimings);\n  }\n}\n\nfunction setupUserTimingTraces(): void {\n  const api = Api.getInstance();\n  // Run through the measure performance entries collected up to this point.\n  const measures = api.getEntriesByType('measure');\n  for (const measure of measures) {\n    createUserTimingTrace(measure);\n  }\n  // Setup an observer to capture the measures from this point on.\n  api.setupObserver('measure', createUserTimingTrace);\n}\n\nfunction createUserTimingTrace(measure: PerformanceEntry): void {\n  const measureName = measure.name;\n  // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\n  if (\n    measureName.substring(0, TRACE_MEASURE_PREFIX.length) ===\n    TRACE_MEASURE_PREFIX\n  ) {\n    return;\n  }\n  Trace.createUserTimingTrace(measureName);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Trace } from '../resources/trace';\nimport { setupOobResources } from '../services/oob_resources_service';\nimport { SettingsService } from '../services/settings_service';\nimport { getInitializationPromise } from '../services/initialization_service';\nimport { Api } from '../services/api_service';\nimport { FirebaseApp } from '@firebase/app-types';\nimport { FirebasePerformance } from '@firebase/performance-types';\nimport { setupTransportService } from '../services/transport_service';\nimport { validateIndexedDBOpenable } from '@firebase/util';\nimport { consoleLogger } from '../utils/console_logger';\nexport class PerformanceController implements FirebasePerformance {\n  constructor(readonly app: FirebaseApp) {\n    if (Api.getInstance().requiredApisAvailable()) {\n      validateIndexedDBOpenable()\n        .then(isAvailable => {\n          if (isAvailable) {\n            setupTransportService();\n            getInitializationPromise().then(\n              setupOobResources,\n              setupOobResources\n            );\n          }\n        })\n        .catch(error => {\n          consoleLogger.info(`Environment doesn't support IndexedDB: ${error}`);\n        });\n    }\n  }\n\n  trace(name: string): Trace {\n    return new Trace(name);\n  }\n\n  set instrumentationEnabled(val: boolean) {\n    SettingsService.getInstance().instrumentationEnabled = val;\n  }\n  get instrumentationEnabled(): boolean {\n    return SettingsService.getInstance().instrumentationEnabled;\n  }\n\n  set dataCollectionEnabled(val: boolean) {\n    SettingsService.getInstance().dataCollectionEnabled = val;\n  }\n  get dataCollectionEnabled(): boolean {\n    return SettingsService.getInstance().dataCollectionEnabled;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { LoginComponent } from './login.component';\nimport { LoginRoutingModule } from './login-routing.module';\nimport { ForgetPasswordComponent } from './components/forget-password/forget-password.component';\nimport { RegisterComponent } from './components/register/register.component';\n\n\n@NgModule({\n  declarations: [LoginComponent, ForgetPasswordComponent, RegisterComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    LoginRoutingModule,\n  ]\n})\nexport class LoginModule { }\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { StorageCache } from '../storage/storage_cache';\nimport {\n  FetchResponse,\n  RemoteConfigFetchClient,\n  FetchRequest\n} from './remote_config_fetch_client';\nimport { Storage } from '../storage/storage';\nimport { Logger } from '@firebase/logger';\n\n/**\n * Implements the {@link RemoteConfigClient} abstraction with success response caching.\n *\n * <p>Comparable to the browser's Cache API for responses, but the Cache API requires a Service\n * Worker, which requires HTTPS, which would significantly complicate SDK installation. Also, the\n * Cache API doesn't support matching entries by time.\n */\nexport class CachingClient implements RemoteConfigFetchClient {\n  constructor(\n    private readonly client: RemoteConfigFetchClient,\n    private readonly storage: Storage,\n    private readonly storageCache: StorageCache,\n    private readonly logger: Logger\n  ) {}\n\n  /**\n   * Returns true if the age of the cached fetched configs is less than or equal to\n   * {@link Settings#minimumFetchIntervalInSeconds}.\n   *\n   * <p>This is comparable to passing `headers = { 'Cache-Control': max-age <maxAge> }` to the\n   * native Fetch API.\n   *\n   * <p>Visible for testing.\n   */\n  isCachedDataFresh(\n    cacheMaxAgeMillis: number,\n    lastSuccessfulFetchTimestampMillis: number | undefined\n  ): boolean {\n    // Cache can only be fresh if it's populated.\n    if (!lastSuccessfulFetchTimestampMillis) {\n      this.logger.debug('Config fetch cache check. Cache unpopulated.');\n      return false;\n    }\n\n    // Calculates age of cache entry.\n    const cacheAgeMillis = Date.now() - lastSuccessfulFetchTimestampMillis;\n\n    const isCachedDataFresh = cacheAgeMillis <= cacheMaxAgeMillis;\n\n    this.logger.debug(\n      'Config fetch cache check.' +\n        ` Cache age millis: ${cacheAgeMillis}.` +\n        ` Cache max age millis (minimumFetchIntervalMillis setting): ${cacheMaxAgeMillis}.` +\n        ` Is cache hit: ${isCachedDataFresh}.`\n    );\n\n    return isCachedDataFresh;\n  }\n\n  async fetch(request: FetchRequest): Promise<FetchResponse> {\n    // Reads from persisted storage to avoid cache miss if callers don't wait on initialization.\n    const [\n      lastSuccessfulFetchTimestampMillis,\n      lastSuccessfulFetchResponse\n    ] = await Promise.all([\n      this.storage.getLastSuccessfulFetchTimestampMillis(),\n      this.storage.getLastSuccessfulFetchResponse()\n    ]);\n\n    // Exits early on cache hit.\n    if (\n      lastSuccessfulFetchResponse &&\n      this.isCachedDataFresh(\n        request.cacheMaxAgeMillis,\n        lastSuccessfulFetchTimestampMillis\n      )\n    ) {\n      return lastSuccessfulFetchResponse;\n    }\n\n    // Deviates from pure decorator by not honoring a passed ETag since we don't have a public API\n    // that allows the caller to pass an ETag.\n    request.eTag =\n      lastSuccessfulFetchResponse && lastSuccessfulFetchResponse.eTag;\n\n    // Falls back to service on cache miss.\n    const response = await this.client.fetch(request);\n\n    // Fetch throws for non-success responses, so success is guaranteed here.\n\n    const storageOperations = [\n      // Uses write-through cache for consistency with synchronous public API.\n      this.storageCache.setLastSuccessfulFetchTimestampMillis(Date.now())\n    ];\n\n    if (response.status === 200) {\n      // Caches response only if it has changed, ie non-304 responses.\n      storageOperations.push(\n        this.storage.setLastSuccessfulFetchResponse(response)\n      );\n    }\n\n    await Promise.all(storageOperations);\n\n    return response;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Attempts to get the most accurate browser language setting.\n *\n * <p>Adapted from getUserLanguage in packages/auth/src/utils.js for TypeScript.\n *\n * <p>Defers default language specification to server logic for consistency.\n *\n * @param navigatorLanguage Enables tests to override read-only {@link NavigatorLanguage}.\n */\nexport function getUserLanguage(\n  navigatorLanguage: NavigatorLanguage = navigator\n): string {\n  return (\n    // Most reliable, but only supported in Chrome/Firefox.\n    (navigatorLanguage.languages && navigatorLanguage.languages[0]) ||\n    // Supported in most browsers, but returns the language of the browser\n    // UI, not the language set in browser settings.\n    navigatorLanguage.language\n    // Polyfill otherwise.\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseInstallations } from '@firebase/installations-types';\nimport {\n  FetchResponse,\n  RemoteConfigFetchClient,\n  FirebaseRemoteConfigObject,\n  FetchRequest\n} from './remote_config_fetch_client';\nimport { ERROR_FACTORY, ErrorCode } from '../errors';\nimport { getUserLanguage } from '../language';\n\n/**\n * Defines request body parameters required to call the fetch API:\n * https://firebase.google.com/docs/reference/remote-config/rest\n *\n * <p>Not exported because this file encapsulates REST API specifics.\n *\n * <p>Not passing User Properties because Analytics' source of truth on Web is server-side.\n */\ninterface FetchRequestBody {\n  // Disables camelcase linting for request body params.\n  /* eslint-disable camelcase*/\n  sdk_version: string;\n  app_instance_id: string;\n  app_instance_id_token: string;\n  app_id: string;\n  language_code: string;\n  /* eslint-enable camelcase */\n}\n\n/**\n * Implements the Client abstraction for the Remote Config REST API.\n */\nexport class RestClient implements RemoteConfigFetchClient {\n  constructor(\n    private readonly firebaseInstallations: FirebaseInstallations,\n    private readonly sdkVersion: string,\n    private readonly namespace: string,\n    private readonly projectId: string,\n    private readonly apiKey: string,\n    private readonly appId: string\n  ) {}\n\n  /**\n   * Fetches from the Remote Config REST API.\n   *\n   * @throws a {@link ErrorCode.FETCH_NETWORK} error if {@link GlobalFetch#fetch} can't\n   * connect to the network.\n   * @throws a {@link ErrorCode.FETCH_PARSE} error if {@link Response#json} can't parse the\n   * fetch response.\n   * @throws a {@link ErrorCode.FETCH_STATUS} error if the service returns an HTTP error status.\n   */\n  async fetch(request: FetchRequest): Promise<FetchResponse> {\n    const [installationId, installationToken] = await Promise.all([\n      this.firebaseInstallations.getId(),\n      this.firebaseInstallations.getToken()\n    ]);\n\n    const urlBase =\n      window.FIREBASE_REMOTE_CONFIG_URL_BASE ||\n      'https://firebaseremoteconfig.googleapis.com';\n\n    const url = `${urlBase}/v1/projects/${this.projectId}/namespaces/${this.namespace}:fetch?key=${this.apiKey}`;\n\n    const headers = {\n      'Content-Type': 'application/json',\n      'Content-Encoding': 'gzip',\n      // Deviates from pure decorator by not passing max-age header since we don't currently have\n      // service behavior using that header.\n      'If-None-Match': request.eTag || '*'\n    };\n\n    const requestBody: FetchRequestBody = {\n      /* eslint-disable camelcase */\n      sdk_version: this.sdkVersion,\n      app_instance_id: installationId,\n      app_instance_id_token: installationToken,\n      app_id: this.appId,\n      language_code: getUserLanguage()\n      /* eslint-enable camelcase */\n    };\n\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(requestBody)\n    };\n\n    // This logic isn't REST-specific, but shimming abort logic isn't worth another decorator.\n    const fetchPromise = fetch(url, options);\n    const timeoutPromise = new Promise((_resolve, reject) => {\n      // Maps async event listener to Promise API.\n      request.signal.addEventListener(() => {\n        // Emulates https://heycam.github.io/webidl/#aborterror\n        const error = new Error('The operation was aborted.');\n        error.name = 'AbortError';\n        reject(error);\n      });\n    });\n\n    let response;\n    try {\n      await Promise.race([fetchPromise, timeoutPromise]);\n      response = await fetchPromise;\n    } catch (originalError) {\n      let errorCode = ErrorCode.FETCH_NETWORK;\n      if (originalError.name === 'AbortError') {\n        errorCode = ErrorCode.FETCH_TIMEOUT;\n      }\n      throw ERROR_FACTORY.create(errorCode, {\n        originalErrorMessage: originalError.message\n      });\n    }\n\n    let status = response.status;\n\n    // Normalizes nullable header to optional.\n    const responseEtag = response.headers.get('ETag') || undefined;\n\n    let config: FirebaseRemoteConfigObject | undefined;\n    let state: string | undefined;\n\n    // JSON parsing throws SyntaxError if the response body isn't a JSON string.\n    // Requesting application/json and checking for a 200 ensures there's JSON data.\n    if (response.status === 200) {\n      let responseBody;\n      try {\n        responseBody = await response.json();\n      } catch (originalError) {\n        throw ERROR_FACTORY.create(ErrorCode.FETCH_PARSE, {\n          originalErrorMessage: originalError.message\n        });\n      }\n      config = responseBody['entries'];\n      state = responseBody['state'];\n    }\n\n    // Normalizes based on legacy state.\n    if (state === 'INSTANCE_STATE_UNSPECIFIED') {\n      status = 500;\n    } else if (state === 'NO_CHANGE') {\n      status = 304;\n    } else if (state === 'NO_TEMPLATE' || state === 'EMPTY_CONFIG') {\n      // These cases can be fixed remotely, so normalize to safe value.\n      config = {};\n    }\n\n    // Normalize to exception-based control flow for non-success cases.\n    // Encapsulates HTTP specifics in this class as much as possible. Status is still the best for\n    // differentiating success states (200 from 304; the state body param is undefined in a\n    // standard 304).\n    if (status !== 304 && status !== 200) {\n      throw ERROR_FACTORY.create(ErrorCode.FETCH_STATUS, {\n        httpStatus: status\n      });\n    }\n\n    return { status, eTag: responseEtag, config };\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Defines a client, as in https://en.wikipedia.org/wiki/Client%E2%80%93server_model, for the\n * Remote Config server (https://firebase.google.com/docs/reference/remote-config/rest).\n *\n * <p>Abstracts throttle, response cache and network implementation details.\n *\n * <p>Modeled after the native {@link GlobalFetch} interface, which is relatively modern and\n * convenient, but simplified for Remote Config's use case.\n *\n * Disambiguation: {@link GlobalFetch} interface and the Remote Config service define \"fetch\"\n * methods. The RestClient uses the former to make HTTP calls. This interface abstracts the latter.\n */\nexport interface RemoteConfigFetchClient {\n  /**\n   * @throws if response status is not 200 or 304.\n   */\n  fetch(request: FetchRequest): Promise<FetchResponse>;\n}\n\n/**\n * Defines a self-descriptive reference for config key-value pairs.\n */\nexport interface FirebaseRemoteConfigObject {\n  [key: string]: string;\n}\n\n/**\n * Shims a minimal AbortSignal.\n *\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\n * swapped out if/when we do.\n */\nexport class RemoteConfigAbortSignal {\n  listeners: Array<() => void> = [];\n  addEventListener(listener: () => void): void {\n    this.listeners.push(listener);\n  }\n  abort(): void {\n    this.listeners.forEach(listener => listener());\n  }\n}\n\n/**\n * Defines per-request inputs for the Remote Config fetch request.\n *\n * <p>Modeled after the native {@link Request} interface, but simplified for Remote Config's\n * use case.\n */\nexport interface FetchRequest {\n  /**\n   * Uses cached config if it is younger than this age.\n   *\n   * <p>Required because it's defined by settings, which always have a value.\n   *\n   * <p>Comparable to passing `headers = { 'Cache-Control': max-age <maxAge> }` to the native\n   * Fetch API.\n   */\n  cacheMaxAgeMillis: number;\n\n  /**\n   * An event bus for the signal to abort a request.\n   *\n   * <p>Required because all requests should be abortable.\n   *\n   * <p>Comparable to the native\n   * Fetch API's \"signal\" field on its request configuration object\n   * https://fetch.spec.whatwg.org/#dom-requestinit-signal.\n   *\n   * <p>Disambiguation: Remote Config commonly refers to API inputs as\n   * \"signals\". See the private ConfigFetchRequestBody interface for those:\n   * http://google3/firebase/remote_config/web/src/core/rest_client.ts?l=14&rcl=255515243.\n   */\n  signal: RemoteConfigAbortSignal;\n\n  /**\n   * The ETag header value from the last response.\n   *\n   * <p>Optional in case this is the first request.\n   *\n   * <p>Comparable to passing `headers = { 'If-None-Match': <eTag> }` to the native Fetch API.\n   */\n  eTag?: string;\n}\n\n/**\n * Defines a successful response (200 or 304).\n *\n * <p>Modeled after the native {@link Response} interface, but simplified for Remote Config's\n * use case.\n */\nexport interface FetchResponse {\n  /**\n   * The HTTP status, which is useful for differentiating success responses with data from\n   * those without.\n   *\n   * <p>{@link RemoteConfigClient} is modeled after the native {@link GlobalFetch} interface, so\n   * HTTP status is first-class.\n   *\n   * <p>Disambiguation: the fetch response returns a legacy \"state\" value that is redundant with the\n   * HTTP status code. The former is normalized into the latter.\n   */\n  status: number;\n\n  /**\n   * Defines the ETag response header value.\n   *\n   * <p>Only defined for 200 and 304 responses.\n   */\n  eTag?: string;\n\n  /**\n   * Defines the map of parameters returned as \"entries\" in the fetch response body.\n   *\n   * <p>Only defined for 200 responses.\n   */\n  config?: FirebaseRemoteConfigObject;\n\n  // Note: we're not extracting experiment metadata until\n  // ABT and Analytics have Web SDKs.\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Value as ValueType, ValueSource } from '@firebase/remote-config-types';\n\nconst DEFAULT_VALUE_FOR_BOOLEAN = false;\nconst DEFAULT_VALUE_FOR_STRING = '';\nconst DEFAULT_VALUE_FOR_NUMBER = 0;\n\nconst BOOLEAN_TRUTHY_VALUES = ['1', 'true', 't', 'yes', 'y', 'on'];\n\nexport class Value implements ValueType {\n  constructor(\n    private readonly _source: ValueSource,\n    private readonly _value: string = DEFAULT_VALUE_FOR_STRING\n  ) {}\n\n  asString(): string {\n    return this._value;\n  }\n\n  asBoolean(): boolean {\n    if (this._source === 'static') {\n      return DEFAULT_VALUE_FOR_BOOLEAN;\n    }\n    return BOOLEAN_TRUTHY_VALUES.indexOf(this._value.toLowerCase()) >= 0;\n  }\n\n  asNumber(): number {\n    if (this._source === 'static') {\n      return DEFAULT_VALUE_FOR_NUMBER;\n    }\n    let num = Number(this._value);\n    if (isNaN(num)) {\n      num = DEFAULT_VALUE_FOR_NUMBER;\n    }\n    return num;\n  }\n\n  getSource(): ValueSource {\n    return this._source;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport {\n  RemoteConfig as RemoteConfigType,\n  FetchStatus,\n  Settings,\n  Value as ValueType,\n  LogLevel as RemoteConfigLogLevel\n} from '@firebase/remote-config-types';\nimport { StorageCache } from './storage/storage_cache';\nimport {\n  RemoteConfigFetchClient,\n  RemoteConfigAbortSignal\n} from './client/remote_config_fetch_client';\nimport { Value } from './value';\nimport { ErrorCode, hasErrorCode } from './errors';\nimport { Storage } from './storage/storage';\nimport { Logger, LogLevel as FirebaseLogLevel } from '@firebase/logger';\n\nconst DEFAULT_FETCH_TIMEOUT_MILLIS = 60 * 1000; // One minute\nconst DEFAULT_CACHE_MAX_AGE_MILLIS = 12 * 60 * 60 * 1000; // Twelve hours.\n\n/**\n * Encapsulates business logic mapping network and storage dependencies to the public SDK API.\n *\n * See {@link https://github.com/FirebasePrivate/firebase-js-sdk/blob/master/packages/firebase/index.d.ts|interface documentation} for method descriptions.\n */\nexport class RemoteConfig implements RemoteConfigType {\n  // Tracks completion of initialization promise.\n  private _isInitializationComplete = false;\n\n  // De-duplicates initialization calls.\n  private _initializePromise?: Promise<void>;\n\n  settings: Settings = {\n    fetchTimeoutMillis: DEFAULT_FETCH_TIMEOUT_MILLIS,\n    minimumFetchIntervalMillis: DEFAULT_CACHE_MAX_AGE_MILLIS\n  };\n\n  defaultConfig: { [key: string]: string | number | boolean } = {};\n\n  // Based on packages/firestore/src/util/log.ts but not static because we need per-instance levels\n  // to differentiate 2p and 3p use-cases.\n  setLogLevel(logLevel: RemoteConfigLogLevel): void {\n    switch (logLevel) {\n      case 'debug':\n        this._logger.logLevel = FirebaseLogLevel.DEBUG;\n        break;\n      case 'silent':\n        this._logger.logLevel = FirebaseLogLevel.SILENT;\n        break;\n      default:\n        this._logger.logLevel = FirebaseLogLevel.ERROR;\n    }\n  }\n\n  get fetchTimeMillis(): number {\n    return this._storageCache.getLastSuccessfulFetchTimestampMillis() || -1;\n  }\n\n  get lastFetchStatus(): FetchStatus {\n    return this._storageCache.getLastFetchStatus() || 'no-fetch-yet';\n  }\n\n  constructor(\n    // Required by FirebaseServiceFactory interface.\n    readonly app: FirebaseApp,\n    // JS doesn't support private yet\n    // (https://github.com/tc39/proposal-class-fields#private-fields), so we hint using an\n    // underscore prefix.\n    private readonly _client: RemoteConfigFetchClient,\n    private readonly _storageCache: StorageCache,\n    private readonly _storage: Storage,\n    private readonly _logger: Logger\n  ) {}\n\n  async activate(): Promise<boolean> {\n    const [lastSuccessfulFetchResponse, activeConfigEtag] = await Promise.all([\n      this._storage.getLastSuccessfulFetchResponse(),\n      this._storage.getActiveConfigEtag()\n    ]);\n    if (\n      !lastSuccessfulFetchResponse ||\n      !lastSuccessfulFetchResponse.config ||\n      !lastSuccessfulFetchResponse.eTag ||\n      lastSuccessfulFetchResponse.eTag === activeConfigEtag\n    ) {\n      // Either there is no successful fetched config, or is the same as current active\n      // config.\n      return false;\n    }\n    await Promise.all([\n      this._storageCache.setActiveConfig(lastSuccessfulFetchResponse.config),\n      this._storage.setActiveConfigEtag(lastSuccessfulFetchResponse.eTag)\n    ]);\n    return true;\n  }\n\n  ensureInitialized(): Promise<void> {\n    if (!this._initializePromise) {\n      this._initializePromise = this._storageCache\n        .loadFromStorage()\n        .then(() => {\n          this._isInitializationComplete = true;\n        });\n    }\n    return this._initializePromise;\n  }\n\n  /**\n   * @throws a {@link ErrorCode.FETCH_CLIENT_TIMEOUT} if the request takes longer than\n   * {@link Settings.fetchTimeoutInSeconds} or\n   * {@link DEFAULT_FETCH_TIMEOUT_SECONDS}.\n   */\n  async fetch(): Promise<void> {\n    // Aborts the request after the given timeout, causing the fetch call to\n    // reject with an AbortError.\n    //\n    // <p>Aborting after the request completes is a no-op, so we don't need a\n    // corresponding clearTimeout.\n    //\n    // Locating abort logic here because:\n    // * it uses a developer setting (timeout)\n    // * it applies to all retries (like curl's max-time arg)\n    // * it is consistent with the Fetch API's signal input\n    const abortSignal = new RemoteConfigAbortSignal();\n\n    setTimeout(async () => {\n      // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\n      abortSignal.abort();\n    }, this.settings.fetchTimeoutMillis);\n\n    // Catches *all* errors thrown by client so status can be set consistently.\n    try {\n      await this._client.fetch({\n        cacheMaxAgeMillis: this.settings.minimumFetchIntervalMillis,\n        signal: abortSignal\n      });\n\n      await this._storageCache.setLastFetchStatus('success');\n    } catch (e) {\n      const lastFetchStatus = hasErrorCode(e, ErrorCode.FETCH_THROTTLE)\n        ? 'throttle'\n        : 'failure';\n      await this._storageCache.setLastFetchStatus(lastFetchStatus);\n      throw e;\n    }\n  }\n\n  async fetchAndActivate(): Promise<boolean> {\n    await this.fetch();\n    return this.activate();\n  }\n\n  getAll(): { [key: string]: ValueType } {\n    return getAllKeys(\n      this._storageCache.getActiveConfig(),\n      this.defaultConfig\n    ).reduce((allConfigs, key) => {\n      allConfigs[key] = this.getValue(key);\n      return allConfigs;\n    }, {} as { [key: string]: ValueType });\n  }\n\n  getBoolean(key: string): boolean {\n    return this.getValue(key).asBoolean();\n  }\n\n  getNumber(key: string): number {\n    return this.getValue(key).asNumber();\n  }\n\n  getString(key: string): string {\n    return this.getValue(key).asString();\n  }\n\n  getValue(key: string): ValueType {\n    if (!this._isInitializationComplete) {\n      this._logger.debug(\n        `A value was requested for key \"${key}\" before SDK initialization completed.` +\n          ' Await on ensureInitialized if the intent was to get a previously activated value.'\n      );\n    }\n    const activeConfig = this._storageCache.getActiveConfig();\n    if (activeConfig && activeConfig[key] !== undefined) {\n      return new Value('remote', activeConfig[key]);\n    } else if (this.defaultConfig && this.defaultConfig[key] !== undefined) {\n      return new Value('default', String(this.defaultConfig[key]));\n    }\n    this._logger.debug(\n      `Returning static value for key \"${key}\".` +\n        ' Define a default or remote value if this is unintentional.'\n    );\n    return new Value('static');\n  }\n}\n\n/**\n * Dedupes and returns an array of all the keys of the received objects.\n */\nfunction getAllKeys(obj1: {} = {}, obj2: {} = {}): string[] {\n  return Object.keys({ ...obj1, ...obj2 });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FetchStatus } from '@firebase/remote-config-types';\nimport {\n  FetchResponse,\n  FirebaseRemoteConfigObject\n} from '../client/remote_config_fetch_client';\nimport { ERROR_FACTORY, ErrorCode } from '../errors';\nimport { FirebaseError } from '@firebase/util';\n\n/**\n * Converts an error event associated with a {@link IDBRequest} to a {@link FirebaseError}.\n */\nfunction toFirebaseError(event: Event, errorCode: ErrorCode): FirebaseError {\n  const originalError = (event.target as IDBRequest).error || undefined;\n  return ERROR_FACTORY.create(errorCode, {\n    originalErrorMessage: originalError && originalError.message\n  });\n}\n\n/**\n * A general-purpose store keyed by app + namespace + {@link\n * ProjectNamespaceKeyFieldValue}.\n *\n * <p>The Remote Config SDK can be used with multiple app installations, and each app can interact\n * with multiple namespaces, so this store uses app (ID + name) and namespace as common parent keys\n * for a set of key-value pairs. See {@link Storage#createCompositeKey}.\n *\n * <p>Visible for testing.\n */\nexport const APP_NAMESPACE_STORE = 'app_namespace_store';\n\nconst DB_NAME = 'firebase_remote_config';\nconst DB_VERSION = 1;\n\n/**\n * Encapsulates metadata concerning throttled fetch requests.\n */\nexport interface ThrottleMetadata {\n  // The number of times fetch has backed off. Used for resuming backoff after a timeout.\n  backoffCount: number;\n  // The Unix timestamp in milliseconds when callers can retry a request.\n  throttleEndTimeMillis: number;\n}\n\n/**\n * Provides type-safety for the \"key\" field used by {@link APP_NAMESPACE_STORE}.\n *\n * <p>This seems like a small price to avoid potentially subtle bugs caused by a typo.\n */\ntype ProjectNamespaceKeyFieldValue =\n  | 'active_config'\n  | 'active_config_etag'\n  | 'last_fetch_status'\n  | 'last_successful_fetch_timestamp_millis'\n  | 'last_successful_fetch_response'\n  | 'settings'\n  | 'throttle_metadata';\n\n// Visible for testing.\nexport function openDatabase(): Promise<IDBDatabase> {\n  return new Promise((resolve, reject) => {\n    const request = indexedDB.open(DB_NAME, DB_VERSION);\n    request.onerror = event => {\n      reject(toFirebaseError(event, ErrorCode.STORAGE_OPEN));\n    };\n    request.onsuccess = event => {\n      resolve((event.target as IDBOpenDBRequest).result);\n    };\n    request.onupgradeneeded = event => {\n      const db = (event.target as IDBOpenDBRequest).result;\n\n      // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (event.oldVersion) {\n        case 0:\n          db.createObjectStore(APP_NAMESPACE_STORE, {\n            keyPath: 'compositeKey'\n          });\n      }\n    };\n  });\n}\n\n/**\n * Abstracts data persistence.\n */\nexport class Storage {\n  /**\n   * @param appId enables storage segmentation by app (ID + name).\n   * @param appName enables storage segmentation by app (ID + name).\n   * @param namespace enables storage segmentation by namespace.\n   */\n  constructor(\n    private readonly appId: string,\n    private readonly appName: string,\n    private readonly namespace: string,\n    private readonly openDbPromise = openDatabase()\n  ) {}\n\n  getLastFetchStatus(): Promise<FetchStatus | undefined> {\n    return this.get<FetchStatus>('last_fetch_status');\n  }\n\n  setLastFetchStatus(status: FetchStatus): Promise<void> {\n    return this.set<FetchStatus>('last_fetch_status', status);\n  }\n\n  // This is comparable to a cache entry timestamp. If we need to expire other data, we could\n  // consider adding timestamp to all storage records and an optional max age arg to getters.\n  getLastSuccessfulFetchTimestampMillis(): Promise<number | undefined> {\n    return this.get<number>('last_successful_fetch_timestamp_millis');\n  }\n\n  setLastSuccessfulFetchTimestampMillis(timestamp: number): Promise<void> {\n    return this.set<number>(\n      'last_successful_fetch_timestamp_millis',\n      timestamp\n    );\n  }\n\n  getLastSuccessfulFetchResponse(): Promise<FetchResponse | undefined> {\n    return this.get<FetchResponse>('last_successful_fetch_response');\n  }\n\n  setLastSuccessfulFetchResponse(response: FetchResponse): Promise<void> {\n    return this.set<FetchResponse>('last_successful_fetch_response', response);\n  }\n\n  getActiveConfig(): Promise<FirebaseRemoteConfigObject | undefined> {\n    return this.get<FirebaseRemoteConfigObject>('active_config');\n  }\n\n  setActiveConfig(config: FirebaseRemoteConfigObject): Promise<void> {\n    return this.set<FirebaseRemoteConfigObject>('active_config', config);\n  }\n\n  getActiveConfigEtag(): Promise<string | undefined> {\n    return this.get<string>('active_config_etag');\n  }\n\n  setActiveConfigEtag(etag: string): Promise<void> {\n    return this.set<string>('active_config_etag', etag);\n  }\n\n  getThrottleMetadata(): Promise<ThrottleMetadata | undefined> {\n    return this.get<ThrottleMetadata>('throttle_metadata');\n  }\n\n  setThrottleMetadata(metadata: ThrottleMetadata): Promise<void> {\n    return this.set<ThrottleMetadata>('throttle_metadata', metadata);\n  }\n\n  deleteThrottleMetadata(): Promise<void> {\n    return this.delete('throttle_metadata');\n  }\n\n  async get<T>(key: ProjectNamespaceKeyFieldValue): Promise<T | undefined> {\n    const db = await this.openDbPromise;\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction([APP_NAMESPACE_STORE], 'readonly');\n      const objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n      const compositeKey = this.createCompositeKey(key);\n      try {\n        const request = objectStore.get(compositeKey);\n        request.onerror = event => {\n          reject(toFirebaseError(event, ErrorCode.STORAGE_GET));\n        };\n        request.onsuccess = event => {\n          const result = (event.target as IDBRequest).result;\n          if (result) {\n            resolve(result.value);\n          } else {\n            resolve(undefined);\n          }\n        };\n      } catch (e) {\n        reject(\n          ERROR_FACTORY.create(ErrorCode.STORAGE_GET, {\n            originalErrorMessage: e && e.message\n          })\n        );\n      }\n    });\n  }\n\n  async set<T>(key: ProjectNamespaceKeyFieldValue, value: T): Promise<void> {\n    const db = await this.openDbPromise;\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\n      const objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n      const compositeKey = this.createCompositeKey(key);\n      try {\n        const request = objectStore.put({\n          compositeKey,\n          value\n        });\n        request.onerror = (event: Event) => {\n          reject(toFirebaseError(event, ErrorCode.STORAGE_SET));\n        };\n        request.onsuccess = () => {\n          resolve();\n        };\n      } catch (e) {\n        reject(\n          ERROR_FACTORY.create(ErrorCode.STORAGE_SET, {\n            originalErrorMessage: e && e.message\n          })\n        );\n      }\n    });\n  }\n\n  async delete(key: ProjectNamespaceKeyFieldValue): Promise<void> {\n    const db = await this.openDbPromise;\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\n      const objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n      const compositeKey = this.createCompositeKey(key);\n      try {\n        const request = objectStore.delete(compositeKey);\n        request.onerror = (event: Event) => {\n          reject(toFirebaseError(event, ErrorCode.STORAGE_DELETE));\n        };\n        request.onsuccess = () => {\n          resolve();\n        };\n      } catch (e) {\n        reject(\n          ERROR_FACTORY.create(ErrorCode.STORAGE_DELETE, {\n            originalErrorMessage: e && e.message\n          })\n        );\n      }\n    });\n  }\n\n  // Facilitates composite key functionality (which is unsupported in IE).\n  createCompositeKey(key: ProjectNamespaceKeyFieldValue): string {\n    return [this.appId, this.appName, this.namespace, key].join();\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FetchStatus } from '@firebase/remote-config-types';\nimport { FirebaseRemoteConfigObject } from '../client/remote_config_fetch_client';\nimport { Storage } from './storage';\n\n/**\n * A memory cache layer over storage to support the SDK's synchronous read requirements.\n */\nexport class StorageCache {\n  constructor(private readonly storage: Storage) {}\n\n  /**\n   * Memory caches.\n   */\n  private lastFetchStatus?: FetchStatus;\n  private lastSuccessfulFetchTimestampMillis?: number;\n  private activeConfig?: FirebaseRemoteConfigObject;\n\n  /**\n   * Memory-only getters\n   */\n  getLastFetchStatus(): FetchStatus | undefined {\n    return this.lastFetchStatus;\n  }\n\n  getLastSuccessfulFetchTimestampMillis(): number | undefined {\n    return this.lastSuccessfulFetchTimestampMillis;\n  }\n\n  getActiveConfig(): FirebaseRemoteConfigObject | undefined {\n    return this.activeConfig;\n  }\n\n  /**\n   * Read-ahead getter\n   */\n  async loadFromStorage(): Promise<void> {\n    const lastFetchStatusPromise = this.storage.getLastFetchStatus();\n    const lastSuccessfulFetchTimestampMillisPromise = this.storage.getLastSuccessfulFetchTimestampMillis();\n    const activeConfigPromise = this.storage.getActiveConfig();\n\n    // Note:\n    // 1. we consistently check for undefined to avoid clobbering defined values\n    //   in memory\n    // 2. we defer awaiting to improve readability, as opposed to destructuring\n    //   a Promise.all result, for example\n\n    const lastFetchStatus = await lastFetchStatusPromise;\n    if (lastFetchStatus) {\n      this.lastFetchStatus = lastFetchStatus;\n    }\n\n    const lastSuccessfulFetchTimestampMillis = await lastSuccessfulFetchTimestampMillisPromise;\n    if (lastSuccessfulFetchTimestampMillis) {\n      this.lastSuccessfulFetchTimestampMillis = lastSuccessfulFetchTimestampMillis;\n    }\n\n    const activeConfig = await activeConfigPromise;\n    if (activeConfig) {\n      this.activeConfig = activeConfig;\n    }\n  }\n\n  /**\n   * Write-through setters\n   */\n  setLastFetchStatus(status: FetchStatus): Promise<void> {\n    this.lastFetchStatus = status;\n    return this.storage.setLastFetchStatus(status);\n  }\n\n  setLastSuccessfulFetchTimestampMillis(\n    timestampMillis: number\n  ): Promise<void> {\n    this.lastSuccessfulFetchTimestampMillis = timestampMillis;\n    return this.storage.setLastSuccessfulFetchTimestampMillis(timestampMillis);\n  }\n\n  setActiveConfig(activeConfig: FirebaseRemoteConfigObject): Promise<void> {\n    this.activeConfig = activeConfig;\n    return this.storage.setActiveConfig(activeConfig);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  RemoteConfigAbortSignal,\n  RemoteConfigFetchClient,\n  FetchResponse,\n  FetchRequest\n} from './remote_config_fetch_client';\nimport { ThrottleMetadata, Storage } from '../storage/storage';\nimport { ErrorCode, ERROR_FACTORY } from '../errors';\nimport { FirebaseError, calculateBackoffMillis } from '@firebase/util';\n\n/**\n * Supports waiting on a backoff by:\n *\n * <ul>\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\n *       request appear the same.</li>\n * </ul>\n *\n * <p>Visible for testing.\n */\nexport function setAbortableTimeout(\n  signal: RemoteConfigAbortSignal,\n  throttleEndTimeMillis: number\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    // Derives backoff from given end time, normalizing negative numbers to zero.\n    const backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\n\n    const timeout = setTimeout(resolve, backoffMillis);\n\n    // Adds listener, rather than sets onabort, because signal is a shared object.\n    signal.addEventListener(() => {\n      clearTimeout(timeout);\n\n      // If the request completes before this timeout, the rejection has no effect.\n      reject(\n        ERROR_FACTORY.create(ErrorCode.FETCH_THROTTLE, {\n          throttleEndTimeMillis\n        })\n      );\n    });\n  });\n}\n\ntype RetriableError = FirebaseError & { customData: { httpStatus: string } };\n/**\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\n */\nfunction isRetriableError(e: Error): e is RetriableError {\n  if (!(e instanceof FirebaseError) || !e.customData) {\n    return false;\n  }\n\n  // Uses string index defined by ErrorData, which FirebaseError implements.\n  const httpStatus = Number(e.customData['httpStatus']);\n\n  return (\n    httpStatus === 429 ||\n    httpStatus === 500 ||\n    httpStatus === 503 ||\n    httpStatus === 504\n  );\n}\n\n/**\n * Decorates a Client with retry logic.\n *\n * <p>Comparable to CachingClient, but uses backoff logic instead of cache max age and doesn't cache\n * responses (because the SDK has no use for error responses).\n */\nexport class RetryingClient implements RemoteConfigFetchClient {\n  constructor(\n    private readonly client: RemoteConfigFetchClient,\n    private readonly storage: Storage\n  ) {}\n\n  async fetch(request: FetchRequest): Promise<FetchResponse> {\n    const throttleMetadata = (await this.storage.getThrottleMetadata()) || {\n      backoffCount: 0,\n      throttleEndTimeMillis: Date.now()\n    };\n\n    return this.attemptFetch(request, throttleMetadata);\n  }\n\n  /**\n   * A recursive helper for attempting a fetch request repeatedly.\n   *\n   * @throws any non-retriable errors.\n   */\n  async attemptFetch(\n    request: FetchRequest,\n    { throttleEndTimeMillis, backoffCount }: ThrottleMetadata\n  ): Promise<FetchResponse> {\n    // Starts with a (potentially zero) timeout to support resumption from stored state.\n    // Ensures the throttle end time is honored if the last attempt timed out.\n    // Note the SDK will never make a request if the fetch timeout expires at this point.\n    await setAbortableTimeout(request.signal, throttleEndTimeMillis);\n\n    try {\n      const response = await this.client.fetch(request);\n\n      // Note the SDK only clears throttle state if response is success or non-retriable.\n      await this.storage.deleteThrottleMetadata();\n\n      return response;\n    } catch (e) {\n      if (!isRetriableError(e)) {\n        throw e;\n      }\n\n      // Increments backoff state.\n      const throttleMetadata = {\n        throttleEndTimeMillis:\n          Date.now() + calculateBackoffMillis(backoffCount),\n        backoffCount: backoffCount + 1\n      };\n\n      // Persists state.\n      await this.storage.setThrottleMetadata(throttleMetadata);\n\n      return this.attemptFetch(request, throttleMetadata);\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\n// component\r\nimport { LoginComponent } from \"./login.component\";\r\nimport { RegisterComponent } from './components/register/register.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: LoginComponent,\r\n  },\r\n  {\r\n    path: \"register\",\r\n    component: RegisterComponent,\r\n  }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginRoutingModule { }\r\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\nexport const DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\n\nexport const DEFAULT_VAPID_KEY =\n  'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\n\nexport const ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\n\n// Key of FCM Payload in Notification's data field.\nexport const FCM_MSG = 'FCM_MSG';\nexport const TAG = 'FirebaseMessaging: ';\n\n// Set to '1' if Analytics is enabled for the campaign\nexport const CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\nexport const CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\nexport const CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\nexport const CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\n\n// Due to the fact that onBackgroundMessage can't be awaited (to support rxjs), a silent push\n// warning might be shown by the browser if the callback fails to completes by the end of onPush.\n// Experiments were ran to determine the majority onBackground message clock time. This brief\n// blocking time would allow majority of the onBackgroundMessage callback to finish.\nexport const BACKGROUND_HANDLE_EXECUTION_TIME_LIMIT_MS = 1000;\n\n// Preparation time for client to initialize and set up the message handler.\nexport const FOREGROUND_HANDLE_PREPARATION_TIME_MS = 3000;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  AVAILABLE_IN_WINDOW = 'only-available-in-window',\n  AVAILABLE_IN_SW = 'only-available-in-sw',\n  PERMISSION_DEFAULT = 'permission-default',\n  PERMISSION_BLOCKED = 'permission-blocked',\n  UNSUPPORTED_BROWSER = 'unsupported-browser',\n  FAILED_DEFAULT_REGISTRATION = 'failed-service-worker-registration',\n  TOKEN_SUBSCRIBE_FAILED = 'token-subscribe-failed',\n  TOKEN_SUBSCRIBE_NO_TOKEN = 'token-subscribe-no-token',\n  TOKEN_UNSUBSCRIBE_FAILED = 'token-unsubscribe-failed',\n  TOKEN_UPDATE_FAILED = 'token-update-failed',\n  TOKEN_UPDATE_NO_TOKEN = 'token-update-no-token',\n  INVALID_BG_HANDLER = 'invalid-bg-handler',\n  USE_SW_AFTER_GET_TOKEN = 'use-sw-after-get-token',\n  INVALID_SW_REGISTRATION = 'invalid-sw-registration',\n  USE_VAPID_KEY_AFTER_GET_TOKEN = 'use-vapid-key-after-get-token',\n  INVALID_VAPID_KEY = 'invalid-vapid-key'\n}\n\nexport const ERROR_MAP: ErrorMap<ErrorCode> = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.AVAILABLE_IN_WINDOW]:\n    'This method is available in a Window context.',\n  [ErrorCode.AVAILABLE_IN_SW]:\n    'This method is available in a service worker context.',\n  [ErrorCode.PERMISSION_DEFAULT]:\n    'The notification permission was not granted and dismissed instead.',\n  [ErrorCode.PERMISSION_BLOCKED]:\n    'The notification permission was not granted and blocked instead.',\n  [ErrorCode.UNSUPPORTED_BROWSER]:\n    \"This browser doesn't support the API's required to use the firebase SDK.\",\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]:\n    'We are unable to register the default service worker. {$browserErrorMessage}',\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]:\n    'A problem occurred while subscribing the user to FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN]:\n    'FCM returned no token when subscribing the user to push.',\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]:\n    'A problem occurred while unsubscribing the ' +\n    'user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_FAILED]:\n    'A problem occurred while updating the user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_NO_TOKEN]:\n    'FCM returned no token when updating the user to push.',\n  [ErrorCode.USE_SW_AFTER_GET_TOKEN]:\n    'The useServiceWorker() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your service worker is used.',\n  [ErrorCode.INVALID_SW_REGISTRATION]:\n    'The input to useServiceWorker() must be a ServiceWorkerRegistration.',\n  [ErrorCode.INVALID_BG_HANDLER]:\n    'The input to setBackgroundMessageHandler() must be a function.',\n  [ErrorCode.INVALID_VAPID_KEY]: 'The public VAPID key must be a string.',\n  [ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN]:\n    'The usePublicVapidKey() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your VAPID key is used.'\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]: { browserErrorMessage: string };\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UPDATE_FAILED]: { errorInfo: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  'messaging',\n  'Messaging',\n  ERROR_MAP\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport {\n  INSTALLATIONS_API_URL,\n  INTERNAL_AUTH_VERSION\n} from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport function getInstallationsEndpoint({ projectId }: AppConfig): string {\n  return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\n}\n\nexport function extractAuthTokenInfoFromResponse(\n  response: GenerateAuthTokenResponse\n): CompletedAuthToken {\n  return {\n    token: response.token,\n    requestStatus: RequestStatus.COMPLETED,\n    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n    creationTime: Date.now()\n  };\n}\n\nexport async function getErrorFromResponse(\n  requestName: string,\n  response: Response\n): Promise<FirebaseError> {\n  const responseJson: ErrorResponse = await response.json();\n  const errorData = responseJson.error;\n  return ERROR_FACTORY.create(ErrorCode.REQUEST_FAILED, {\n    requestName,\n    serverCode: errorData.code,\n    serverMessage: errorData.message,\n    serverStatus: errorData.status\n  });\n}\n\nexport function getHeaders({ apiKey }: AppConfig): Headers {\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\n\nexport function getHeadersWithAuth(\n  appConfig: AppConfig,\n  { refreshToken }: RegisteredInstallationEntry\n): Headers {\n  const headers = getHeaders(appConfig);\n  headers.append('Authorization', getAuthorizationHeader(refreshToken));\n  return headers;\n}\n\nexport interface ErrorResponse {\n  error: {\n    code: number;\n    message: string;\n    status: string;\n  };\n}\n\n/**\n * Calls the passed in fetch wrapper and returns the response.\n * If the returned response has a status of 5xx, re-runs the function once and\n * returns the response.\n */\nexport async function retryIfServerError(\n  fn: () => Promise<Response>\n): Promise<Response> {\n  const result = await fn();\n\n  if (result.status >= 500 && result.status < 600) {\n    // Internal Server Error. Retry request.\n    return fn();\n  }\n\n  return result;\n}\n\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn: string): number {\n  // This works because the server will never respond with fractions of a second.\n  return Number(responseExpiresIn.replace('s', '000'));\n}\n\nfunction getAuthorizationHeader(refreshToken: string): string {\n  return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CreateInstallationResponse } from '../interfaces/api-response';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  InProgressInstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { INTERNAL_AUTH_VERSION, PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeaders,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function createInstallationRequest(\n  appConfig: AppConfig,\n  { fid }: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  const endpoint = getInstallationsEndpoint(appConfig);\n\n  const headers = getHeaders(appConfig);\n  const body = {\n    fid,\n    authVersion: INTERNAL_AUTH_VERSION,\n    appId: appConfig.appId,\n    sdkVersion: PACKAGE_VERSION\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: CreateInstallationResponse = await response.json();\n    const registeredInstallationEntry: RegisteredInstallationEntry = {\n      fid: responseValue.fid || fid,\n      registrationStatus: RequestStatus.COMPLETED,\n      refreshToken: responseValue.refreshToken,\n      authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n    };\n    return registeredInstallationEntry;\n  } else {\n    throw await getErrorFromResponse('Create Installation', response);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function bufferToBase64UrlSafe(array: Uint8Array): string {\n  const b64 = btoa(String.fromCharCode(...array));\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bufferToBase64UrlSafe } from './buffer-to-base64-url-safe';\n\nexport const VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nexport const INVALID_FID = '';\n\n/**\n * Generates a new FID using random values from Web Crypto API.\n * Returns an empty string if FID generation fails for any reason.\n */\nexport function generateFid(): string {\n  try {\n    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n    // bytes. our implementation generates a 17 byte array instead.\n    const fidByteArray = new Uint8Array(17);\n    const crypto =\n      self.crypto || ((self as unknown) as { msCrypto: Crypto }).msCrypto;\n    crypto.getRandomValues(fidByteArray);\n\n    // Replace the first 4 random bits with the constant FID header of 0b0111.\n    fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\n\n    const fid = encode(fidByteArray);\n\n    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n  } catch {\n    // FID generation errored\n    return INVALID_FID;\n  }\n}\n\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray: Uint8Array): string {\n  const b64String = bufferToBase64UrlSafe(fidByteArray);\n\n  // Remove the 23rd character that was added because of the extra 4 bits at the\n  // end of our 17 byte array, and the '=' padding.\n  return b64String.substr(0, 22);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/app-config';\n\n/** Returns a string key that can be used to identify the app. */\nexport function getKey(appConfig: AppConfig): string {\n  return `${appConfig.appName}!${appConfig.appId}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getKey } from '../util/get-key';\nimport { AppConfig } from '../interfaces/app-config';\nimport { IdChangeCallbackFn } from '../functions';\n\nconst fidChangeCallbacks: Map<string, Set<IdChangeCallbackFn>> = new Map();\n\n/**\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\n * change to other tabs.\n */\nexport function fidChanged(appConfig: AppConfig, fid: string): void {\n  const key = getKey(appConfig);\n\n  callFidChangeCallbacks(key, fid);\n  broadcastFidChange(key, fid);\n}\n\nexport function addCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  // Open the broadcast channel if it's not already open,\n  // to be able to listen to change events from other tabs.\n  getBroadcastChannel();\n\n  const key = getKey(appConfig);\n\n  let callbackSet = fidChangeCallbacks.get(key);\n  if (!callbackSet) {\n    callbackSet = new Set();\n    fidChangeCallbacks.set(key, callbackSet);\n  }\n  callbackSet.add(callback);\n}\n\nexport function removeCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  const key = getKey(appConfig);\n\n  const callbackSet = fidChangeCallbacks.get(key);\n\n  if (!callbackSet) {\n    return;\n  }\n\n  callbackSet.delete(callback);\n  if (callbackSet.size === 0) {\n    fidChangeCallbacks.delete(key);\n  }\n\n  // Close broadcast channel if there are no more callbacks.\n  closeBroadcastChannel();\n}\n\nfunction callFidChangeCallbacks(key: string, fid: string): void {\n  const callbacks = fidChangeCallbacks.get(key);\n  if (!callbacks) {\n    return;\n  }\n\n  for (const callback of callbacks) {\n    callback(fid);\n  }\n}\n\nfunction broadcastFidChange(key: string, fid: string): void {\n  const channel = getBroadcastChannel();\n  if (channel) {\n    channel.postMessage({ key, fid });\n  }\n  closeBroadcastChannel();\n}\n\nlet broadcastChannel: BroadcastChannel | null = null;\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\nfunction getBroadcastChannel(): BroadcastChannel | null {\n  if (!broadcastChannel && 'BroadcastChannel' in self) {\n    broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\n    broadcastChannel.onmessage = e => {\n      callFidChangeCallbacks(e.data.key, e.data.fid);\n    };\n  }\n  return broadcastChannel;\n}\n\nfunction closeBroadcastChannel(): void {\n  if (fidChangeCallbacks.size === 0 && broadcastChannel) {\n    broadcastChannel.close();\n    broadcastChannel = null;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DB, deleteDb, openDb } from 'idb';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { TokenDetails } from '../interfaces/token-details';\nimport { migrateOldDatabase } from './migrate-old-database';\n\n// Exported for tests.\nexport const DATABASE_NAME = 'firebase-messaging-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-messaging-store';\n\nlet dbPromise: Promise<DB> | null = null;\nfunction getDbPromise(): Promise<DB> {\n  if (!dbPromise) {\n    dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, upgradeDb => {\n      // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\n      // because if there are multiple versions between the old version and the current version, we\n      // want ALL the migrations that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (upgradeDb.oldVersion) {\n        case 0:\n          upgradeDb.createObjectStore(OBJECT_STORE_NAME);\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function dbGet(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<TokenDetails | undefined> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tokenDetails = await db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key);\n\n  if (tokenDetails) {\n    return tokenDetails;\n  } else {\n    // Check if there is a tokenDetails object in the old DB.\n    const oldTokenDetails = await migrateOldDatabase(\n      firebaseDependencies.appConfig.senderId\n    );\n    if (oldTokenDetails) {\n      await dbSet(firebaseDependencies, oldTokenDetails);\n      return oldTokenDetails;\n    }\n  }\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function dbSet(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<TokenDetails> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\n  await tx.complete;\n  return tokenDetails;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function dbRemove(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<void> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.complete;\n}\n\n/** Deletes the DB. Useful for tests. */\nexport async function dbDelete(): Promise<void> {\n  if (dbPromise) {\n    (await dbPromise).close();\n    await deleteDb(DATABASE_NAME);\n    dbPromise = null;\n  }\n}\n\nfunction getKey({ appConfig }: FirebaseInternalDependencies): string {\n  return appConfig.appId;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createInstallationRequest } from '../api/create-installation-request';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  InProgressInstallationEntry,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { generateFid, INVALID_FID } from './generate-fid';\nimport { remove, set, update } from './idb-manager';\n\nexport interface InstallationEntryWithRegistrationPromise {\n  installationEntry: InstallationEntry;\n  /** Exist iff the installationEntry is not registered. */\n  registrationPromise?: Promise<RegisteredInstallationEntry>;\n}\n\n/**\n * Updates and returns the InstallationEntry from the database.\n * Also triggers a registration request if it is necessary and possible.\n */\nexport async function getInstallationEntry(\n  appConfig: AppConfig\n): Promise<InstallationEntryWithRegistrationPromise> {\n  let registrationPromise: Promise<RegisteredInstallationEntry> | undefined;\n\n  const installationEntry = await update(appConfig, oldEntry => {\n    const installationEntry = updateOrCreateInstallationEntry(oldEntry);\n    const entryWithPromise = triggerRegistrationIfNecessary(\n      appConfig,\n      installationEntry\n    );\n    registrationPromise = entryWithPromise.registrationPromise;\n    return entryWithPromise.installationEntry;\n  });\n\n  if (installationEntry.fid === INVALID_FID) {\n    // FID generation failed. Waiting for the FID from the server.\n    return { installationEntry: await registrationPromise! };\n  }\n\n  return {\n    installationEntry,\n    registrationPromise\n  };\n}\n\n/**\n * Creates a new Installation Entry if one does not exist.\n * Also clears timed out pending requests.\n */\nfunction updateOrCreateInstallationEntry(\n  oldEntry: InstallationEntry | undefined\n): InstallationEntry {\n  const entry: InstallationEntry = oldEntry || {\n    fid: generateFid(),\n    registrationStatus: RequestStatus.NOT_STARTED\n  };\n\n  return clearTimedOutRequest(entry);\n}\n\n/**\n * If the Firebase Installation is not registered yet, this will trigger the\n * registration and return an InProgressInstallationEntry.\n *\n * If registrationPromise does not exist, the installationEntry is guaranteed\n * to be registered.\n */\nfunction triggerRegistrationIfNecessary(\n  appConfig: AppConfig,\n  installationEntry: InstallationEntry\n): InstallationEntryWithRegistrationPromise {\n  if (installationEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n    if (!navigator.onLine) {\n      // Registration required but app is offline.\n      const registrationPromiseWithError = Promise.reject(\n        ERROR_FACTORY.create(ErrorCode.APP_OFFLINE)\n      );\n      return {\n        installationEntry,\n        registrationPromise: registrationPromiseWithError\n      };\n    }\n\n    // Try registering. Change status to IN_PROGRESS.\n    const inProgressEntry: InProgressInstallationEntry = {\n      fid: installationEntry.fid,\n      registrationStatus: RequestStatus.IN_PROGRESS,\n      registrationTime: Date.now()\n    };\n    const registrationPromise = registerInstallation(\n      appConfig,\n      inProgressEntry\n    );\n    return { installationEntry: inProgressEntry, registrationPromise };\n  } else if (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS\n  ) {\n    return {\n      installationEntry,\n      registrationPromise: waitUntilFidRegistration(appConfig)\n    };\n  } else {\n    return { installationEntry };\n  }\n}\n\n/** This will be executed only once for each new Firebase Installation. */\nasync function registerInstallation(\n  appConfig: AppConfig,\n  installationEntry: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  try {\n    const registeredInstallationEntry = await createInstallationRequest(\n      appConfig,\n      installationEntry\n    );\n    return set(appConfig, registeredInstallationEntry);\n  } catch (e) {\n    if (isServerError(e) && e.customData.serverCode === 409) {\n      // Server returned a \"FID can not be used\" error.\n      // Generate a new ID next time.\n      await remove(appConfig);\n    } else {\n      // Registration failed. Set FID as not registered.\n      await set(appConfig, {\n        fid: installationEntry.fid,\n        registrationStatus: RequestStatus.NOT_STARTED\n      });\n    }\n    throw e;\n  }\n}\n\n/** Call if FID registration is pending in another request. */\nasync function waitUntilFidRegistration(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry: InstallationEntry = await updateInstallationRequest(appConfig);\n  while (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n    // createInstallation request still in progress.\n    await sleep(100);\n\n    entry = await updateInstallationRequest(appConfig);\n  }\n\n  if (entry.registrationStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    const {\n      installationEntry,\n      registrationPromise\n    } = await getInstallationEntry(appConfig);\n\n    if (registrationPromise) {\n      return registrationPromise;\n    } else {\n      // if there is no registrationPromise, entry is registered.\n      return installationEntry as RegisteredInstallationEntry;\n    }\n  }\n\n  return entry;\n}\n\n/**\n * Called only if there is a CreateInstallation request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * CreateInstallation request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateInstallationRequest(\n  appConfig: AppConfig\n): Promise<InstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!oldEntry) {\n      throw ERROR_FACTORY.create(ErrorCode.INSTALLATION_NOT_FOUND);\n    }\n    return clearTimedOutRequest(oldEntry);\n  });\n}\n\nfunction clearTimedOutRequest(entry: InstallationEntry): InstallationEntry {\n  if (hasInstallationRequestTimedOut(entry)) {\n    return {\n      fid: entry.fid,\n      registrationStatus: RequestStatus.NOT_STARTED\n    };\n  }\n\n  return entry;\n}\n\nfunction hasInstallationRequestTimedOut(\n  installationEntry: InstallationEntry\n): boolean {\n  return (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS &&\n    installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseDependencies } from '../interfaces/firebase-dependencies';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry\n} from '../interfaces/installation-entry';\nimport { PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function generateAuthTokenRequest(\n  { appConfig, platformLoggerProvider }: FirebaseDependencies,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n\n  // If platform logger exists, add the platform info string to the header.\n  const platformLogger = platformLoggerProvider.getImmediate({\n    optional: true\n  });\n  if (platformLogger) {\n    headers.append('x-firebase-client', platformLogger.getPlatformInfoString());\n  }\n\n  const body = {\n    installation: {\n      sdkVersion: PACKAGE_VERSION\n    }\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: GenerateAuthTokenResponse = await response.json();\n    const completedAuthToken: CompletedAuthToken = extractAuthTokenInfoFromResponse(\n      responseValue\n    );\n    return completedAuthToken;\n  } else {\n    throw await getErrorFromResponse('Generate Auth Token', response);\n  }\n}\n\nfunction getGenerateAuthTokenEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { generateAuthTokenRequest } from '../api/generate-auth-token-request';\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseDependencies } from '../interfaces/firebase-dependencies';\nimport {\n  AuthToken,\n  CompletedAuthToken,\n  InProgressAuthToken,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS, TOKEN_EXPIRATION_BUFFER } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { remove, set, update } from './idb-manager';\n\n/**\n * Returns a valid authentication token for the installation. Generates a new\n * token if one doesn't exist, is expired or about to expire.\n *\n * Should only be called if the Firebase Installation is registered.\n */\nexport async function refreshAuthToken(\n  dependencies: FirebaseDependencies,\n  forceRefresh = false\n): Promise<CompletedAuthToken> {\n  let tokenPromise: Promise<CompletedAuthToken> | undefined;\n  const entry = await update(dependencies.appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n      // There is a valid token in the DB.\n      return oldEntry;\n    } else if (oldAuthToken.requestStatus === RequestStatus.IN_PROGRESS) {\n      // There already is a token request in progress.\n      tokenPromise = waitUntilAuthTokenRequest(dependencies, forceRefresh);\n      return oldEntry;\n    } else {\n      // No token or token expired.\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      }\n\n      const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n      tokenPromise = fetchAuthTokenFromServer(dependencies, inProgressEntry);\n      return inProgressEntry;\n    }\n  });\n\n  const authToken = tokenPromise\n    ? await tokenPromise\n    : (entry.authToken as CompletedAuthToken);\n  return authToken;\n}\n\n/**\n * Call only if FID is registered and Auth Token request is in progress.\n *\n * Waits until the current pending request finishes. If the request times out,\n * tries once in this thread as well.\n */\nasync function waitUntilAuthTokenRequest(\n  dependencies: FirebaseDependencies,\n  forceRefresh: boolean\n): Promise<CompletedAuthToken> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry = await updateAuthTokenRequest(dependencies.appConfig);\n  while (entry.authToken.requestStatus === RequestStatus.IN_PROGRESS) {\n    // generateAuthToken still in progress.\n    await sleep(100);\n\n    entry = await updateAuthTokenRequest(dependencies.appConfig);\n  }\n\n  const authToken = entry.authToken;\n  if (authToken.requestStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    return refreshAuthToken(dependencies, forceRefresh);\n  } else {\n    return authToken;\n  }\n}\n\n/**\n * Called only if there is a GenerateAuthToken request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * GenerateAuthToken request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateAuthTokenRequest(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n      return {\n        ...oldEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n    }\n\n    return oldEntry;\n  });\n}\n\nasync function fetchAuthTokenFromServer(\n  dependencies: FirebaseDependencies,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  try {\n    const authToken = await generateAuthTokenRequest(\n      dependencies,\n      installationEntry\n    );\n    const updatedInstallationEntry: RegisteredInstallationEntry = {\n      ...installationEntry,\n      authToken\n    };\n    await set(dependencies.appConfig, updatedInstallationEntry);\n    return authToken;\n  } catch (e) {\n    if (\n      isServerError(e) &&\n      (e.customData.serverCode === 401 || e.customData.serverCode === 404)\n    ) {\n      // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n      // Generate a new ID next time.\n      await remove(dependencies.appConfig);\n    } else {\n      const updatedInstallationEntry: RegisteredInstallationEntry = {\n        ...installationEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n      await set(dependencies.appConfig, updatedInstallationEntry);\n    }\n    throw e;\n  }\n}\n\nfunction isEntryRegistered(\n  installationEntry: InstallationEntry | undefined\n): installationEntry is RegisteredInstallationEntry {\n  return (\n    installationEntry !== undefined &&\n    installationEntry.registrationStatus === RequestStatus.COMPLETED\n  );\n}\n\nfunction isAuthTokenValid(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.COMPLETED &&\n    !isAuthTokenExpired(authToken)\n  );\n}\n\nfunction isAuthTokenExpired(authToken: CompletedAuthToken): boolean {\n  const now = Date.now();\n  return (\n    now < authToken.creationTime ||\n    authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER\n  );\n}\n\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(\n  oldEntry: RegisteredInstallationEntry\n): RegisteredInstallationEntry {\n  const inProgressAuthToken: InProgressAuthToken = {\n    requestStatus: RequestStatus.IN_PROGRESS,\n    requestTime: Date.now()\n  };\n  return {\n    ...oldEntry,\n    authToken: inProgressAuthToken\n  };\n}\n\nfunction hasAuthTokenRequestTimedOut(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.IN_PROGRESS &&\n    authToken.requestTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { FirebaseDependencies } from '../interfaces/firebase-dependencies';\n\nexport async function getId(\n  dependencies: FirebaseDependencies\n): Promise<string> {\n  const { installationEntry, registrationPromise } = await getInstallationEntry(\n    dependencies.appConfig\n  );\n\n  if (registrationPromise) {\n    registrationPromise.catch(console.error);\n  } else {\n    // If the installation is already registered, update the authentication\n    // token if needed.\n    refreshAuthToken(dependencies).catch(console.error);\n  }\n\n  return installationEntry.fid;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseDependencies } from '../interfaces/firebase-dependencies';\n\nexport async function getToken(\n  dependencies: FirebaseDependencies,\n  forceRefresh = false\n): Promise<string> {\n  await completeInstallationRegistration(dependencies.appConfig);\n\n  // At this point we either have a Registered Installation in the DB, or we've\n  // already thrown an error.\n  const authToken = await refreshAuthToken(dependencies, forceRefresh);\n  return authToken.token;\n}\n\nasync function completeInstallationRegistration(\n  appConfig: AppConfig\n): Promise<void> {\n  const { registrationPromise } = await getInstallationEntry(appConfig);\n\n  if (registrationPromise) {\n    // A createInstallation request is in progress. Wait until it finishes.\n    await registrationPromise;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { RegisteredInstallationEntry } from '../interfaces/installation-entry';\nimport {\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function deleteInstallationRequest(\n  appConfig: AppConfig,\n  installationEntry: RegisteredInstallationEntry\n): Promise<void> {\n  const endpoint = getDeleteEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n  const request: RequestInit = {\n    method: 'DELETE',\n    headers\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (!response.ok) {\n    throw await getErrorFromResponse('Delete Installation', response);\n  }\n}\n\nfunction getDeleteEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deleteInstallationRequest } from '../api/delete-installation-request';\nimport { remove, update } from '../helpers/idb-manager';\nimport { FirebaseDependencies } from '../interfaces/firebase-dependencies';\nimport { RequestStatus } from '../interfaces/installation-entry';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport async function deleteInstallation(\n  dependencies: FirebaseDependencies\n): Promise<void> {\n  const { appConfig } = dependencies;\n\n  const entry = await update(appConfig, oldEntry => {\n    if (oldEntry && oldEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n      // Delete the unregistered entry without sending a deleteInstallation request.\n      return undefined;\n    }\n    return oldEntry;\n  });\n\n  if (entry) {\n    if (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n      // Can't delete while trying to register.\n      throw ERROR_FACTORY.create(ErrorCode.DELETE_PENDING_REGISTRATION);\n    } else if (entry.registrationStatus === RequestStatus.COMPLETED) {\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      } else {\n        await deleteInstallationRequest(appConfig, entry);\n        await remove(appConfig);\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { addCallback, removeCallback } from '../helpers/fid-changed';\nimport { FirebaseDependencies } from '../interfaces/firebase-dependencies';\n\nexport type IdChangeCallbackFn = (installationId: string) => void;\nexport type IdChangeUnsubscribeFn = () => void;\n\n/**\n * Sets a new callback that will get called when Installation ID changes.\n * Returns an unsubscribe function that will remove the callback when called.\n */\nexport function onIdChange(\n  { appConfig }: FirebaseDependencies,\n  callback: IdChangeCallbackFn\n): IdChangeUnsubscribeFn {\n  addCallback(appConfig, callback);\n\n  return () => {\n    removeCallback(appConfig, callback);\n  };\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app-types';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseError } from '@firebase/util';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration Object');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: ReadonlyArray<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId',\n    'messagingSenderId'\n  ];\n\n  const { options } = app;\n  for (const keyName of configKeys) {\n    if (!options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: options.projectId!,\n    apiKey: options.apiKey!,\n    appId: options.appId!,\n    senderId: options.messagingSenderId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpsError, FunctionsErrorCode } from '@firebase/functions-types';\nimport { Serializer } from '../serializer';\nimport { HttpResponseBody } from './service';\n\n/**\n * Standard error codes for different ways a request can fail, as defined by:\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n *\n * This map is used primarily to convert from a backend error code string to\n * a client SDK error code string, and make sure it's in the supported set.\n */\nconst errorCodeMap: { [name: string]: FunctionsErrorCode } = {\n  OK: 'ok',\n  CANCELLED: 'cancelled',\n  UNKNOWN: 'unknown',\n  INVALID_ARGUMENT: 'invalid-argument',\n  DEADLINE_EXCEEDED: 'deadline-exceeded',\n  NOT_FOUND: 'not-found',\n  ALREADY_EXISTS: 'already-exists',\n  PERMISSION_DENIED: 'permission-denied',\n  UNAUTHENTICATED: 'unauthenticated',\n  RESOURCE_EXHAUSTED: 'resource-exhausted',\n  FAILED_PRECONDITION: 'failed-precondition',\n  ABORTED: 'aborted',\n  OUT_OF_RANGE: 'out-of-range',\n  UNIMPLEMENTED: 'unimplemented',\n  INTERNAL: 'internal',\n  UNAVAILABLE: 'unavailable',\n  DATA_LOSS: 'data-loss'\n};\n\n/**\n * An explicit error that can be thrown from a handler to send an error to the\n * client that called the function.\n */\nexport class HttpsErrorImpl extends Error implements HttpsError {\n  /**\n   * A standard error code that will be returned to the client. This also\n   * determines the HTTP status code of the response, as defined in code.proto.\n   */\n  readonly code: FunctionsErrorCode;\n\n  /**\n   * Extra data to be converted to JSON and included in the error response.\n   */\n  readonly details?: unknown;\n\n  constructor(code: FunctionsErrorCode, message?: string, details?: unknown) {\n    super(message);\n\n    // This is a workaround for a bug in TypeScript when extending Error:\n    // tslint:disable-next-line\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, HttpsErrorImpl.prototype);\n\n    this.code = code;\n    this.details = details;\n  }\n}\n\n/**\n * Takes an HTTP status code and returns the corresponding ErrorCode.\n * This is the standard HTTP status code -> error mapping defined in:\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n *\n * @param status An HTTP status code.\n * @return The corresponding ErrorCode, or ErrorCode.UNKNOWN if none.\n */\nfunction codeForHTTPStatus(status: number): FunctionsErrorCode {\n  // Make sure any successful status is OK.\n  if (status >= 200 && status < 300) {\n    return 'ok';\n  }\n  switch (status) {\n    case 0:\n      // This can happen if the server returns 500.\n      return 'internal';\n    case 400:\n      return 'invalid-argument';\n    case 401:\n      return 'unauthenticated';\n    case 403:\n      return 'permission-denied';\n    case 404:\n      return 'not-found';\n    case 409:\n      return 'aborted';\n    case 429:\n      return 'resource-exhausted';\n    case 499:\n      return 'cancelled';\n    case 500:\n      return 'internal';\n    case 501:\n      return 'unimplemented';\n    case 503:\n      return 'unavailable';\n    case 504:\n      return 'deadline-exceeded';\n    default: // ignore\n  }\n  return 'unknown';\n}\n\n/**\n * Takes an HTTP response and returns the corresponding Error, if any.\n */\nexport function _errorForResponse(\n  status: number,\n  bodyJSON: HttpResponseBody | null,\n  serializer: Serializer\n): Error | null {\n  let code = codeForHTTPStatus(status);\n\n  // Start with reasonable defaults from the status code.\n  let description: string = code;\n\n  let details: unknown = undefined;\n\n  // Then look through the body for explicit details.\n  try {\n    const errorJSON = bodyJSON && bodyJSON.error;\n    if (errorJSON) {\n      const status = errorJSON.status;\n      if (typeof status === 'string') {\n        if (!errorCodeMap[status]) {\n          // They must've included an unknown error code in the body.\n          return new HttpsErrorImpl('internal', 'internal');\n        }\n        code = errorCodeMap[status];\n\n        // TODO(klimt): Add better default descriptions for error enums.\n        // The default description needs to be updated for the new code.\n        description = status;\n      }\n\n      const message = errorJSON.message;\n      if (typeof message === 'string') {\n        description = message;\n      }\n\n      details = errorJSON.details;\n      if (details !== undefined) {\n        details = serializer.decode(details);\n      }\n    }\n  } catch (e) {\n    // If we couldn't parse explicit error data, that's fine.\n  }\n\n  if (code === 'ok') {\n    // Technically, there's an edge case where a developer could explicitly\n    // return an error code of OK, and we will treat it as success, but that\n    // seems reasonable.\n    return null;\n  }\n\n  return new HttpsErrorImpl(code, description, details);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  FirebaseMessaging,\n  FirebaseMessagingName\n} from '@firebase/messaging-types';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\n\n/**\n * The metadata that should be supplied with function calls.\n */\nexport interface Context {\n  authToken?: string;\n  instanceIdToken?: string;\n}\n\n/**\n * Helper class to get metadata that should be included with a function call.\n */\nexport class ContextProvider {\n  private auth: FirebaseAuthInternal | null = null;\n  private messaging: FirebaseMessaging | null = null;\n  constructor(\n    authProvider: Provider<FirebaseAuthInternalName>,\n    messagingProvider: Provider<FirebaseMessagingName>\n  ) {\n    this.auth = authProvider.getImmediate({ optional: true });\n    this.messaging = messagingProvider.getImmediate({\n      optional: true\n    });\n\n    if (!this.auth) {\n      authProvider.get().then(\n        auth => (this.auth = auth),\n        () => {\n          /* get() never rejects */\n        }\n      );\n    }\n\n    if (!this.messaging) {\n      messagingProvider.get().then(\n        messaging => (this.messaging = messaging),\n        () => {\n          /* get() never rejects */\n        }\n      );\n    }\n  }\n\n  async getAuthToken(): Promise<string | undefined> {\n    if (!this.auth) {\n      return undefined;\n    }\n\n    try {\n      const token = await this.auth.getToken();\n      if (!token) {\n        return undefined;\n      }\n      return token.accessToken;\n    } catch (e) {\n      // If there's any error when trying to get the auth token, leave it off.\n      return undefined;\n    }\n  }\n\n  async getInstanceIdToken(): Promise<string | undefined> {\n    if (\n      !this.messaging ||\n      !('Notification' in self) ||\n      Notification.permission !== 'granted'\n    ) {\n      return undefined;\n    }\n\n    try {\n      return this.messaging.getToken();\n    } catch (e) {\n      // We don't warn on this, because it usually means messaging isn't set up.\n      // console.warn('Failed to retrieve instance id token.', e);\n\n      // If there's any error when trying to get the token, leave it off.\n      return undefined;\n    }\n  }\n\n  async getContext(): Promise<Context> {\n    const authToken = await this.getAuthToken();\n    const instanceIdToken = await this.getInstanceIdToken();\n    return { authToken, instanceIdToken };\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst LONG_TYPE = 'type.googleapis.com/google.protobuf.Int64Value';\nconst UNSIGNED_LONG_TYPE = 'type.googleapis.com/google.protobuf.UInt64Value';\n\nfunction mapValues(\n  // { [k: string]: unknown } is no longer a wildcard assignment target after typescript 3.5\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  o: { [key: string]: any },\n  f: (arg0: unknown) => unknown\n): object {\n  const result: { [key: string]: unknown } = {};\n  for (const key in o) {\n    if (o.hasOwnProperty(key)) {\n      result[key] = f(o[key]);\n    }\n  }\n  return result;\n}\n\nexport class Serializer {\n  // Takes data and encodes it in a JSON-friendly way, such that types such as\n  // Date are preserved.\n  encode(data: unknown): unknown {\n    if (data == null) {\n      return null;\n    }\n    if (data instanceof Number) {\n      data = data.valueOf();\n    }\n    if (typeof data === 'number' && isFinite(data)) {\n      // Any number in JS is safe to put directly in JSON and parse as a double\n      // without any loss of precision.\n      return data;\n    }\n    if (data === true || data === false) {\n      return data;\n    }\n    if (Object.prototype.toString.call(data) === '[object String]') {\n      return data;\n    }\n    if (Array.isArray(data)) {\n      return data.map(x => this.encode(x));\n    }\n    if (typeof data === 'function' || typeof data === 'object') {\n      return mapValues(data!, x => this.encode(x));\n    }\n    // If we got this far, the data is not encodable.\n    throw new Error('Data cannot be encoded in JSON: ' + data);\n  }\n\n  // Takes data that's been encoded in a JSON-friendly form and returns a form\n  // with richer datatypes, such as Dates, etc.\n  decode(json: unknown): unknown {\n    if (json == null) {\n      return json;\n    }\n    if ((json as { [key: string]: unknown })['@type']) {\n      switch ((json as { [key: string]: unknown })['@type']) {\n        case LONG_TYPE:\n        // Fall through and handle this the same as unsigned.\n        case UNSIGNED_LONG_TYPE: {\n          // Technically, this could work return a valid number for malformed\n          // data if there was a number followed by garbage. But it's just not\n          // worth all the extra code to detect that case.\n          const value = Number((json as { [key: string]: unknown })['value']);\n          if (isNaN(value)) {\n            throw new Error('Data cannot be decoded from JSON: ' + json);\n          }\n          return value;\n        }\n        default: {\n          throw new Error('Data cannot be decoded from JSON: ' + json);\n        }\n      }\n    }\n    if (Array.isArray(json)) {\n      return json.map(x => this.decode(x));\n    }\n    if (typeof json === 'function' || typeof json === 'object') {\n      return mapValues(json!, x => this.decode(x));\n    }\n    // Anything else is safe to return.\n    return json;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { FirebaseService } from '@firebase/app-types/private';\nimport {\n  FirebaseFunctions,\n  HttpsCallable,\n  HttpsCallableResult,\n  HttpsCallableOptions\n} from '@firebase/functions-types';\nimport { _errorForResponse, HttpsErrorImpl } from './error';\nimport { ContextProvider } from '../context';\nimport { Serializer } from '../serializer';\nimport { Provider } from '@firebase/component';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { FirebaseMessagingName } from '@firebase/messaging-types';\n\n/**\n * The response to an http request.\n */\ninterface HttpResponse {\n  status: number;\n  json: HttpResponseBody | null;\n}\n/**\n * Describes the shape of the HttpResponse body.\n * It makes functions that would otherwise take {} able to access the\n * possible elements in the body more easily\n */\nexport interface HttpResponseBody {\n  data?: unknown;\n  result?: unknown;\n  error?: {\n    message?: unknown;\n    status?: unknown;\n    details?: unknown;\n  };\n}\n\n/**\n * Returns a Promise that will be rejected after the given duration.\n * The error will be of type HttpsErrorImpl.\n *\n * @param millis Number of milliseconds to wait before rejecting.\n */\nfunction failAfter(\n  millis: number\n): {\n  timer: number | NodeJS.Timeout;\n  promise: Promise<never>;\n} {\n  let timer!: number | NodeJS.Timeout;\n  const promise = new Promise<never>((_, reject) => {\n    timer = setTimeout(() => {\n      reject(new HttpsErrorImpl('deadline-exceeded', 'deadline-exceeded'));\n    }, millis);\n  });\n\n  return {\n    timer,\n    promise\n  };\n}\n\n/**\n * The main class for the Firebase Functions SDK.\n */\nexport class Service implements FirebaseFunctions, FirebaseService {\n  private readonly contextProvider: ContextProvider;\n  private readonly serializer = new Serializer();\n  private emulatorOrigin: string | null = null;\n  private cancelAllRequests: Promise<void>;\n  private deleteService!: () => void;\n  private region: string;\n  private customDomain: string | null;\n\n  /**\n   * Creates a new Functions service for the given app and (optional) region or custom domain.\n   * @param app_ The FirebaseApp to use.\n   * @param regionOrCustomDomain_ one of:\n   *   a) A region to call functions from, such as us-central1\n   *   b) A custom domain to use as a functions prefix, such as https://mydomain.com\n   */\n  constructor(\n    private app_: FirebaseApp,\n    authProvider: Provider<FirebaseAuthInternalName>,\n    messagingProvider: Provider<FirebaseMessagingName>,\n    regionOrCustomDomain_: string = 'us-central1',\n    readonly fetchImpl: typeof fetch\n  ) {\n    this.contextProvider = new ContextProvider(authProvider, messagingProvider);\n    // Cancels all ongoing requests when resolved.\n    this.cancelAllRequests = new Promise(resolve => {\n      this.deleteService = () => {\n        return resolve();\n      };\n    });\n\n    // Resolve the region or custom domain overload by attempting to parse it.\n    try {\n      const url = new URL(regionOrCustomDomain_);\n      this.customDomain = url.origin;\n      this.region = 'us-central1';\n    } catch (e) {\n      this.customDomain = null;\n      this.region = regionOrCustomDomain_;\n    }\n  }\n\n  get app(): FirebaseApp {\n    return this.app_;\n  }\n\n  INTERNAL = {\n    delete: (): Promise<void> => {\n      return Promise.resolve(this.deleteService());\n    }\n  };\n\n  /**\n   * Returns the URL for a callable with the given name.\n   * @param name The name of the callable.\n   */\n  _url(name: string): string {\n    const projectId = this.app_.options.projectId;\n    if (this.emulatorOrigin !== null) {\n      const origin = this.emulatorOrigin;\n      return `${origin}/${projectId}/${this.region}/${name}`;\n    }\n\n    if (this.customDomain !== null) {\n      return `${this.customDomain}/${name}`;\n    }\n\n    return `https://${this.region}-${projectId}.cloudfunctions.net/${name}`;\n  }\n\n  /**\n   * Modify this instance to communicate with the Cloud Functions emulator.\n   *\n   * Note: this must be called before this instance has been used to do any operations.\n   *\n   * @param host The emulator host (ex: localhost)\n   * @param port The emulator port (ex: 5001)\n   */\n  useEmulator(host: string, port: number): void {\n    this.emulatorOrigin = `http://${host}:${port}`;\n  }\n\n  /**\n   * Changes this instance to point to a Cloud Functions emulator running\n   * locally. See https://firebase.google.com/docs/functions/local-emulator\n   *\n   * @deprecated Prefer the useEmulator(host, port) method.\n   * @param origin The origin of the local emulator, such as\n   * \"http://localhost:5005\".\n   */\n  useFunctionsEmulator(origin: string): void {\n    this.emulatorOrigin = origin;\n  }\n\n  /**\n   * Returns a reference to the callable https trigger with the given name.\n   * @param name The name of the trigger.\n   */\n  httpsCallable(name: string, options?: HttpsCallableOptions): HttpsCallable {\n    return data => {\n      return this.call(name, data, options || {});\n    };\n  }\n\n  /**\n   * Does an HTTP POST and returns the completed response.\n   * @param url The url to post to.\n   * @param body The JSON body of the post.\n   * @param headers The HTTP headers to include in the request.\n   * @return A Promise that will succeed when the request finishes.\n   */\n  private async postJSON(\n    url: string,\n    body: {},\n    headers: { [key: string]: string }\n  ): Promise<HttpResponse> {\n    headers['Content-Type'] = 'application/json';\n\n    let response: Response;\n    try {\n      response = await this.fetchImpl(url, {\n        method: 'POST',\n        body: JSON.stringify(body),\n        headers\n      });\n    } catch (e) {\n      // This could be an unhandled error on the backend, or it could be a\n      // network error. There's no way to know, since an unhandled error on the\n      // backend will fail to set the proper CORS header, and thus will be\n      // treated as a network error by fetch.\n      return {\n        status: 0,\n        json: null\n      };\n    }\n    let json: HttpResponseBody | null = null;\n    try {\n      json = await response.json();\n    } catch (e) {\n      // If we fail to parse JSON, it will fail the same as an empty body.\n    }\n    return {\n      status: response.status,\n      json\n    };\n  }\n\n  /**\n   * Calls a callable function asynchronously and returns the result.\n   * @param name The name of the callable trigger.\n   * @param data The data to pass as params to the function.s\n   */\n  private async call(\n    name: string,\n    data: unknown,\n    options: HttpsCallableOptions\n  ): Promise<HttpsCallableResult> {\n    const url = this._url(name);\n\n    // Encode any special types, such as dates, in the input data.\n    data = this.serializer.encode(data);\n    const body = { data };\n\n    // Add a header for the authToken.\n    const headers: { [key: string]: string } = {};\n    const context = await this.contextProvider.getContext();\n    if (context.authToken) {\n      headers['Authorization'] = 'Bearer ' + context.authToken;\n    }\n    if (context.instanceIdToken) {\n      headers['Firebase-Instance-ID-Token'] = context.instanceIdToken;\n    }\n\n    // Default timeout to 70s, but let the options override it.\n    const timeout = options.timeout || 70000;\n\n    const { timer, promise: failAfterPromise } = failAfter(timeout);\n\n    const response = await Promise.race([\n      clearTimeoutWrapper(timer, this.postJSON(url, body, headers)),\n      failAfterPromise,\n      clearTimeoutWrapper(timer, this.cancelAllRequests)\n    ]);\n\n    // If service was deleted, interrupted response throws an error.\n    if (!response) {\n      throw new HttpsErrorImpl(\n        'cancelled',\n        'Firebase Functions instance was deleted.'\n      );\n    }\n\n    // Check for an error status, regardless of http status.\n    const error = _errorForResponse(\n      response.status,\n      response.json,\n      this.serializer\n    );\n    if (error) {\n      throw error;\n    }\n\n    if (!response.json) {\n      throw new HttpsErrorImpl(\n        'internal',\n        'Response is not valid JSON object.'\n      );\n    }\n\n    let responseData = response.json.data;\n    // TODO(klimt): For right now, allow \"result\" instead of \"data\", for\n    // backwards compatibility.\n    if (typeof responseData === 'undefined') {\n      responseData = response.json.result;\n    }\n    if (typeof responseData === 'undefined') {\n      // Consider the response malformed.\n      throw new HttpsErrorImpl('internal', 'Response is missing data field.');\n    }\n\n    // Decode any special types, such as dates, in the returned data.\n    const decodedData = this.serializer.decode(responseData);\n\n    return { data: decodedData };\n  }\n}\n\nasync function clearTimeoutWrapper<T>(\n  timer: number | NodeJS.Timeout,\n  promise: Promise<T>\n): Promise<T> {\n  const result = await promise;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  clearTimeout(timer as any);\n  return result;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Service } from './api/service';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer\n} from '@firebase/component';\nimport { _FirebaseNamespace } from '@firebase/app-types/private';\n\n/**\n * Type constant for Firebase Functions.\n */\nconst FUNCTIONS_TYPE = 'functions';\n\nexport function registerFunctions(\n  instance: _FirebaseNamespace,\n  fetchImpl: typeof fetch\n): void {\n  const namespaceExports = {\n    // no-inline\n    Functions: Service\n  };\n\n  function factory(\n    container: ComponentContainer,\n    regionOrCustomDomain?: string\n  ): Service {\n    // Dependencies\n    const app = container.getProvider('app').getImmediate();\n    const authProvider = container.getProvider('auth-internal');\n    const messagingProvider = container.getProvider('messaging');\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return new Service(\n      app,\n      authProvider,\n      messagingProvider,\n      regionOrCustomDomain,\n      fetchImpl\n    );\n  }\n  instance.INTERNAL.registerComponent(\n    new Component(FUNCTIONS_TYPE, factory, ComponentType.PUBLIC)\n      .setServiceProps(namespaceExports)\n      .setMultipleInstances(true)\n  );\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n */\n\nimport {\n  CONSOLE_CAMPAIGN_ANALYTICS_ENABLED,\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME\n} from '../util/constants';\n\nexport interface MessagePayloadInternal {\n  notification?: NotificationPayloadInternal;\n  data?: unknown;\n  fcmOptions?: FcmOptionsInternal;\n  messageType?: MessageType;\n  isFirebaseMessaging?: boolean;\n  from: string;\n  // eslint-disable-next-line camelcase\n  collapse_key: string;\n}\n\nexport interface NotificationPayloadInternal extends NotificationOptions {\n  title: string;\n  // Supported in the Legacy Send API.\n  // See:https://firebase.google.com/docs/cloud-messaging/xmpp-server-ref.\n  // eslint-disable-next-line camelcase\n  click_action?: string;\n}\n\n// Defined in\n// https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#webpushfcmoptions. Note\n// that the keys are sent to the clients in snake cases which we need to convert to camel so it can\n// be exposed as a type to match the Firebase API convention.\nexport interface FcmOptionsInternal {\n  link?: string;\n\n  // eslint-disable-next-line camelcase\n  analytics_label?: string;\n}\n\nexport enum MessageType {\n  PUSH_RECEIVED = 'push-received',\n  NOTIFICATION_CLICKED = 'notification-clicked'\n}\n\n/** Additional data of a message sent from the FN Console. */\nexport interface ConsoleMessageData {\n  [CONSOLE_CAMPAIGN_ID]: string;\n  [CONSOLE_CAMPAIGN_TIME]: string;\n  [CONSOLE_CAMPAIGN_NAME]?: string;\n  [CONSOLE_CAMPAIGN_ANALYTICS_ENABLED]?: '1';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function arrayToBase64(array: Uint8Array | ArrayBuffer): string {\n  const uint8Array = new Uint8Array(array);\n  const base64String = btoa(String.fromCharCode(...uint8Array));\n  return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\nexport function base64ToArray(base64String: string): Uint8Array {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = (base64String + padding)\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n\n  const rawData = atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deleteDb, openDb } from 'idb';\n\nimport { TokenDetails } from '../interfaces/token-details';\nimport { arrayToBase64 } from './array-base64-translator';\n\n// https://github.com/firebase/firebase-js-sdk/blob/7857c212f944a2a9eb421fd4cb7370181bc034b5/packages/messaging/src/interfaces/token-details.ts\nexport interface V2TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: string | Uint8Array;\n  subscription: PushSubscription;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  createTime?: number;\n  endpoint?: string;\n  auth?: string;\n  p256dh?: string;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/6b5b15ce4ea3df5df5df8a8b33a4e41e249c7715/packages/messaging/src/interfaces/token-details.ts\nexport interface V3TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  endpoint: string;\n  auth: ArrayBuffer;\n  p256dh: ArrayBuffer;\n  createTime: number;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/9567dba664732f681fa7fe60f5b7032bb1daf4c9/packages/messaging/src/interfaces/token-details.ts\nexport interface V4TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  endpoint: string;\n  auth: ArrayBufferLike;\n  p256dh: ArrayBufferLike;\n  createTime: number;\n}\n\nconst OLD_DB_NAME = 'fcm_token_details_db';\n/**\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\n * callback is called for all versions of the old DB.\n */\nconst OLD_DB_VERSION = 5;\nconst OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\n\nexport async function migrateOldDatabase(\n  senderId: string\n): Promise<TokenDetails | null> {\n  if ('databases' in indexedDB) {\n    // indexedDb.databases() is an IndexedDB v3 API and does not exist in all browsers. TODO: Remove\n    // typecast when it lands in TS types.\n    const databases = await (indexedDB as {\n      databases(): Promise<Array<{ name: string; version: number }>>;\n    }).databases();\n    const dbNames = databases.map(db => db.name);\n\n    if (!dbNames.includes(OLD_DB_NAME)) {\n      // old DB didn't exist, no need to open.\n      return null;\n    }\n  }\n\n  let tokenDetails: TokenDetails | null = null;\n\n  const db = await openDb(OLD_DB_NAME, OLD_DB_VERSION, async db => {\n    if (db.oldVersion < 2) {\n      // Database too old, skip migration.\n      return;\n    }\n\n    if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n      // Database did not exist. Nothing to do.\n      return;\n    }\n\n    const objectStore = db.transaction.objectStore(OLD_OBJECT_STORE_NAME);\n    const value = await objectStore.index('fcmSenderId').get(senderId);\n    await objectStore.clear();\n\n    if (!value) {\n      // No entry in the database, nothing to migrate.\n      return;\n    }\n\n    if (db.oldVersion === 2) {\n      const oldDetails = value as V2TokenDetails;\n\n      if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\n        return;\n      }\n\n      tokenDetails = {\n        token: oldDetails.fcmToken,\n        createTime: oldDetails.createTime ?? Date.now(),\n        subscriptionOptions: {\n          auth: oldDetails.auth,\n          p256dh: oldDetails.p256dh,\n          endpoint: oldDetails.endpoint,\n          swScope: oldDetails.swScope,\n          vapidKey:\n            typeof oldDetails.vapidKey === 'string'\n              ? oldDetails.vapidKey\n              : arrayToBase64(oldDetails.vapidKey)\n        }\n      };\n    } else if (db.oldVersion === 3) {\n      const oldDetails = value as V3TokenDetails;\n\n      tokenDetails = {\n        token: oldDetails.fcmToken,\n        createTime: oldDetails.createTime,\n        subscriptionOptions: {\n          auth: arrayToBase64(oldDetails.auth),\n          p256dh: arrayToBase64(oldDetails.p256dh),\n          endpoint: oldDetails.endpoint,\n          swScope: oldDetails.swScope,\n          vapidKey: arrayToBase64(oldDetails.vapidKey)\n        }\n      };\n    } else if (db.oldVersion === 4) {\n      const oldDetails = value as V4TokenDetails;\n\n      tokenDetails = {\n        token: oldDetails.fcmToken,\n        createTime: oldDetails.createTime,\n        subscriptionOptions: {\n          auth: arrayToBase64(oldDetails.auth),\n          p256dh: arrayToBase64(oldDetails.p256dh),\n          endpoint: oldDetails.endpoint,\n          swScope: oldDetails.swScope,\n          vapidKey: arrayToBase64(oldDetails.vapidKey)\n        }\n      };\n    }\n  });\n  db.close();\n\n  // Delete all old databases.\n  await deleteDb(OLD_DB_NAME);\n  await deleteDb('fcm_vapid_details_db');\n  await deleteDb('undefined');\n\n  return checkTokenDetails(tokenDetails) ? tokenDetails : null;\n}\n\nfunction checkTokenDetails(\n  tokenDetails: TokenDetails | null\n): tokenDetails is TokenDetails {\n  if (!tokenDetails || !tokenDetails.subscriptionOptions) {\n    return false;\n  }\n  const { subscriptionOptions } = tokenDetails;\n  return (\n    typeof tokenDetails.createTime === 'number' &&\n    tokenDetails.createTime > 0 &&\n    typeof tokenDetails.token === 'string' &&\n    tokenDetails.token.length > 0 &&\n    typeof subscriptionOptions.auth === 'string' &&\n    subscriptionOptions.auth.length > 0 &&\n    typeof subscriptionOptions.p256dh === 'string' &&\n    subscriptionOptions.p256dh.length > 0 &&\n    typeof subscriptionOptions.endpoint === 'string' &&\n    subscriptionOptions.endpoint.length > 0 &&\n    typeof subscriptionOptions.swScope === 'string' &&\n    subscriptionOptions.swScope.length > 0 &&\n    typeof subscriptionOptions.vapidKey === 'string' &&\n    subscriptionOptions.vapidKey.length > 0\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY, ENDPOINT } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\n\nexport interface ApiResponse {\n  token?: string;\n  error?: { message: string };\n}\n\nexport interface ApiRequestBody {\n  web: {\n    endpoint: string;\n    p256dh: string;\n    auth: string;\n    applicationPubKey?: string;\n  };\n}\n\nexport async function requestGetToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(subscriptionOptions);\n\n  const subscribeOptions = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      getEndpoint(firebaseDependencies.appConfig),\n      subscribeOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: err\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestUpdateToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(tokenDetails.subscriptionOptions!);\n\n  const updateOptions = {\n    method: 'PATCH',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${tokenDetails.token}`,\n      updateOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: err\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestDeleteToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  token: string\n): Promise<void> {\n  const headers = await getHeaders(firebaseDependencies);\n\n  const unsubscribeOptions = {\n    method: 'DELETE',\n    headers\n  };\n\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${token}`,\n      unsubscribeOptions\n    );\n    const responseData: ApiResponse = await response.json();\n    if (responseData.error) {\n      const message = responseData.error.message;\n      throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n        errorInfo: message\n      });\n    }\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n      errorInfo: err\n    });\n  }\n}\n\nfunction getEndpoint({ projectId }: AppConfig): string {\n  return `${ENDPOINT}/projects/${projectId!}/registrations`;\n}\n\nasync function getHeaders({\n  appConfig,\n  installations\n}: FirebaseInternalDependencies): Promise<Headers> {\n  const authToken = await installations.getToken();\n\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': appConfig.apiKey!,\n    'x-goog-firebase-installations-auth': `FIS ${authToken}`\n  });\n}\n\nfunction getBody({\n  p256dh,\n  auth,\n  endpoint,\n  vapidKey\n}: SubscriptionOptions): ApiRequestBody {\n  const body: ApiRequestBody = {\n    web: {\n      endpoint,\n      auth,\n      p256dh\n    }\n  };\n\n  if (vapidKey !== DEFAULT_VAPID_KEY) {\n    body.web.applicationPubKey = vapidKey;\n  }\n\n  return body;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\nimport {\n  arrayToBase64,\n  base64ToArray\n} from '../helpers/array-base64-translator';\nimport { dbGet, dbRemove, dbSet } from '../helpers/idb-manager';\nimport { requestDeleteToken, requestGetToken, requestUpdateToken } from './api';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\n\n/** UpdateRegistration will be called once every week. */\nconst TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\n\nexport async function getToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  swRegistration: ServiceWorkerRegistration,\n  vapidKey: string\n): Promise<string> {\n  if (Notification.permission !== 'granted') {\n    throw ERROR_FACTORY.create(ErrorCode.PERMISSION_BLOCKED);\n  }\n\n  // If a PushSubscription exists it's returned, otherwise a new subscription is generated and\n  // returned.\n  const pushSubscription = await getPushSubscription(swRegistration, vapidKey);\n  const tokenDetails = await dbGet(firebaseDependencies);\n\n  const subscriptionOptions: SubscriptionOptions = {\n    vapidKey,\n    swScope: swRegistration.scope,\n    endpoint: pushSubscription.endpoint,\n    auth: arrayToBase64(pushSubscription.getKey('auth')!),\n    p256dh: arrayToBase64(pushSubscription.getKey('p256dh')!)\n  };\n\n  if (!tokenDetails) {\n    // No token, get a new one.\n    return getNewToken(firebaseDependencies, subscriptionOptions);\n  } else if (\n    !isTokenValid(tokenDetails.subscriptionOptions!, subscriptionOptions)\n  ) {\n    // Invalid token, get a new one.\n    try {\n      await requestDeleteToken(firebaseDependencies, tokenDetails.token);\n    } catch (e) {\n      // Suppress errors because of #2364\n      console.warn(e);\n    }\n\n    return getNewToken(firebaseDependencies, subscriptionOptions);\n  } else if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\n    // Weekly token refresh\n    return updateToken(\n      {\n        token: tokenDetails.token,\n        createTime: Date.now(),\n        subscriptionOptions\n      },\n      firebaseDependencies,\n      swRegistration\n    );\n  } else {\n    // Valid token, nothing to do.\n    return tokenDetails.token;\n  }\n}\n\n/**\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\n * the push subscription if it exists.\n */\nexport async function deleteToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  swRegistration: ServiceWorkerRegistration\n): Promise<boolean> {\n  const tokenDetails = await dbGet(firebaseDependencies);\n  if (tokenDetails) {\n    await requestDeleteToken(firebaseDependencies, tokenDetails.token);\n    await dbRemove(firebaseDependencies);\n  }\n\n  // Unsubscribe from the push subscription.\n  const pushSubscription = await swRegistration.pushManager.getSubscription();\n  if (pushSubscription) {\n    return pushSubscription.unsubscribe();\n  }\n\n  // If there's no SW, consider it a success.\n  return true;\n}\n\nasync function updateToken(\n  tokenDetails: TokenDetails,\n  firebaseDependencies: FirebaseInternalDependencies,\n  swRegistration: ServiceWorkerRegistration\n): Promise<string> {\n  try {\n    const updatedToken = await requestUpdateToken(\n      firebaseDependencies,\n      tokenDetails\n    );\n\n    const updatedTokenDetails: TokenDetails = {\n      ...tokenDetails,\n      token: updatedToken,\n      createTime: Date.now()\n    };\n\n    await dbSet(firebaseDependencies, updatedTokenDetails);\n    return updatedToken;\n  } catch (e) {\n    await deleteToken(firebaseDependencies, swRegistration);\n    throw e;\n  }\n}\n\nasync function getNewToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const token = await requestGetToken(\n    firebaseDependencies,\n    subscriptionOptions\n  );\n  const tokenDetails: TokenDetails = {\n    token,\n    createTime: Date.now(),\n    subscriptionOptions\n  };\n  await dbSet(firebaseDependencies, tokenDetails);\n  return tokenDetails.token;\n}\n\n/**\n * Gets a PushSubscription for the current user.\n */\nasync function getPushSubscription(\n  swRegistration: ServiceWorkerRegistration,\n  vapidKey: string\n): Promise<PushSubscription> {\n  const subscription = await swRegistration.pushManager.getSubscription();\n  if (subscription) {\n    return subscription;\n  }\n  return swRegistration.pushManager.subscribe({\n    userVisibleOnly: true,\n    // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\n    // submitted to pushManager#subscribe must be of type Uint8Array.\n    applicationServerKey: base64ToArray(vapidKey)\n  });\n}\n\n/**\n * Checks if the saved tokenDetails object matches the configuration provided.\n */\nfunction isTokenValid(\n  dbOptions: SubscriptionOptions,\n  currentOptions: SubscriptionOptions\n): boolean {\n  const isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\n  const isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\n  const isAuthEqual = currentOptions.auth === dbOptions.auth;\n  const isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\n\n  return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MessagePayload } from '@firebase/messaging-types';\nimport { MessagePayloadInternal } from '../interfaces/internal-message-payload';\n\nexport function externalizePayload(\n  internalPayload: MessagePayloadInternal\n): MessagePayload {\n  const payload: MessagePayload = {\n    from: internalPayload.from,\n    // eslint-disable-next-line camelcase\n    collapseKey: internalPayload.collapse_key\n  } as MessagePayload;\n\n  propagateNotificationPayload(payload, internalPayload);\n  propagateDataPayload(payload, internalPayload);\n  propagateFcmOptions(payload, internalPayload);\n\n  return payload;\n}\n\nfunction propagateNotificationPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.notification) {\n    return;\n  }\n\n  payload.notification = {};\n\n  const title = messagePayloadInternal.notification!.title;\n  if (!!title) {\n    payload.notification!.title = title;\n  }\n\n  const body = messagePayloadInternal.notification!.body;\n  if (!!body) {\n    payload.notification!.body = body;\n  }\n\n  const image = messagePayloadInternal.notification!.image;\n  if (!!image) {\n    payload.notification!.image = image;\n  }\n}\n\nfunction propagateDataPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.data) {\n    return;\n  }\n\n  payload.data = messagePayloadInternal.data as { [key: string]: string };\n}\n\nfunction propagateFcmOptions(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.fcmOptions) {\n    return;\n  }\n\n  payload.fcmOptions = {};\n\n  const link = messagePayloadInternal.fcmOptions!.link;\n  if (!!link) {\n    payload.fcmOptions!.link = link;\n  }\n\n  // eslint-disable-next-line camelcase\n  const analyticsLabel = messagePayloadInternal.fcmOptions!.analytics_label;\n  if (!!analyticsLabel) {\n    payload.fcmOptions!.analyticsLabel = analyticsLabel;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSOLE_CAMPAIGN_ID } from '../util/constants';\nimport { ConsoleMessageData } from '../interfaces/internal-message-payload';\n\nexport function isConsoleMessage(data: unknown): data is ConsoleMessageData {\n  // This message has a campaign ID, meaning it was sent using the Firebase Console.\n  return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BACKGROUND_HANDLE_EXECUTION_TIME_LIMIT_MS,\n  DEFAULT_VAPID_KEY,\n  FCM_MSG,\n  FOREGROUND_HANDLE_PREPARATION_TIME_MS,\n  TAG\n} from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { FirebaseMessaging, MessagePayload } from '@firebase/messaging-types';\nimport {\n  MessagePayloadInternal,\n  MessageType,\n  NotificationPayloadInternal\n} from '../interfaces/internal-message-payload';\nimport { NextFn, Observer, Unsubscribe } from '@firebase/util';\nimport { deleteToken, getToken } from '../core/token-management';\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { FirebaseService } from '@firebase/app-types/private';\nimport { dbGet } from '../helpers/idb-manager';\nimport { externalizePayload } from '../helpers/externalizePayload';\nimport { isConsoleMessage } from '../helpers/is-console-message';\nimport { sleep } from '../helpers/sleep';\n\n// Let TS know that this is a service worker\ndeclare const self: ServiceWorkerGlobalScope;\n\nexport type BgMessageHandler = (payload: MessagePayload) => unknown;\n\nexport class SwController implements FirebaseMessaging, FirebaseService {\n  // A boolean flag to determine wether an app is using onBackgroundMessage or\n  // setBackgroundMessageHandler. onBackgroundMessage will receive a MessagePayload regardless of if\n  // a notification is displayed. Whereas, setBackgroundMessageHandler will swallow the\n  // MessagePayload if a NotificationPayload is included.\n  private isOnBackgroundMessageUsed: boolean | null = null;\n  private vapidKey: string | null = null;\n  private bgMessageHandler:\n    | null\n    | BgMessageHandler\n    | NextFn<MessagePayload>\n    | Observer<MessagePayload> = null;\n\n  constructor(\n    private readonly firebaseDependencies: FirebaseInternalDependencies\n  ) {\n    self.addEventListener('push', e => {\n      e.waitUntil(this.onPush(e));\n    });\n    self.addEventListener('pushsubscriptionchange', e => {\n      e.waitUntil(this.onSubChange(e));\n    });\n    self.addEventListener('notificationclick', e => {\n      e.waitUntil(this.onNotificationClick(e));\n    });\n  }\n\n  get app(): FirebaseApp {\n    return this.firebaseDependencies.app;\n  }\n\n  /**\n   * @deprecated. Use onBackgroundMessage(nextOrObserver: NextFn<object> | Observer<object>):\n   * Unsubscribe instead.\n   *\n   * Calling setBackgroundMessageHandler will opt in to some specific behaviors.\n   *\n   * 1.) If a notification doesn't need to be shown due to a window already being visible, then push\n   * messages will be sent to the page. 2.) If a notification needs to be shown, and the message\n   * contains no notification data this method will be called and the promise it returns will be\n   * passed to event.waitUntil. If you do not set this callback then all push messages will let and\n   * the developer can handle them in a their own 'push' event callback\n   *\n   * @param callback The callback to be called when a push message is received and a notification\n   * must be shown. The callback will be given the data from the push message.\n   */\n  setBackgroundMessageHandler(callback: BgMessageHandler): void {\n    this.isOnBackgroundMessageUsed = false;\n\n    if (!callback || typeof callback !== 'function') {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_BG_HANDLER);\n    }\n\n    this.bgMessageHandler = callback;\n  }\n\n  onBackgroundMessage(\n    nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n  ): Unsubscribe {\n    this.isOnBackgroundMessageUsed = true;\n    this.bgMessageHandler = nextOrObserver;\n\n    return () => {\n      this.bgMessageHandler = null;\n    };\n  }\n\n  // TODO: Remove getToken from SW Controller. Calling this from an old SW can cause all kinds of\n  // trouble.\n  async getToken(): Promise<string> {\n    if (!this.vapidKey) {\n      // Call getToken using the current VAPID key if there already is a token. This is needed\n      // because usePublicVapidKey was not available in SW. It will be removed when vapidKey becomes\n      // a parameter of getToken, or when getToken is removed from SW.\n      const tokenDetails = await dbGet(this.firebaseDependencies);\n      this.vapidKey =\n        tokenDetails?.subscriptionOptions?.vapidKey ?? DEFAULT_VAPID_KEY;\n    }\n\n    return getToken(\n      this.firebaseDependencies,\n      self.registration,\n      this.vapidKey\n    );\n  }\n\n  // TODO: Remove deleteToken from SW Controller. Calling this from an old SW can cause all kinds of\n  // trouble.\n  deleteToken(): Promise<boolean> {\n    return deleteToken(this.firebaseDependencies, self.registration);\n  }\n\n  requestPermission(): Promise<void> {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  // TODO: Remove this together with getToken from SW Controller.\n  usePublicVapidKey(vapidKey: string): void {\n    if (this.vapidKey !== null) {\n      throw ERROR_FACTORY.create(ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN);\n    }\n\n    if (typeof vapidKey !== 'string' || vapidKey.length === 0) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_VAPID_KEY);\n    }\n\n    this.vapidKey = vapidKey;\n  }\n\n  useServiceWorker(): void {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  onMessage(): Unsubscribe {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  onTokenRefresh(): Unsubscribe {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  /**\n   * A handler for push events that shows notifications based on the content of the payload.\n   *\n   * The payload must be a JSON-encoded Object with a `notification` key. The value of the\n   * `notification` property will be used as the NotificationOptions object passed to\n   * showNotification. Additionally, the `title` property of the notification object will be used as\n   * the title.\n   *\n   * If there is no notification data in the payload then no notification will be shown.\n   */\n  async onPush(event: PushEvent): Promise<void> {\n    const internalPayload = getMessagePayloadInternal(event);\n    if (!internalPayload) {\n      console.debug(\n        TAG +\n          'failed to get parsed MessagePayload from the PushEvent. Skip handling the push.'\n      );\n      return;\n    }\n\n    // foreground handling: eventually passed to onMessage hook\n    const clientList = await getClientList();\n    if (hasVisibleClients(clientList)) {\n      return sendMessagePayloadInternalToWindows(clientList, internalPayload);\n    }\n\n    // background handling: display and pass to onBackgroundMessage hook\n    let isNotificationShown = false;\n    if (!!internalPayload.notification) {\n      await showNotification(wrapInternalPayload(internalPayload));\n      isNotificationShown = true;\n    }\n\n    // MessagePayload is only passed to `onBackgroundMessage`. Skip passing MessagePayload for\n    // the legacy `setBackgroundMessageHandler` to preserve the SDK behaviors.\n    if (\n      isNotificationShown === true &&\n      this.isOnBackgroundMessageUsed === false\n    ) {\n      return;\n    }\n\n    if (!!this.bgMessageHandler) {\n      const payload = externalizePayload(internalPayload);\n\n      if (typeof this.bgMessageHandler === 'function') {\n        this.bgMessageHandler(payload);\n      } else {\n        this.bgMessageHandler.next(payload);\n      }\n    }\n\n    // wait briefly to allow onBackgroundMessage to complete\n    await sleep(BACKGROUND_HANDLE_EXECUTION_TIME_LIMIT_MS);\n  }\n\n  async onSubChange(event: PushSubscriptionChangeEvent): Promise<void> {\n    const { newSubscription } = event;\n    if (!newSubscription) {\n      // Subscription revoked, delete token\n      await deleteToken(this.firebaseDependencies, self.registration);\n      return;\n    }\n\n    const tokenDetails = await dbGet(this.firebaseDependencies);\n    await deleteToken(this.firebaseDependencies, self.registration);\n    await getToken(\n      this.firebaseDependencies,\n      self.registration,\n      tokenDetails?.subscriptionOptions?.vapidKey ?? DEFAULT_VAPID_KEY\n    );\n  }\n\n  async onNotificationClick(event: NotificationEvent): Promise<void> {\n    const internalPayload: MessagePayloadInternal =\n      event.notification?.data?.[FCM_MSG];\n\n    if (!internalPayload) {\n      return;\n    } else if (event.action) {\n      // User clicked on an action button. This will allow developers to act on action button clicks\n      // by using a custom onNotificationClick listener that they define.\n      return;\n    }\n\n    // Prevent other listeners from receiving the event\n    event.stopImmediatePropagation();\n    event.notification.close();\n\n    // Note clicking on a notification with no link set will focus the Chrome's current tab.\n    const link = getLink(internalPayload);\n    if (!link) {\n      return;\n    }\n\n    // FM should only open/focus links from app's origin.\n    const url = new URL(link, self.location.href);\n    const originUrl = new URL(self.location.origin);\n\n    if (url.host !== originUrl.host) {\n      return;\n    }\n\n    let client = await getWindowClient(url);\n\n    if (!client) {\n      client = await self.clients.openWindow(link);\n\n      // Wait three seconds for the client to initialize and set up the message handler so that it\n      // can receive the message.\n      await sleep(FOREGROUND_HANDLE_PREPARATION_TIME_MS);\n    } else {\n      client = await client.focus();\n    }\n\n    if (!client) {\n      // Window Client will not be returned if it's for a third party origin.\n      return;\n    }\n\n    internalPayload.messageType = MessageType.NOTIFICATION_CLICKED;\n    internalPayload.isFirebaseMessaging = true;\n    return client.postMessage(internalPayload);\n  }\n}\n\nfunction wrapInternalPayload(\n  internalPayload: MessagePayloadInternal\n): NotificationPayloadInternal {\n  const wrappedInternalPayload: NotificationPayloadInternal = {\n    ...((internalPayload.notification as unknown) as NotificationPayloadInternal)\n  };\n\n  // Put the message payload under FCM_MSG name so we can identify the notification as being an FCM\n  // notification vs a notification from somewhere else (i.e. normal web push or developer generated\n  // notification).\n  wrappedInternalPayload.data = {\n    [FCM_MSG]: internalPayload\n  };\n\n  return wrappedInternalPayload;\n}\n\nfunction getMessagePayloadInternal({\n  data\n}: PushEvent): MessagePayloadInternal | null {\n  if (!data) {\n    return null;\n  }\n\n  try {\n    return data.json();\n  } catch (err) {\n    // Not JSON so not an FCM message.\n    return null;\n  }\n}\n\n/**\n * @param url The URL to look for when focusing a client.\n * @return Returns an existing window client or a newly opened WindowClient.\n */\nasync function getWindowClient(url: URL): Promise<WindowClient | null> {\n  const clientList = await getClientList();\n\n  for (const client of clientList) {\n    const clientUrl = new URL(client.url, self.location.href);\n\n    if (url.host === clientUrl.host) {\n      return client;\n    }\n  }\n\n  return null;\n}\n\n/**\n * @returns If there is currently a visible WindowClient, this method will resolve to true,\n * otherwise false.\n */\nfunction hasVisibleClients(clientList: WindowClient[]): boolean {\n  return clientList.some(\n    client =>\n      client.visibilityState === 'visible' &&\n      // Ignore chrome-extension clients as that matches the background pages of extensions, which\n      // are always considered visible for some reason.\n      !client.url.startsWith('chrome-extension://')\n  );\n}\n\nfunction sendMessagePayloadInternalToWindows(\n  clientList: WindowClient[],\n  internalPayload: MessagePayloadInternal\n): void {\n  internalPayload.isFirebaseMessaging = true;\n  internalPayload.messageType = MessageType.PUSH_RECEIVED;\n\n  for (const client of clientList) {\n    client.postMessage(internalPayload);\n  }\n}\n\nfunction getClientList(): Promise<WindowClient[]> {\n  return self.clients.matchAll({\n    type: 'window',\n    includeUncontrolled: true\n    // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\n  }) as Promise<WindowClient[]>;\n}\n\nfunction showNotification(\n  notificationPayloadInternal: NotificationPayloadInternal\n): Promise<void> {\n  // Note: Firefox does not support the maxActions property.\n  // https://developer.mozilla.org/en-US/docs/Web/API/notification/maxActions\n  const { actions } = notificationPayloadInternal;\n  const { maxActions } = Notification;\n  if (actions && maxActions && actions.length > maxActions) {\n    console.warn(\n      `This browser only supports ${maxActions} actions. The remaining actions will not be displayed.`\n    );\n  }\n\n  return self.registration.showNotification(\n    /* title= */ notificationPayloadInternal.title ?? '',\n    notificationPayloadInternal\n  );\n}\n\nfunction getLink(payload: MessagePayloadInternal): string | null {\n  // eslint-disable-next-line camelcase\n  const link = payload.fcmOptions?.link ?? payload.notification?.click_action;\n  if (link) {\n    return link;\n  }\n\n  if (isConsoleMessage(payload.data)) {\n    // Notification created in the Firebase Console. Redirect to origin.\n    return self.location.origin;\n  } else {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CONSOLE_CAMPAIGN_ANALYTICS_ENABLED,\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME,\n  DEFAULT_SW_PATH,\n  DEFAULT_SW_SCOPE,\n  DEFAULT_VAPID_KEY\n} from '../util/constants';\nimport {\n  ConsoleMessageData,\n  MessagePayloadInternal,\n  MessageType\n} from '../interfaces/internal-message-payload';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { NextFn, Observer, Unsubscribe } from '@firebase/util';\nimport { deleteToken, getToken } from '../core/token-management';\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { FirebaseMessaging } from '@firebase/messaging-types';\nimport { FirebaseService } from '@firebase/app-types/private';\nimport { isConsoleMessage } from '../helpers/is-console-message';\n\nexport class WindowController implements FirebaseMessaging, FirebaseService {\n  private vapidKey: string | null = null;\n  private swRegistration?: ServiceWorkerRegistration;\n  private onMessageCallback: NextFn<object> | Observer<object> | null = null;\n\n  constructor(\n    private readonly firebaseDependencies: FirebaseInternalDependencies\n  ) {\n    navigator.serviceWorker.addEventListener('message', e =>\n      this.messageEventListener(e)\n    );\n  }\n\n  get app(): FirebaseApp {\n    return this.firebaseDependencies.app;\n  }\n\n  private async messageEventListener(event: MessageEvent): Promise<void> {\n    const internalPayload = event.data as MessagePayloadInternal;\n\n    if (!internalPayload.isFirebaseMessaging) {\n      return;\n    }\n\n    // onMessageCallback is either a function or observer/subscriber.\n    // TODO: in the modularization release, have onMessage handle type MessagePayload as supposed to\n    // the legacy payload where some fields are in snake cases.\n    if (\n      this.onMessageCallback &&\n      internalPayload.messageType === MessageType.PUSH_RECEIVED\n    ) {\n      if (typeof this.onMessageCallback === 'function') {\n        this.onMessageCallback(\n          stripInternalFields(Object.assign({}, internalPayload))\n        );\n      } else {\n        this.onMessageCallback.next(Object.assign({}, internalPayload));\n      }\n    }\n\n    const dataPayload = internalPayload.data;\n\n    if (\n      isConsoleMessage(dataPayload) &&\n      dataPayload[CONSOLE_CAMPAIGN_ANALYTICS_ENABLED] === '1'\n    ) {\n      await this.logEvent(internalPayload.messageType!, dataPayload);\n    }\n  }\n\n  getVapidKey(): string | null {\n    return this.vapidKey;\n  }\n\n  getSwReg(): ServiceWorkerRegistration | undefined {\n    return this.swRegistration;\n  }\n\n  async getToken(options?: {\n    vapidKey?: string;\n    serviceWorkerRegistration?: ServiceWorkerRegistration;\n  }): Promise<string> {\n    if (Notification.permission === 'default') {\n      await Notification.requestPermission();\n    }\n\n    if (Notification.permission !== 'granted') {\n      throw ERROR_FACTORY.create(ErrorCode.PERMISSION_BLOCKED);\n    }\n\n    await this.updateVapidKey(options?.vapidKey);\n    await this.updateSwReg(options?.serviceWorkerRegistration);\n\n    return getToken(\n      this.firebaseDependencies,\n      this.swRegistration!,\n      this.vapidKey!\n    );\n  }\n\n  async updateVapidKey(vapidKey?: string | undefined): Promise<void> {\n    if (!!vapidKey) {\n      this.vapidKey = vapidKey;\n    } else if (!this.vapidKey) {\n      this.vapidKey = DEFAULT_VAPID_KEY;\n    }\n  }\n\n  async updateSwReg(\n    swRegistration?: ServiceWorkerRegistration | undefined\n  ): Promise<void> {\n    if (!swRegistration && !this.swRegistration) {\n      await this.registerDefaultSw();\n    }\n\n    if (!swRegistration && !!this.swRegistration) {\n      return;\n    }\n\n    if (!(swRegistration instanceof ServiceWorkerRegistration)) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_SW_REGISTRATION);\n    }\n\n    this.swRegistration = swRegistration;\n  }\n\n  private async registerDefaultSw(): Promise<void> {\n    try {\n      this.swRegistration = await navigator.serviceWorker.register(\n        DEFAULT_SW_PATH,\n        {\n          scope: DEFAULT_SW_SCOPE\n        }\n      );\n\n      // The timing when browser updates sw when sw has an update is unreliable by my experiment. It\n      // leads to version conflict when the SDK upgrades to a newer version in the main page, but sw\n      // is stuck with the old version. For example,\n      // https://github.com/firebase/firebase-js-sdk/issues/2590 The following line reliably updates\n      // sw if there was an update.\n      this.swRegistration.update().catch(() => {\n        /* it is non blocking and we don't care if it failed */\n      });\n    } catch (e) {\n      throw ERROR_FACTORY.create(ErrorCode.FAILED_DEFAULT_REGISTRATION, {\n        browserErrorMessage: e.message\n      });\n    }\n  }\n\n  async deleteToken(): Promise<boolean> {\n    if (!this.swRegistration) {\n      await this.registerDefaultSw();\n    }\n\n    return deleteToken(this.firebaseDependencies, this.swRegistration!);\n  }\n\n  /**\n   * Request permission if it is not currently granted.\n   *\n   * @return Resolves if the permission was granted, rejects otherwise.\n   *\n   * @deprecated Use Notification.requestPermission() instead.\n   * https://developer.mozilla.org/en-US/docs/Web/API/Notification/requestPermission\n   */\n  async requestPermission(): Promise<void> {\n    if (Notification.permission === 'granted') {\n      return;\n    }\n\n    const permissionResult = await Notification.requestPermission();\n    if (permissionResult === 'granted') {\n      return;\n    } else if (permissionResult === 'denied') {\n      throw ERROR_FACTORY.create(ErrorCode.PERMISSION_BLOCKED);\n    } else {\n      throw ERROR_FACTORY.create(ErrorCode.PERMISSION_DEFAULT);\n    }\n  }\n\n  /**\n   * @deprecated. Use getToken(options?: {vapidKey?: string; serviceWorkerRegistration?:\n   * ServiceWorkerRegistration;}): Promise<string> instead.\n   */\n  usePublicVapidKey(vapidKey: string): void {\n    if (this.vapidKey !== null) {\n      throw ERROR_FACTORY.create(ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN);\n    }\n\n    if (typeof vapidKey !== 'string' || vapidKey.length === 0) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_VAPID_KEY);\n    }\n\n    this.vapidKey = vapidKey;\n  }\n\n  /**\n   * @deprecated. Use getToken(options?: {vapidKey?: string; serviceWorkerRegistration?:\n   * ServiceWorkerRegistration;}): Promise<string> instead.\n   */\n  useServiceWorker(swRegistration: ServiceWorkerRegistration): void {\n    if (!(swRegistration instanceof ServiceWorkerRegistration)) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_SW_REGISTRATION);\n    }\n\n    if (this.swRegistration) {\n      throw ERROR_FACTORY.create(ErrorCode.USE_SW_AFTER_GET_TOKEN);\n    }\n\n    this.swRegistration = swRegistration;\n  }\n\n  /**\n   * @param nextOrObserver An observer object or a function triggered on message.\n   *\n   * @return The unsubscribe function for the observer.\n   */\n  onMessage(nextOrObserver: NextFn<object> | Observer<object>): Unsubscribe {\n    this.onMessageCallback = nextOrObserver;\n\n    return () => {\n      this.onMessageCallback = null;\n    };\n  }\n\n  setBackgroundMessageHandler(): void {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_SW);\n  }\n\n  onBackgroundMessage(): Unsubscribe {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_SW);\n  }\n\n  /**\n   * @deprecated No-op. It was initially designed with token rotation requests from server in mind.\n   * However, the plan to implement such feature was abandoned.\n   */\n  onTokenRefresh(): Unsubscribe {\n    return () => {};\n  }\n\n  private async logEvent(\n    messageType: MessageType,\n    data: ConsoleMessageData\n  ): Promise<void> {\n    const eventType = getEventType(messageType);\n    const analytics = await this.firebaseDependencies.analyticsProvider.get();\n    analytics.logEvent(eventType, {\n      /* eslint-disable camelcase */\n      message_id: data[CONSOLE_CAMPAIGN_ID],\n      message_name: data[CONSOLE_CAMPAIGN_NAME],\n      message_time: data[CONSOLE_CAMPAIGN_TIME],\n      message_device_time: Math.floor(Date.now() / 1000)\n      /* eslint-enable camelcase */\n    });\n  }\n}\n\nfunction getEventType(messageType: MessageType): string {\n  switch (messageType) {\n    case MessageType.NOTIFICATION_CLICKED:\n      return 'notification_open';\n    case MessageType.PUSH_RECEIVED:\n      return 'notification_foreground';\n    default:\n      throw new Error();\n  }\n}\n\nfunction stripInternalFields(\n  internalPayload: MessagePayloadInternal\n): MessagePayloadInternal {\n  delete internalPayload.messageType;\n  delete internalPayload.isFirebaseMessaging;\n  return internalPayload;\n}\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.idb = {}));\n}(this, function (exports) { 'use strict';\n\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  function openDb(name, version, upgradeCallback) {\n    var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n    var request = p.request;\n\n    if (request) {\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n    }\n\n    return p.then(function(db) {\n      return new DB(db);\n    });\n  }\n\n  function deleteDb(name) {\n    return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n  }\n\n  exports.openDb = openDb;\n  exports.deleteDb = deleteDb;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\n\nimport { MatDialog } from '@angular/material/dialog';\nimport { ForgetPasswordComponent } from './components/forget-password/forget-password.component';\n\n\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Router } from '@angular/router';\n\nimport firebase from 'firebase';\nimport { AuthService } from './services/auth.service';\n\nimport { WindowService } from './services/window.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  isOTP: boolean = true;\n  windowRef: any;\n  phoneNumber: string = \"+84\";\n\n  email: string = \"\";\n  password: any;\n  authError: any;\n\n  otp: string;\n\n\n  constructor(\n    public dialog: MatDialog,\n    private authMethod: AngularFireAuth,\n    private database: AngularFirestore,\n    private router: Router,\n    private windowService: WindowService,\n    private auth: AuthService\n  ) {\n    this.windowRef = this.windowService.windowRef;\n  }\n\n  ngOnInit(): void {\n    this.windowRef = this.windowService.windowRef;\n\n    this.auth.eventAuthError$.subscribe(data => {\n      this.authError = data;\n    })\n  }\n\n  logIn() {\n    console.log(\"click login\");\n    this.auth.logIn(this.email, this.password)\n  }\n\n  openForgetPass() {\n    this.dialog.open(ForgetPasswordComponent);\n  }\n\n\n\n}\n","<div class=\"login\">\n    <div class=\"container-fluid\">\n\n        <!-- Logo -->\n        <div class=\"logo\">\n\n        </div>\n        <div class=\"wrapper\">\n            <!-- Form -->\n            <div class=\"login__form\">\n                <!-- Title -->\n                <h2 class=\"login__form-title\">Chào mừng tới cửa hàng chúng tôi</h2>\n                <!-- Error text -->\n                <p class=\"error-text\">{{authError?.message}}</p>\n                <div class=\"container\">\n                    <div class=\"input__wrapper\">\n                        <!-- Icon -->\n                        <span class=\"material-icons\">\n                            email\n                        </span>\n                        <input type=\"email\" class=\"email\" [(ngModel)]=\"email\" placeholder=\"Nhập email của bạn\">\n                    </div>\n                    <div class=\"input__wrapper\">\n                        <input type=\"password\" class=\"password\" [(ngModel)]=\"password\"\n                            placeholder=\"Nhập mật khẩu của bạn\">\n                    </div>\n                </div>\n            </div>\n            <button class=\"signBtn btn\" (click)=\"logIn()\">Đăng nhập</button>\n\n            <!-- <p class=\"divider-text\">Hoặc</p> -->\n\n            <!-- <a class=\"passLogin\" *ngIf=\"isOTP\" (click)=\"isOTP = !isOTP\">Đăng nhập bằng mật khẩu</a> -->\n            <!-- <a class=\"otpLogin\" *ngIf=\"!isOTP\" (click)=\"isOTP = !isOTP\">Đăng nhập bằng mã OTP</a> -->\n            <a class=\"forgetPass\" (click)=\"openForgetPass()\">Quên mật khẩu?</a>\n\n            <!-- Register -->\n            <div class=\"register\">\n                Bạn chưa có tài khoản?\n                <a routerLink=\"/login/register\" class=\"register__link\">Đăng ký</a>\n            </div>\n        </div>\n    </div>\n</div>","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Firestore, loadBundle, namedQuery } from './export';\n\n/**\n * Prototype patches bundle loading to Firestore.\n */\nexport function registerBundle(instance: typeof Firestore): void {\n  instance.prototype.loadBundle = loadBundle;\n  instance.prototype.namedQuery = namedQuery;\n}\n\nregisterBundle(Firestore);\n"],"sourceRoot":"webpack:///"}