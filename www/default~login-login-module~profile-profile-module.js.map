{"version":3,"sources":["./src/app/login/services/auth.service.ts","../src/implementation/constants.ts","../src/implementation/error.ts","../src/implementation/string.ts","../src/implementation/taskenums.ts","../src/implementation/xhrio.ts","../src/implementation/xhrio_network.ts","../src/implementation/xhriopool.ts","../src/implementation/type.ts","../src/implementation/fs.ts","../src/implementation/blob.ts","../src/implementation/location.ts","../src/implementation/json.ts","../src/implementation/path.ts","../src/implementation/url.ts","../src/implementation/metadata.ts","../src/implementation/list.ts","../src/implementation/requestinfo.ts","../src/implementation/requests.ts","../src/implementation/observer.ts","../src/implementation/async.ts","../src/task.ts","../src/reference.ts","../compat/tasksnapshot.ts","../compat/task.ts","../compat/list.ts","../compat/reference.ts","../src/implementation/failrequest.ts","../src/implementation/backoff.ts","../src/implementation/request.ts","../src/service.ts","../compat/service.ts","../compat/index.ts","./src/app/shared/services/noti.service.ts"],"names":["fbsAsync","list","requestsList","getMetadata","requestsGetMetadata","updateMetadata","requestsUpdateMetadata","requestsGetDownloadUrl","deleteObject","requestsDeleteObject"],"mappings":"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","file":"default~login-login-module~profile-profile-module.js","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { NotificationsService } from '../../shared/services/noti.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private eventAuthError = new BehaviorSubject<string>(\"\");\n  eventAuthError$ = this.eventAuthError.asObservable();\n  newUser: any;\n\n  constructor(\n    private auth: AngularFireAuth,\n    private database: AngularFirestore,\n    private router: Router,\n    private notiService: NotificationsService\n  ) { }\n\n  getUserState() {\n    return this.auth.authState;\n  }\n\n  createUser(user) {\n    this.auth.createUserWithEmailAndPassword(user.email, user.password)\n      .then(userCredential => {\n        this.newUser = user;\n        console.log(userCredential)\n\n        userCredential.user.updateProfile(\n          {\n            displayName: user.fullName\n          }\n        );\n\n        this.insertUserData(userCredential)\n          .then(() => {\n            // Successfully create a user\n            this.router.navigate(['/login'])\n          })\n      })\n      .catch((err) => {\n        this.eventAuthError.next(err);\n      })\n\n  }\n\n  insertUserData(userCredential: firebase.default.auth.UserCredential) {\n    return this.database.doc(`Users/${userCredential.user.uid}`).set({\n      email: this.newUser.email,\n      fullName: this.newUser.fullName,\n      phone: this.newUser.phone,\n      address: this.newUser.address,\n    })\n  }\n\n  logIn(email: string, password: string) {\n    this.auth.signInWithEmailAndPassword(email, password)\n      .catch(err => {\n        this.eventAuthError.next(err)\n      })\n      .then(userCredential => {\n        if (userCredential) {\n          this.router.navigate(['/pages/profile'])\n          console.log(\"successfully logged in  \", userCredential)\n          this.notiService.success(\"Chào mừng \" + userCredential.user.displayName)\n        }\n      })\n  }\n\n  logOut() {\n    return this.auth.signOut();\n  }\n\n  resetPassword(email: string) {\n    return this.auth.sendPasswordResetEmail(email)\n      .catch(err => {\n        this.eventAuthError.next(err);\n      })\n      .then(() => {\n        console.log(\"sent email reset password!\")\n      })\n  }\n\n\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Constants used in the Firebase Storage library.\n */\n\n/**\n * Domain name for firebase storage.\n */\nexport const DEFAULT_HOST = 'firebasestorage.googleapis.com';\n\n/**\n * The key in Firebase config json for the storage bucket.\n */\nexport const CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n\n/**\n * 2 minutes\n *\n * The timeout for all operations except upload.\n */\nexport const DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n\n/**\n * 10 minutes\n *\n * The timeout for upload.\n */\nexport const DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\n/**\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\n * enough for us to use it directly.\n */\nexport const MIN_SAFE_INTEGER = -9007199254740991;\n","import { FirebaseError } from '@firebase/util';\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CONFIG_STORAGE_BUCKET_KEY } from './constants';\n\n/**\n * An error returned by the Firebase Storage SDK.\n * @public\n */\nexport class FirebaseStorageError extends FirebaseError {\n  /**\n   * Stores custom error data unque to FirebaseStorageError.\n   */\n  customData: { serverResponse: string | null } = { serverResponse: null };\n\n  /**\n   * @param code - A StorageErrorCode string to be prefixed with 'storage/' and\n   *  added to the end of the message.\n   * @param message  - Error message.\n   */\n  constructor(code: StorageErrorCode, message: string) {\n    super(\n      prependCode(code),\n      `Firebase Storage: ${message} (${prependCode(code)})`\n    );\n    // Without this, `instanceof FirebaseStorageError`, in tests for example,\n    // returns false.\n    Object.setPrototypeOf(this, FirebaseStorageError.prototype);\n  }\n\n  /**\n   * Compares a StorageErrorCode against this error's code, filtering out the prefix.\n   */\n  _codeEquals(code: StorageErrorCode): boolean {\n    return prependCode(code) === this.code;\n  }\n\n  /**\n   * Error message including serverResponse if available.\n   */\n  get message(): string {\n    if (this.customData.serverResponse) {\n      return `${this.message}\\n${this.customData.serverResponse}`;\n    } else {\n      return this.message;\n    }\n  }\n\n  /**\n   * Optional response message that was added by the server.\n   */\n  get serverResponse(): null | string {\n    return this.customData.serverResponse;\n  }\n\n  set serverResponse(serverResponse: string | null) {\n    this.customData.serverResponse = serverResponse;\n  }\n}\n\nexport const errors = {};\n\n/**\n * @public\n * Error codes that can be attached to `FirebaseStorageError`s.\n */\nexport const enum StorageErrorCode {\n  // Shared between all platforms\n  UNKNOWN = 'unknown',\n  OBJECT_NOT_FOUND = 'object-not-found',\n  BUCKET_NOT_FOUND = 'bucket-not-found',\n  PROJECT_NOT_FOUND = 'project-not-found',\n  QUOTA_EXCEEDED = 'quota-exceeded',\n  UNAUTHENTICATED = 'unauthenticated',\n  UNAUTHORIZED = 'unauthorized',\n  RETRY_LIMIT_EXCEEDED = 'retry-limit-exceeded',\n  INVALID_CHECKSUM = 'invalid-checksum',\n  CANCELED = 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME = 'invalid-event-name',\n  INVALID_URL = 'invalid-url',\n  INVALID_DEFAULT_BUCKET = 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET = 'no-default-bucket',\n  CANNOT_SLICE_BLOB = 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE = 'server-file-wrong-size',\n  NO_DOWNLOAD_URL = 'no-download-url',\n  INVALID_ARGUMENT = 'invalid-argument',\n  INVALID_ARGUMENT_COUNT = 'invalid-argument-count',\n  APP_DELETED = 'app-deleted',\n  INVALID_ROOT_OPERATION = 'invalid-root-operation',\n  INVALID_FORMAT = 'invalid-format',\n  INTERNAL_ERROR = 'internal-error',\n  UNSUPPORTED_ENVIRONMENT = 'unsupported-environment'\n}\n\nexport function prependCode(code: StorageErrorCode): string {\n  return 'storage/' + code;\n}\n\nexport function unknown(): FirebaseStorageError {\n  const message =\n    'An unknown error occurred, please check the error payload for ' +\n    'server response.';\n  return new FirebaseStorageError(StorageErrorCode.UNKNOWN, message);\n}\n\nexport function objectNotFound(path: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.OBJECT_NOT_FOUND,\n    \"Object '\" + path + \"' does not exist.\"\n  );\n}\n\nexport function bucketNotFound(bucket: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.BUCKET_NOT_FOUND,\n    \"Bucket '\" + bucket + \"' does not exist.\"\n  );\n}\n\nexport function projectNotFound(project: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.PROJECT_NOT_FOUND,\n    \"Project '\" + project + \"' does not exist.\"\n  );\n}\n\nexport function quotaExceeded(bucket: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.QUOTA_EXCEEDED,\n    \"Quota for bucket '\" +\n      bucket +\n      \"' exceeded, please view quota on \" +\n      'https://firebase.google.com/pricing/.'\n  );\n}\n\nexport function unauthenticated(): FirebaseStorageError {\n  const message =\n    'User is not authenticated, please authenticate using Firebase ' +\n    'Authentication and try again.';\n  return new FirebaseStorageError(StorageErrorCode.UNAUTHENTICATED, message);\n}\n\nexport function unauthorized(path: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.UNAUTHORIZED,\n    \"User does not have permission to access '\" + path + \"'.\"\n  );\n}\n\nexport function retryLimitExceeded(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.RETRY_LIMIT_EXCEEDED,\n    'Max retry time for operation exceeded, please try again.'\n  );\n}\n\nexport function invalidChecksum(\n  path: string,\n  checksum: string,\n  calculated: string\n): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.INVALID_CHECKSUM,\n    \"Uploaded/downloaded object '\" +\n      path +\n      \"' has checksum '\" +\n      checksum +\n      \"' which does not match '\" +\n      calculated +\n      \"'. Please retry the upload/download.\"\n  );\n}\n\nexport function canceled(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.CANCELED,\n    'User canceled the upload/download.'\n  );\n}\n\nexport function invalidEventName(name: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.INVALID_EVENT_NAME,\n    \"Invalid event name '\" + name + \"'.\"\n  );\n}\n\nexport function invalidUrl(url: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.INVALID_URL,\n    \"Invalid URL '\" + url + \"'.\"\n  );\n}\n\nexport function invalidDefaultBucket(bucket: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.INVALID_DEFAULT_BUCKET,\n    \"Invalid default bucket '\" + bucket + \"'.\"\n  );\n}\n\nexport function noDefaultBucket(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.NO_DEFAULT_BUCKET,\n    'No default bucket ' +\n      \"found. Did you set the '\" +\n      CONFIG_STORAGE_BUCKET_KEY +\n      \"' property when initializing the app?\"\n  );\n}\n\nexport function cannotSliceBlob(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.CANNOT_SLICE_BLOB,\n    'Cannot slice blob for upload. Please retry the upload.'\n  );\n}\n\nexport function serverFileWrongSize(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.SERVER_FILE_WRONG_SIZE,\n    'Server recorded incorrect upload file size, please retry the upload.'\n  );\n}\n\nexport function noDownloadURL(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.NO_DOWNLOAD_URL,\n    'The given file does not have any download URLs.'\n  );\n}\n\nexport function invalidArgument(message: string): FirebaseStorageError {\n  return new FirebaseStorageError(StorageErrorCode.INVALID_ARGUMENT, message);\n}\n\nexport function invalidArgumentCount(\n  argMin: number,\n  argMax: number,\n  fnName: string,\n  real: number\n): FirebaseStorageError {\n  let countPart;\n  let plural;\n  if (argMin === argMax) {\n    countPart = argMin;\n    plural = argMin === 1 ? 'argument' : 'arguments';\n  } else {\n    countPart = 'between ' + argMin + ' and ' + argMax;\n    plural = 'arguments';\n  }\n  return new FirebaseStorageError(\n    StorageErrorCode.INVALID_ARGUMENT_COUNT,\n    'Invalid argument count in `' +\n      fnName +\n      '`: Expected ' +\n      countPart +\n      ' ' +\n      plural +\n      ', received ' +\n      real +\n      '.'\n  );\n}\n\nexport function appDeleted(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.APP_DELETED,\n    'The Firebase app was deleted.'\n  );\n}\n\n/**\n * @param name - The name of the operation that was invalid.\n */\nexport function invalidRootOperation(name: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.INVALID_ROOT_OPERATION,\n    \"The operation '\" +\n      name +\n      \"' cannot be performed on a root reference, create a non-root \" +\n      \"reference using child, such as .child('file.png').\"\n  );\n}\n\n/**\n * @param format - The format that was not valid.\n * @param message - A message describing the format violation.\n */\nexport function invalidFormat(\n  format: string,\n  message: string\n): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.INVALID_FORMAT,\n    \"String does not match format '\" + format + \"': \" + message\n  );\n}\n\n/**\n * @param message - A message describing the internal error.\n */\nexport function unsupportedEnvironment(message: string): FirebaseStorageError {\n  throw new FirebaseStorageError(\n    StorageErrorCode.UNSUPPORTED_ENVIRONMENT,\n    message\n  );\n}\n\n/**\n * @param message - A message describing the internal error.\n */\nexport function internalError(message: string): FirebaseStorageError {\n  throw new FirebaseStorageError(\n    StorageErrorCode.INTERNAL_ERROR,\n    'Internal error: ' + message\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { unknown, invalidFormat } from './error';\n\n/**\n * An enumeration of the possible string formats for upload.\n * @public\n */\nexport type StringFormat = string;\n/**\n * An enumeration of the possible string formats for upload.\n * @public\n */\nexport const StringFormat = {\n  /**\n   * Indicates the string should be interpreted \"raw\", that is, as normal text.\n   * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte\n   * sequence.\n   * Example: The string 'Hello! \\\\ud83d\\\\ude0a' becomes the byte sequence\n   * 48 65 6c 6c 6f 21 20 f0 9f 98 8a\n   */\n  RAW: 'raw',\n  /**\n   * Indicates the string should be interpreted as base64-encoded data.\n   * Padding characters (trailing '='s) are optional.\n   * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence\n   * ad 69 8e fb e1 3a b7 bf eb 97\n   */\n  BASE64: 'base64',\n  /**\n   * Indicates the string should be interpreted as base64url-encoded data.\n   * Padding characters (trailing '='s) are optional.\n   * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence\n   * ad 69 8e fb e1 3a b7 bf eb 97\n   */\n  BASE64URL: 'base64url',\n  /**\n   * Indicates the string is a data URL, such as one obtained from\n   * canvas.toDataURL().\n   * Example: the string 'data:application/octet-stream;base64,aaaa'\n   * becomes the byte sequence\n   * 69 a6 9a\n   * (the content-type \"application/octet-stream\" is also applied, but can\n   * be overridden in the metadata object).\n   */\n  DATA_URL: 'data_url'\n};\n\nexport class StringData {\n  contentType: string | null;\n\n  constructor(public data: Uint8Array, contentType?: string | null) {\n    this.contentType = contentType || null;\n  }\n}\n\nexport function dataFromString(\n  format: StringFormat,\n  stringData: string\n): StringData {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n    case StringFormat.DATA_URL:\n      return new StringData(\n        dataURLBytes_(stringData),\n        dataURLContentType_(stringData)\n      );\n    default:\n    // do nothing\n  }\n\n  // assert(false);\n  throw unknown();\n}\n\nexport function utf8Bytes_(value: string): Uint8Array {\n  const b: number[] = [];\n  for (let i = 0; i < value.length; i++) {\n    let c = value.charCodeAt(i);\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | (c >> 6), 128 | (c & 63));\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          const valid =\n            i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            const hi = c;\n            const lo = value.charCodeAt(++i);\n            c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\n            b.push(\n              240 | (c >> 18),\n              128 | ((c >> 12) & 63),\n              128 | ((c >> 6) & 63),\n              128 | (c & 63)\n            );\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\n          }\n        }\n      }\n    }\n  }\n  return new Uint8Array(b);\n}\n\nexport function percentEncodedBytes_(value: string): Uint8Array {\n  let decoded;\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n  return utf8Bytes_(decoded);\n}\n\nexport function base64Bytes_(format: StringFormat, value: string): Uint8Array {\n  switch (format) {\n    case StringFormat.BASE64: {\n      const hasMinus = value.indexOf('-') !== -1;\n      const hasUnder = value.indexOf('_') !== -1;\n      if (hasMinus || hasUnder) {\n        const invalidChar = hasMinus ? '-' : '_';\n        throw invalidFormat(\n          format,\n          \"Invalid character '\" +\n            invalidChar +\n            \"' found: is it base64url encoded?\"\n        );\n      }\n      break;\n    }\n    case StringFormat.BASE64URL: {\n      const hasPlus = value.indexOf('+') !== -1;\n      const hasSlash = value.indexOf('/') !== -1;\n      if (hasPlus || hasSlash) {\n        const invalidChar = hasPlus ? '+' : '/';\n        throw invalidFormat(\n          format,\n          \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\"\n        );\n      }\n      value = value.replace(/-/g, '+').replace(/_/g, '/');\n      break;\n    }\n    default:\n    // do nothing\n  }\n  let bytes;\n  try {\n    bytes = atob(value);\n  } catch (e) {\n    throw invalidFormat(format, 'Invalid character found');\n  }\n  const array = new Uint8Array(bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n  return array;\n}\n\nclass DataURLParts {\n  base64: boolean = false;\n  contentType: string | null = null;\n  rest: string;\n\n  constructor(dataURL: string) {\n    const matches = dataURL.match(/^data:([^,]+)?,/);\n    if (matches === null) {\n      throw invalidFormat(\n        StringFormat.DATA_URL,\n        \"Must be formatted 'data:[<mediatype>][;base64],<data>\"\n      );\n    }\n    const middle = matches[1] || null;\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64\n        ? middle.substring(0, middle.length - ';base64'.length)\n        : middle;\n    }\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n}\n\nexport function dataURLBytes_(dataUrl: string): Uint8Array {\n  const parts = new DataURLParts(dataUrl);\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nexport function dataURLContentType_(dataUrl: string): string | null {\n  const parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s: string, end: string): boolean {\n  const longEnough = s.length >= end.length;\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Enumerations used for upload tasks.\n */\n\n/**\n * An event that is triggered on a task.\n */\nexport type TaskEvent = string;\n\n/**\n * An event that is triggered on a task.\n */\nexport const TaskEvent = {\n  /**\n   * For this event,\n   * <ul>\n   *   <li>The `next` function is triggered on progress updates and when the\n   *       task is paused/resumed with an `UploadTaskSnapshot` as the first\n   *       argument.</li>\n   *   <li>The `error` function is triggered if the upload is canceled or fails\n   *       for another reason.</li>\n   *   <li>The `complete` function is triggered if the upload completes\n   *       successfully.</li>\n   * </ul>\n   */\n  STATE_CHANGED: 'state_changed'\n};\n\n/**\n * Internal enum for task state.\n */\nexport const enum InternalTaskState {\n  RUNNING = 'running',\n  PAUSING = 'pausing',\n  PAUSED = 'paused',\n  SUCCESS = 'success',\n  CANCELING = 'canceling',\n  CANCELED = 'canceled',\n  ERROR = 'error'\n}\n\n/**\n * Represents the current state of a running upload.\n */\nexport type TaskState = string;\n\n/**\n * Represents the current state of a running upload.\n */\nexport const TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\n\nexport function taskStateFromInternalTaskState(\n  state: InternalTaskState\n): TaskState {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * XHR headers\n */\nexport interface Headers {\n  [name: string]: string | number;\n}\n\n/**\n * A lightweight wrapper around XMLHttpRequest with a\n * goog.net.XhrIo-like interface.\n */\nexport interface XhrIo {\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string | null,\n    headers?: Headers\n  ): Promise<XhrIo>;\n\n  getErrorCode(): ErrorCode;\n\n  getStatus(): number;\n\n  getResponseText(): string;\n\n  /**\n   * Abort the request.\n   */\n  abort(): void;\n\n  getResponseHeader(header: string): string | null;\n\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n}\n\n/**\n * Error codes for requests made by the the XhrIo wrapper.\n */\nexport enum ErrorCode {\n  NO_ERROR = 0,\n  NETWORK_ERROR = 1,\n  ABORT = 2\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Headers, XhrIo, ErrorCode } from './xhrio';\nimport { internalError } from './error';\n\n/**\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\n * doesn't work in React Native on Android.\n */\nexport class NetworkXhrIo implements XhrIo {\n  private xhr_: XMLHttpRequest;\n  private errorCode_: ErrorCode;\n  private sendPromise_: Promise<XhrIo>;\n  private sent_: boolean = false;\n\n  constructor() {\n    this.xhr_ = new XMLHttpRequest();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(resolve => {\n      this.xhr_.addEventListener('abort', () => {\n        this.errorCode_ = ErrorCode.ABORT;\n        resolve(this);\n      });\n      this.xhr_.addEventListener('error', () => {\n        this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve(this);\n      });\n      this.xhr_.addEventListener('load', () => {\n        resolve(this);\n      });\n    });\n  }\n\n  /**\n   * @override\n   */\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string,\n    headers?: Headers\n  ): Promise<XhrIo> {\n    if (this.sent_) {\n      throw internalError('cannot .send() more than once');\n    }\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n    if (headers !== undefined) {\n      for (const key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n    if (body !== undefined) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n    return this.sendPromise_;\n  }\n\n  /**\n   * @override\n   */\n  getErrorCode(): ErrorCode {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorCode() before sending');\n    }\n    return this.errorCode_;\n  }\n\n  /**\n   * @override\n   */\n  getStatus(): number {\n    if (!this.sent_) {\n      throw internalError('cannot .getStatus() before sending');\n    }\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getResponseText(): string {\n    if (!this.sent_) {\n      throw internalError('cannot .getResponseText() before sending');\n    }\n    return this.xhr_.responseText;\n  }\n\n  /**\n   * Aborts the request.\n   * @override\n   */\n  abort(): void {\n    this.xhr_.abort();\n  }\n\n  /**\n   * @override\n   */\n  getResponseHeader(header: string): string | null {\n    return this.xhr_.getResponseHeader(header);\n  }\n\n  /**\n   * @override\n   */\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  }\n\n  /**\n   * @override\n   */\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Replacement for goog.net.XhrIoPool that works with fbs.XhrIo.\n */\nimport { XhrIo } from './xhrio';\nimport { NetworkXhrIo } from './xhrio_network';\n\n/**\n * Factory-like class for creating XhrIo instances.\n */\nexport class XhrIoPool {\n  createXhrIo(): XhrIo {\n    return new NetworkXhrIo();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { invalidArgument } from './error';\n\nexport function isJustDef<T>(p: T | null | undefined): p is T | null {\n  return p !== void 0;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isFunction(p: unknown): p is Function {\n  return typeof p === 'function';\n}\n\nexport function isNonArrayObject(p: unknown): boolean {\n  return typeof p === 'object' && !Array.isArray(p);\n}\n\nexport function isString(p: unknown): p is string {\n  return typeof p === 'string' || p instanceof String;\n}\n\nexport function isNativeBlob(p: unknown): p is Blob {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nexport function isNativeBlobDefined(): boolean {\n  return typeof Blob !== 'undefined';\n}\n\nexport function validateNumber(\n  argument: string,\n  minValue: number,\n  maxValue: number,\n  value: number\n): void {\n  if (value < minValue) {\n    throw invalidArgument(\n      `Invalid value for '${argument}'. Expected ${minValue} or greater.`\n    );\n  }\n  if (value > maxValue) {\n    throw invalidArgument(\n      `Invalid value for '${argument}'. Expected ${maxValue} or less.`\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Some methods copied from goog.fs.\n * We don't include goog.fs because it pulls in a bunch of Deferred code that\n * bloats the size of the released binary.\n */\nimport { isNativeBlobDefined } from './type';\nimport { StorageErrorCode, FirebaseStorageError } from './error';\n\nfunction getBlobBuilder(): typeof IBlobBuilder | undefined {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Concatenates one or more values together and converts them to a Blob.\n *\n * @param args The values that will make up the resulting blob.\n * @return The blob.\n */\nexport function getBlob(...args: Array<string | Blob | ArrayBuffer>): Blob {\n  const BlobBuilder = getBlobBuilder();\n  if (BlobBuilder !== undefined) {\n    const bb = new BlobBuilder();\n    for (let i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n    return bb.getBlob();\n  } else {\n    if (isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw new FirebaseStorageError(\n        StorageErrorCode.UNSUPPORTED_ENVIRONMENT,\n        \"This browser doesn't seem to support creating Blobs\"\n      );\n    }\n  }\n}\n\n/**\n * Slices the blob. The returned blob contains data from the start byte\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\n *\n * @param blob The blob to be sliced.\n * @param start Index of the starting byte.\n * @param end Index of the ending byte.\n * @return The blob slice or null if not supported.\n */\nexport function sliceBlob(blob: Blob, start: number, end: number): Blob | null {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Provides a Blob-like wrapper for various binary types (including the\n * native Blob type). This makes it possible to upload types like ArrayBuffers,\n * making uploads possible in environments without the native Blob type.\n */\nimport { sliceBlob, getBlob } from './fs';\nimport { StringFormat, dataFromString } from './string';\nimport { isNativeBlob, isNativeBlobDefined, isString } from './type';\n\n/**\n * @param opt_elideCopy - If true, doesn't copy mutable input data\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\n *     modified after this blob's construction.\n */\nexport class FbsBlob {\n  private data_!: Blob | Uint8Array;\n  private size_: number;\n  private type_: string;\n\n  constructor(data: Blob | Uint8Array | ArrayBuffer, elideCopy?: boolean) {\n    let size: number = 0;\n    let blobType: string = '';\n    if (isNativeBlob(data)) {\n      this.data_ = data as Blob;\n      size = (data as Blob).size;\n      blobType = (data as Blob).type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data as Uint8Array;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data as Uint8Array);\n      }\n      size = data.length;\n    }\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  size(): number {\n    return this.size_;\n  }\n\n  type(): string {\n    return this.type_;\n  }\n\n  slice(startByte: number, endByte: number): FbsBlob | null {\n    if (isNativeBlob(this.data_)) {\n      const realBlob = this.data_ as Blob;\n      const sliced = sliceBlob(realBlob, startByte, endByte);\n      if (sliced === null) {\n        return null;\n      }\n      return new FbsBlob(sliced);\n    } else {\n      const slice = new Uint8Array(\n        (this.data_ as Uint8Array).buffer,\n        startByte,\n        endByte - startByte\n      );\n      return new FbsBlob(slice, true);\n    }\n  }\n\n  static getBlob(...args: Array<string | FbsBlob>): FbsBlob | null {\n    if (isNativeBlobDefined()) {\n      const blobby: Array<Blob | Uint8Array | string> = args.map(\n        (val: string | FbsBlob): Blob | Uint8Array | string => {\n          if (val instanceof FbsBlob) {\n            return val.data_;\n          } else {\n            return val;\n          }\n        }\n      );\n      return new FbsBlob(getBlob.apply(null, blobby));\n    } else {\n      const uint8Arrays: Uint8Array[] = args.map(\n        (val: string | FbsBlob): Uint8Array => {\n          if (isString(val)) {\n            return dataFromString(StringFormat.RAW, val as string).data;\n          } else {\n            // Blobs don't exist, so this has to be a Uint8Array.\n            return (val as FbsBlob).data_ as Uint8Array;\n          }\n        }\n      );\n      let finalLength = 0;\n      uint8Arrays.forEach((array: Uint8Array): void => {\n        finalLength += array.byteLength;\n      });\n      const merged = new Uint8Array(finalLength);\n      let index = 0;\n      uint8Arrays.forEach((array: Uint8Array) => {\n        for (let i = 0; i < array.length; i++) {\n          merged[index++] = array[i];\n        }\n      });\n      return new FbsBlob(merged, true);\n    }\n  }\n\n  uploadData(): Blob | Uint8Array {\n    return this.data_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functionality related to the parsing/composition of bucket/\n * object location.\n */\n\nimport { invalidDefaultBucket, invalidUrl } from './error';\nimport { DEFAULT_HOST } from './constants';\n\n/**\n * Firebase Storage location data.\n */\nexport class Location {\n  private path_: string;\n\n  constructor(public readonly bucket: string, path: string) {\n    this.path_ = path;\n  }\n\n  get path(): string {\n    return this.path_;\n  }\n\n  get isRoot(): boolean {\n    return this.path.length === 0;\n  }\n\n  fullServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  }\n\n  bucketOnlyServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  }\n\n  static makeFromBucketSpec(bucketString: string): Location {\n    let bucketLocation;\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(bucketString);\n    }\n  }\n\n  static makeFromUrl(url: string): Location {\n    let location: Location | null = null;\n    const bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc: Location): void {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n    const gsPath = '(/(.*))?$';\n    const gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    const gsIndices = { bucket: 1, path: 3 };\n\n    function httpModify(loc: Location): void {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n    const version = 'v[A-Za-z0-9_]+';\n    const firebaseStorageHost = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\n    const firebaseStoragePath = '(/([^?#]*).*)?$';\n    const firebaseStorageRegExp = new RegExp(\n      `^https?://${firebaseStorageHost}/${version}/b/${bucketDomain}/o${firebaseStoragePath}`,\n      'i'\n    );\n    const firebaseStorageIndices = { bucket: 1, path: 3 };\n\n    const cloudStorageHost =\n      '(?:storage.googleapis.com|storage.cloud.google.com)';\n    const cloudStoragePath = '([^?#]*)';\n    const cloudStorageRegExp = new RegExp(\n      `^https?://${cloudStorageHost}/${bucketDomain}/${cloudStoragePath}`,\n      'i'\n    );\n    const cloudStorageIndices = { bucket: 1, path: 2 };\n\n    const groups = [\n      { regex: gsRegex, indices: gsIndices, postModify: gsModify },\n      {\n        regex: firebaseStorageRegExp,\n        indices: firebaseStorageIndices,\n        postModify: httpModify\n      },\n      {\n        regex: cloudStorageRegExp,\n        indices: cloudStorageIndices,\n        postModify: httpModify\n      }\n    ];\n    for (let i = 0; i < groups.length; i++) {\n      const group = groups[i];\n      const captures = group.regex.exec(url);\n      if (captures) {\n        const bucketValue = captures[group.indices.bucket];\n        let pathValue = captures[group.indices.path];\n        if (!pathValue) {\n          pathValue = '';\n        }\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n    if (location == null) {\n      throw invalidUrl(url);\n    }\n    return location;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isNonArrayObject } from './type';\n\n/**\n * Returns the Object resulting from parsing the given JSON, or null if the\n * given string does not represent a JSON object.\n */\nexport function jsonObjectOrNull(\n  s: string\n): { [name: string]: unknown } | null {\n  let obj;\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n  if (isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Contains helper methods for manipulating paths.\n */\n\n/**\n * @return Null if the path is already at the root.\n */\nexport function parent(path: string): string | null {\n  if (path.length === 0) {\n    return null;\n  }\n  const index = path.lastIndexOf('/');\n  if (index === -1) {\n    return '';\n  }\n  const newPath = path.slice(0, index);\n  return newPath;\n}\n\nexport function child(path: string, childPath: string): string {\n  const canonicalChildPath = childPath\n    .split('/')\n    .filter(component => component.length > 0)\n    .join('/');\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n\n/**\n * Returns the last component of a path.\n * '/foo/bar' -> 'bar'\n * '/foo/bar/baz/' -> 'baz/'\n * '/a' -> 'a'\n */\nexport function lastComponent(path: string): string {\n  const index = path.lastIndexOf('/', path.length - 2);\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functions to create and manipulate URLs for the server API.\n */\nimport { DEFAULT_HOST } from './constants';\nimport { UrlParams } from './requestinfo';\n\nexport function makeUrl(urlPart: string): string {\n  return `https://${DEFAULT_HOST}/v0${urlPart}`;\n}\n\nexport function makeQueryString(params: UrlParams): string {\n  const encode = encodeURIComponent;\n  let queryPart = '?';\n  for (const key in params) {\n    if (params.hasOwnProperty(key)) {\n      const nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  }\n\n  // Chop off the extra '&' or '?' on the end\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the metadata format\n */\nimport { Metadata } from '../metadata';\n\nimport { jsonObjectOrNull } from './json';\nimport { Location } from './location';\nimport { lastComponent } from './path';\nimport { isString } from './type';\nimport { makeUrl, makeQueryString } from './url';\nimport { Reference } from '../reference';\nimport { StorageService } from '../service';\n\nexport function noXform_<T>(metadata: Metadata, value: T): T {\n  return value;\n}\n\nclass Mapping<T> {\n  local: string;\n  writable: boolean;\n  xform: (p1: Metadata, p2?: T) => T | undefined;\n\n  constructor(\n    public server: string,\n    local?: string | null,\n    writable?: boolean,\n    xform?: ((p1: Metadata, p2?: T) => T | undefined) | null\n  ) {\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n}\ntype Mappings = Array<Mapping<string> | Mapping<number>>;\n\nexport { Mappings };\n\nlet mappings_: Mappings | null = null;\n\nexport function xformPath(fullPath: string | undefined): string | undefined {\n  if (!isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return lastComponent(fullPath);\n  }\n}\n\nexport function getMappings(): Mappings {\n  if (mappings_) {\n    return mappings_;\n  }\n  const mappings: Mappings = [];\n  mappings.push(new Mapping<string>('bucket'));\n  mappings.push(new Mapping<string>('generation'));\n  mappings.push(new Mapping<string>('metageneration'));\n  mappings.push(new Mapping<string>('name', 'fullPath', true));\n\n  function mappingsXformPath(\n    _metadata: Metadata,\n    fullPath: string | undefined\n  ): string | undefined {\n    return xformPath(fullPath);\n  }\n  const nameMapping = new Mapping<string>('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n\n  /**\n   * Coerces the second param to a number, if it is defined.\n   */\n  function xformSize(\n    _metadata: Metadata,\n    size?: number | string\n  ): number | undefined {\n    if (size !== undefined) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n  const sizeMapping = new Mapping<number>('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping<number>('timeCreated'));\n  mappings.push(new Mapping<string>('updated'));\n  mappings.push(new Mapping<string>('md5Hash', null, true));\n  mappings.push(new Mapping<string>('cacheControl', null, true));\n  mappings.push(new Mapping<string>('contentDisposition', null, true));\n  mappings.push(new Mapping<string>('contentEncoding', null, true));\n  mappings.push(new Mapping<string>('contentLanguage', null, true));\n  mappings.push(new Mapping<string>('contentType', null, true));\n  mappings.push(new Mapping<string>('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nexport function addRef(metadata: Metadata, service: StorageService): void {\n  function generateRef(): Reference {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const loc = new Location(bucket, path);\n    return service._makeStorageReference(loc);\n  }\n  Object.defineProperty(metadata, 'ref', { get: generateRef });\n}\n\nexport function fromResource(\n  service: StorageService,\n  resource: { [name: string]: unknown },\n  mappings: Mappings\n): Metadata {\n  const metadata: Metadata = {} as Metadata;\n  metadata['type'] = 'file';\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    metadata[mapping.local] = (mapping as Mapping<unknown>).xform(\n      metadata,\n      resource[mapping.server]\n    );\n  }\n  addRef(metadata, service);\n  return metadata;\n}\n\nexport function fromResourceString(\n  service: StorageService,\n  resourceString: string,\n  mappings: Mappings\n): Metadata | null {\n  const obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  const resource = obj as Metadata;\n  return fromResource(service, resource, mappings);\n}\n\nexport function downloadUrlFromResourceString(\n  metadata: Metadata,\n  resourceString: string\n): string | null {\n  const obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  if (!isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n  const tokens: string = obj['downloadTokens'] as string;\n  if (tokens.length === 0) {\n    return null;\n  }\n  const encode = encodeURIComponent;\n  const tokensList = tokens.split(',');\n  const urls = tokensList.map((token: string): string => {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    const base = makeUrl(urlPart);\n    const queryString = makeQueryString({\n      alt: 'media',\n      token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nexport function toResourceString(\n  metadata: Partial<Metadata>,\n  mappings: Mappings\n): string {\n  const resource: {\n    [prop: string]: unknown;\n  } = {};\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n  return JSON.stringify(resource);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the listOptions and listResult format\n */\nimport { Location } from './location';\nimport { jsonObjectOrNull } from './json';\nimport { ListResult } from '../list';\nimport { StorageService } from '../service';\n\n/**\n * Represents the simplified object metadata returned by List API.\n * Other fields are filtered because list in Firebase Rules does not grant\n * the permission to read the metadata.\n */\ninterface ListMetadataResponse {\n  name: string;\n  bucket: string;\n}\n\n/**\n * Represents the JSON response of List API.\n */\ninterface ListResultResponse {\n  prefixes: string[];\n  items: ListMetadataResponse[];\n  nextPageToken?: string;\n}\n\nconst PREFIXES_KEY = 'prefixes';\nconst ITEMS_KEY = 'items';\n\nfunction fromBackendResponse(\n  service: StorageService,\n  bucket: string,\n  resource: ListResultResponse\n): ListResult {\n  const listResult: ListResult = {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPageToken']\n  };\n  if (resource[PREFIXES_KEY]) {\n    for (const path of resource[PREFIXES_KEY]) {\n      const pathWithoutTrailingSlash = path.replace(/\\/$/, '');\n      const reference = service._makeStorageReference(\n        new Location(bucket, pathWithoutTrailingSlash)\n      );\n      listResult.prefixes.push(reference);\n    }\n  }\n\n  if (resource[ITEMS_KEY]) {\n    for (const item of resource[ITEMS_KEY]) {\n      const reference = service._makeStorageReference(\n        new Location(bucket, item['name'])\n      );\n      listResult.items.push(reference);\n    }\n  }\n  return listResult;\n}\n\nexport function fromResponseString(\n  service: StorageService,\n  bucket: string,\n  resourceString: string\n): ListResult | null {\n  const obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  const resource = (obj as unknown) as ListResultResponse;\n  return fromBackendResponse(service, bucket, resource);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FirebaseStorageError } from './error';\nimport { Headers, XhrIo } from './xhrio';\n\n/**\n * Type for url params stored in RequestInfo.\n */\nexport interface UrlParams {\n  [name: string]: string | number;\n}\n\nexport class RequestInfo<T> {\n  urlParams: UrlParams = {};\n  headers: Headers = {};\n  body: Blob | string | Uint8Array | null = null;\n\n  errorHandler:\n    | ((p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError)\n    | null = null;\n\n  /**\n   * Called with the current number of bytes uploaded and total size (-1 if not\n   * computable) of the request body (i.e. used to report upload progress).\n   */\n  progressCallback: ((p1: number, p2: number) => void) | null = null;\n  successCodes: number[] = [200];\n  additionalRetryCodes: number[] = [];\n\n  constructor(\n    public url: string,\n    public method: string,\n    /**\n     * Returns the value with which to resolve the request's promise. Only called\n     * if the request is successful. Throw from this function to reject the\n     * returned Request's promise with the thrown error.\n     * Note: The XhrIo passed to this function may be reused after this callback\n     * returns. Do not keep a reference to it in any way.\n     */\n    public handler: (p1: XhrIo, p2: string) => T,\n    public timeout: number\n  ) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods for interacting with the network.\n */\n\nimport { Metadata } from '../metadata';\nimport { ListResult } from '../list';\nimport { FbsBlob } from './blob';\nimport {\n  FirebaseStorageError,\n  cannotSliceBlob,\n  unauthenticated,\n  quotaExceeded,\n  unauthorized,\n  objectNotFound,\n  serverFileWrongSize,\n  unknown\n} from './error';\nimport { Location } from './location';\nimport {\n  Mappings,\n  fromResourceString,\n  downloadUrlFromResourceString,\n  toResourceString\n} from './metadata';\nimport { fromResponseString } from './list';\nimport { RequestInfo, UrlParams } from './requestinfo';\nimport { isString } from './type';\nimport { makeUrl } from './url';\nimport { XhrIo } from './xhrio';\nimport { StorageService } from '../service';\n\n/**\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\n */\nexport function handlerCheck(cndn: boolean): void {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nexport function metadataHandler(\n  service: StorageService,\n  mappings: Mappings\n): (p1: XhrIo, p2: string) => Metadata {\n  function handler(xhr: XhrIo, text: string): Metadata {\n    const metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata as Metadata;\n  }\n  return handler;\n}\n\nexport function listHandler(\n  service: StorageService,\n  bucket: string\n): (p1: XhrIo, p2: string) => ListResult {\n  function handler(xhr: XhrIo, text: string): ListResult {\n    const listResult = fromResponseString(service, bucket, text);\n    handlerCheck(listResult !== null);\n    return listResult as ListResult;\n  }\n  return handler;\n}\n\nexport function downloadUrlHandler(\n  service: StorageService,\n  mappings: Mappings\n): (p1: XhrIo, p2: string) => string | null {\n  function handler(xhr: XhrIo, text: string): string | null {\n    const metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return downloadUrlFromResourceString(metadata as Metadata, text);\n  }\n  return handler;\n}\n\nexport function sharedErrorHandler(\n  location: Location\n): (p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError {\n  function errorHandler(\n    xhr: XhrIo,\n    err: FirebaseStorageError\n  ): FirebaseStorageError {\n    let newErr;\n    if (xhr.getStatus() === 401) {\n      newErr = unauthenticated();\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function objectErrorHandler(\n  location: Location\n): (p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError {\n  const shared = sharedErrorHandler(location);\n\n  function errorHandler(\n    xhr: XhrIo,\n    err: FirebaseStorageError\n  ): FirebaseStorageError {\n    let newErr = shared(xhr, err);\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function getMetadata(\n  service: StorageService,\n  location: Location,\n  mappings: Mappings\n): RequestInfo<Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function list(\n  service: StorageService,\n  location: Location,\n  delimiter?: string,\n  pageToken?: string | null,\n  maxResults?: number | null\n): RequestInfo<ListResult> {\n  const urlParams: UrlParams = {};\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n  const urlPart = location.bucketOnlyServerUrl();\n  const url = makeUrl(urlPart);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    listHandler(service, location.bucket),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nexport function getDownloadUrl(\n  service: StorageService,\n  location: Location,\n  mappings: Mappings\n): RequestInfo<string | null> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    downloadUrlHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function updateMetadata(\n  service: StorageService,\n  location: Location,\n  metadata: Partial<Metadata>,\n  mappings: Mappings\n): RequestInfo<Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart);\n  const method = 'PATCH';\n  const body = toResourceString(metadata, mappings);\n  const headers = { 'Content-Type': 'application/json; charset=utf-8' };\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function deleteObject(\n  service: StorageService,\n  location: Location\n): RequestInfo<void> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart);\n  const method = 'DELETE';\n  const timeout = service.maxOperationRetryTime;\n\n  function handler(_xhr: XhrIo, _text: string): void {}\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function determineContentType_(\n  metadata: Metadata | null,\n  blob: FbsBlob | null\n): string {\n  return (\n    (metadata && metadata['contentType']) ||\n    (blob && blob.type()) ||\n    'application/octet-stream'\n  );\n}\n\nexport function metadataForUpload_(\n  location: Location,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): Metadata {\n  const metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n  return metadataClone;\n}\n\n/**\n * Prepare RequestInfo for uploads as Content-Type: multipart.\n */\nexport function multipartUpload(\n  service: StorageService,\n  location: Location,\n  mappings: Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<Metadata> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const headers: { [prop: string]: string } = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary(): string {\n    let str = '';\n    for (let i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n    return str;\n  }\n  const boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  const metadata_ = metadataForUpload_(location, blob, metadata);\n  const metadataString = toResourceString(metadata_, mappings);\n  const preBlobPart =\n    '--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\n    metadataString +\n    '\\r\\n--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: ' +\n    metadata_['contentType'] +\n    '\\r\\n\\r\\n';\n  const postBlobPart = '\\r\\n--' + boundary + '--';\n  const body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n  const urlParams: UrlParams = { name: metadata_['fullPath']! };\n  const url = makeUrl(urlPart);\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param current The number of bytes that have been uploaded so far.\n * @param total The total number of bytes in the upload.\n * @param opt_finalized True if the server has finished the upload.\n * @param opt_metadata The upload metadata, should\n *     only be passed if opt_finalized is true.\n */\nexport class ResumableUploadStatus {\n  finalized: boolean;\n  metadata: Metadata | null;\n\n  constructor(\n    public current: number,\n    public total: number,\n    finalized?: boolean,\n    metadata?: Metadata | null\n  ) {\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n}\n\nexport function checkResumeHeader_(xhr: XhrIo, allowed?: string[]): string {\n  let status: string | null = null;\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n  const allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status as string;\n}\n\nexport function createResumableUpload(\n  service: StorageService,\n  location: Location,\n  mappings: Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<string> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const metadataForUpload = metadataForUpload_(location, blob, metadata);\n  const urlParams: UrlParams = { name: metadataForUpload['fullPath']! };\n  const url = makeUrl(urlPart);\n  const method = 'POST';\n  const headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': blob.size(),\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType']!,\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  const body = toResourceString(metadataForUpload, mappings);\n  const timeout = service.maxUploadRetryTime;\n\n  function handler(xhr: XhrIo): string {\n    checkResumeHeader_(xhr);\n    let url;\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n    handlerCheck(isString(url));\n    return url as string;\n  }\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n */\nexport function getResumableUploadStatus(\n  service: StorageService,\n  location: Location,\n  url: string,\n  blob: FbsBlob\n): RequestInfo<ResumableUploadStatus> {\n  const headers = { 'X-Goog-Upload-Command': 'query' };\n\n  function handler(xhr: XhrIo): ResumableUploadStatus {\n    const status = checkResumeHeader_(xhr, ['active', 'final']);\n    let sizeString: string | null = null;\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    const size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * Any uploads via the resumable upload API must transfer a number of bytes\n * that is a multiple of this number.\n */\nexport const RESUMABLE_UPLOAD_CHUNK_SIZE: number = 256 * 1024;\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n * @param chunkSize Number of bytes to upload.\n * @param status The previous status.\n *     If not passed or null, we start from the beginning.\n * @throws fbs.Error If the upload is already complete, the passed in status\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\n *     for upload.\n */\nexport function continueResumableUpload(\n  location: Location,\n  service: StorageService,\n  url: string,\n  blob: FbsBlob,\n  chunkSize: number,\n  mappings: Mappings,\n  status?: ResumableUploadStatus | null,\n  progressCallback?: ((p1: number, p2: number) => void) | null\n): RequestInfo<ResumableUploadStatus> {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  const status_ = new ResumableUploadStatus(0, 0);\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n  const bytesLeft = status_.total - status_.current;\n  let bytesToUpload = bytesLeft;\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n  const startByte = status_.current;\n  const endByte = startByte + bytesToUpload;\n  const uploadCommand =\n    bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  const headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': status_.current\n  };\n  const body = blob.slice(startByte, endByte);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(xhr: XhrIo, text: string): ResumableUploadStatus {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    const uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    const newCurrent = status_.current + bytesToUpload;\n    const size = blob.size();\n    let metadata;\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(service, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n    return new ResumableUploadStatus(\n      newCurrent,\n      size,\n      uploadStatus === 'final',\n      metadata\n    );\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isFunction } from './type';\nimport { FirebaseStorageError } from './error';\n\n/**\n * Function that is called once for each value in a stream of values.\n */\nexport type NextFn<T> = (value: T) => void;\n\n/**\n * A function that is called with a `FirebaseStorageError`\n * if the event stream ends due to an error.\n */\nexport type ErrorFn = (error: FirebaseStorageError) => void;\n\n/**\n * A function that is called if the event stream ends normally.\n */\nexport type CompleteFn = () => void;\n\n/**\n * Unsubscribes from a stream.\n */\nexport type Unsubscribe = () => void;\n\n/**\n * An observer identical to the `Observer` defined in packages/util except the\n * error passed into the ErrorFn is specifically a `FirebaseStorageError`.\n */\nexport interface StorageObserver<T> {\n  /**\n   * Function that is called once for each value in the event stream.\n   */\n  next?: NextFn<T>;\n  /**\n   * A function that is called with a `FirebaseStorageError`\n   * if the event stream ends due to an error.\n   */\n  error?: ErrorFn;\n  /**\n   * A function that is called if the event stream ends normally.\n   */\n  complete?: CompleteFn;\n}\n\n/**\n * Subscribes to an event stream.\n */\nexport type Subscribe<T> = (\n  next?: NextFn<T> | StorageObserver<T>,\n  error?: ErrorFn,\n  complete?: CompleteFn\n) => Unsubscribe;\n\nexport class Observer<T> implements StorageObserver<T> {\n  next?: NextFn<T>;\n  error?: ErrorFn;\n  complete?: CompleteFn;\n\n  constructor(\n    nextOrObserver?: NextFn<T> | StorageObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ) {\n    const asFunctions =\n      isFunction(nextOrObserver) || error != null || complete != null;\n    if (asFunctions) {\n      this.next = nextOrObserver as NextFn<T>;\n      this.error = error;\n      this.complete = complete;\n    } else {\n      const observer = nextOrObserver as {\n        next?: NextFn<T>;\n        error?: ErrorFn;\n        complete?: CompleteFn;\n      };\n      this.next = observer.next;\n      this.error = observer.error;\n      this.complete = observer.complete;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a function that invokes f with its arguments asynchronously as a\n * microtask, i.e. as soon as possible after the current script returns back\n * into browser code.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(f: Function): Function {\n  return (...argsToForward: unknown[]) => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.resolve().then(() => f(...argsToForward));\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Defines types for interacting with blob transfer tasks.\n */\n\nimport { FbsBlob } from './implementation/blob';\nimport {\n  canceled,\n  StorageErrorCode,\n  FirebaseStorageError\n} from './implementation/error';\nimport {\n  InternalTaskState,\n  TaskEvent,\n  TaskState,\n  taskStateFromInternalTaskState\n} from './implementation/taskenums';\nimport { Metadata } from './metadata';\nimport {\n  CompleteFn,\n  ErrorFn,\n  Observer,\n  StorageObserver,\n  Subscribe,\n  Unsubscribe\n} from './implementation/observer';\nimport { Request } from './implementation/request';\nimport { UploadTaskSnapshot } from './tasksnapshot';\nimport { async as fbsAsync } from './implementation/async';\nimport { Mappings, getMappings } from './implementation/metadata';\nimport {\n  createResumableUpload,\n  getResumableUploadStatus,\n  RESUMABLE_UPLOAD_CHUNK_SIZE,\n  ResumableUploadStatus,\n  continueResumableUpload,\n  getMetadata,\n  multipartUpload\n} from './implementation/requests';\nimport { Reference } from './reference';\n\n/**\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\n * upload and manage callbacks for various events.\n * @public\n */\nexport class UploadTask {\n  private _ref: Reference;\n  /**\n   * The data to be uploaded.\n   */\n  _blob: FbsBlob;\n  /**\n   * Metadata related to the upload.\n   */\n  _metadata: Metadata | null;\n  private _mappings: Mappings;\n  /**\n   * Number of bytes transferred so far.\n   */\n  _transferred: number = 0;\n  private _needToFetchStatus: boolean = false;\n  private _needToFetchMetadata: boolean = false;\n  private _observers: Array<StorageObserver<UploadTaskSnapshot>> = [];\n  private _resumable: boolean;\n  /**\n   * Upload state.\n   */\n  _state: InternalTaskState;\n  private _error?: FirebaseStorageError = undefined;\n  private _uploadUrl?: string = undefined;\n  private _request?: Request<unknown> = undefined;\n  private _chunkMultiplier: number = 1;\n  private _errorHandler: (p1: FirebaseStorageError) => void;\n  private _metadataErrorHandler: (p1: FirebaseStorageError) => void;\n  private _resolve?: (p1: UploadTaskSnapshot) => void = undefined;\n  private _reject?: (p1: FirebaseStorageError) => void = undefined;\n  private _promise: Promise<UploadTaskSnapshot>;\n\n  /**\n   * @param ref - The firebaseStorage.Reference object this task came\n   *     from, untyped to avoid cyclic dependencies.\n   * @param blob - The blob to upload.\n   */\n  constructor(ref: Reference, blob: FbsBlob, metadata: Metadata | null = null) {\n    this._ref = ref;\n    this._blob = blob;\n    this._metadata = metadata;\n    this._mappings = getMappings();\n    this._resumable = this._shouldDoResumable(this._blob);\n    this._state = InternalTaskState.RUNNING;\n    this._errorHandler = error => {\n      this._request = undefined;\n      this._chunkMultiplier = 1;\n      if (error._codeEquals(StorageErrorCode.CANCELED)) {\n        this._needToFetchStatus = true;\n        this.completeTransitions_();\n      } else {\n        this._error = error;\n        this._transition(InternalTaskState.ERROR);\n      }\n    };\n    this._metadataErrorHandler = error => {\n      this._request = undefined;\n      if (error._codeEquals(StorageErrorCode.CANCELED)) {\n        this.completeTransitions_();\n      } else {\n        this._error = error;\n        this._transition(InternalTaskState.ERROR);\n      }\n    };\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n      this._start();\n    });\n\n    // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n    this._promise.then(null, () => {});\n  }\n\n  private _makeProgressCallback(): (p1: number, p2: number) => void {\n    const sizeBefore = this._transferred;\n    return loaded => this._updateProgress(sizeBefore + loaded);\n  }\n\n  private _shouldDoResumable(blob: FbsBlob): boolean {\n    return blob.size() > 256 * 1024;\n  }\n\n  private _start(): void {\n    if (this._state !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n    if (this._request !== undefined) {\n      return;\n    }\n    if (this._resumable) {\n      if (this._uploadUrl === undefined) {\n        this._createResumable();\n      } else {\n        if (this._needToFetchStatus) {\n          this._fetchStatus();\n        } else {\n          if (this._needToFetchMetadata) {\n            // Happens if we miss the metadata on upload completion.\n            this._fetchMetadata();\n          } else {\n            this._continueUpload();\n          }\n        }\n      }\n    } else {\n      this._oneShotUpload();\n    }\n  }\n\n  private _resolveToken(callback: (p1: string | null) => void): void {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._ref.storage._getAuthToken().then(authToken => {\n      switch (this._state) {\n        case InternalTaskState.RUNNING:\n          callback(authToken);\n          break;\n        case InternalTaskState.CANCELING:\n          this._transition(InternalTaskState.CANCELED);\n          break;\n        case InternalTaskState.PAUSING:\n          this._transition(InternalTaskState.PAUSED);\n          break;\n        default:\n      }\n    });\n  }\n\n  // TODO(andysoto): assert false\n\n  private _createResumable(): void {\n    this._resolveToken(authToken => {\n      const requestInfo = createResumableUpload(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings,\n        this._blob,\n        this._metadata\n      );\n      const createRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        authToken\n      );\n      this._request = createRequest;\n      createRequest.getPromise().then((url: string) => {\n        this._request = undefined;\n        this._uploadUrl = url;\n        this._needToFetchStatus = false;\n        this.completeTransitions_();\n      }, this._errorHandler);\n    });\n  }\n\n  private _fetchStatus(): void {\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this._uploadUrl as string;\n    this._resolveToken(authToken => {\n      const requestInfo = getResumableUploadStatus(\n        this._ref.storage,\n        this._ref._location,\n        url,\n        this._blob\n      );\n      const statusRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        authToken\n      );\n      this._request = statusRequest;\n      statusRequest.getPromise().then(status => {\n        status = status as ResumableUploadStatus;\n        this._request = undefined;\n        this._updateProgress(status.current);\n        this._needToFetchStatus = false;\n        if (status.finalized) {\n          this._needToFetchMetadata = true;\n        }\n        this.completeTransitions_();\n      }, this._errorHandler);\n    });\n  }\n\n  private _continueUpload(): void {\n    const chunkSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n    const status = new ResumableUploadStatus(\n      this._transferred,\n      this._blob.size()\n    );\n\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this._uploadUrl as string;\n    this._resolveToken(authToken => {\n      let requestInfo;\n      try {\n        requestInfo = continueResumableUpload(\n          this._ref._location,\n          this._ref.storage,\n          url,\n          this._blob,\n          chunkSize,\n          this._mappings,\n          status,\n          this._makeProgressCallback()\n        );\n      } catch (e) {\n        this._error = e;\n        this._transition(InternalTaskState.ERROR);\n        return;\n      }\n      const uploadRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        authToken\n      );\n      this._request = uploadRequest;\n      uploadRequest.getPromise().then((newStatus: ResumableUploadStatus) => {\n        this._increaseMultiplier();\n        this._request = undefined;\n        this._updateProgress(newStatus.current);\n        if (newStatus.finalized) {\n          this._metadata = newStatus.metadata;\n          this._transition(InternalTaskState.SUCCESS);\n        } else {\n          this.completeTransitions_();\n        }\n      }, this._errorHandler);\n    });\n  }\n\n  private _increaseMultiplier(): void {\n    const currentSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n\n    // Max chunk size is 32M.\n    if (currentSize < 32 * 1024 * 1024) {\n      this._chunkMultiplier *= 2;\n    }\n  }\n\n  private _fetchMetadata(): void {\n    this._resolveToken(authToken => {\n      const requestInfo = getMetadata(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings\n      );\n      const metadataRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        authToken\n      );\n      this._request = metadataRequest;\n      metadataRequest.getPromise().then(metadata => {\n        this._request = undefined;\n        this._metadata = metadata;\n        this._transition(InternalTaskState.SUCCESS);\n      }, this._metadataErrorHandler);\n    });\n  }\n\n  private _oneShotUpload(): void {\n    this._resolveToken(authToken => {\n      const requestInfo = multipartUpload(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings,\n        this._blob,\n        this._metadata\n      );\n      const multipartRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        authToken\n      );\n      this._request = multipartRequest;\n      multipartRequest.getPromise().then(metadata => {\n        this._request = undefined;\n        this._metadata = metadata;\n        this._updateProgress(this._blob.size());\n        this._transition(InternalTaskState.SUCCESS);\n      }, this._errorHandler);\n    });\n  }\n\n  private _updateProgress(transferred: number): void {\n    const old = this._transferred;\n    this._transferred = transferred;\n\n    // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n    if (this._transferred !== old) {\n      this._notifyObservers();\n    }\n  }\n\n  private _transition(state: InternalTaskState): void {\n    if (this._state === state) {\n      return;\n    }\n    switch (state) {\n      case InternalTaskState.CANCELING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n        break;\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this._state = state;\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n        break;\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        const wasPaused = this._state === InternalTaskState.PAUSED;\n        this._state = state;\n        if (wasPaused) {\n          this._notifyObservers();\n          this._start();\n        }\n        break;\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._error = canceled();\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      default: // Ignore\n    }\n  }\n\n  private completeTransitions_(): void {\n    switch (this._state) {\n      case InternalTaskState.PAUSING:\n        this._transition(InternalTaskState.PAUSED);\n        break;\n      case InternalTaskState.CANCELING:\n        this._transition(InternalTaskState.CANCELED);\n        break;\n      case InternalTaskState.RUNNING:\n        this._start();\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        break;\n    }\n  }\n\n  /**\n   * A snapshot of the current task state.\n   */\n  get snapshot(): UploadTaskSnapshot {\n    const externalState = taskStateFromInternalTaskState(this._state);\n    return {\n      bytesTransferred: this._transferred,\n      totalBytes: this._blob.size(),\n      state: externalState,\n      metadata: this._metadata!,\n      task: this,\n      ref: this._ref\n    };\n  }\n\n  /**\n   * Adds a callback for an event.\n   * @param type - The type of event to listen for.\n   * @param nextOrObserver -\n   *     The `next` function, which gets called for each item in\n   *     the event stream, or an observer object with some or all of these three\n   *     properties (`next`, `error`, `complete`).\n   * @param error - A function that gets called with a `FirebaseStorageError`\n   *     if the event stream ends due to an error.\n   * @param completed - A function that gets called if the\n   *     event stream ends normally.\n   * @returns\n   *     If only the event argument is passed, returns a function you can use to\n   *     add callbacks (see the examples above). If more than just the event\n   *     argument is passed, returns a function you can call to unregister the\n   *     callbacks.\n   */\n  on(\n    type: TaskEvent,\n    nextOrObserver?:\n      | StorageObserver<UploadTaskSnapshot>\n      | ((a: UploadTaskSnapshot) => unknown),\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe | Subscribe<UploadTaskSnapshot> {\n    const observer = new Observer(nextOrObserver, error, completed);\n    this._addObserver(observer);\n    return () => {\n      this._removeObserver(observer);\n    };\n  }\n\n  /**\n   * This object behaves like a Promise, and resolves with its snapshot data\n   * when the upload completes.\n   * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\n   * @param onRejected - The rejection callback.\n   */\n  then<U>(\n    onFulfilled?: ((value: UploadTaskSnapshot) => U | Promise<U>) | null,\n    onRejected?: ((error: FirebaseStorageError) => U | Promise<U>) | null\n  ): Promise<U> {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this._promise.then<U>(\n      onFulfilled as (value: UploadTaskSnapshot) => U | Promise<U>,\n      onRejected as ((error: unknown) => Promise<never>) | null\n    );\n  }\n\n  /**\n   * Equivalent to calling `then(null, onRejected)`.\n   */\n  catch<T>(\n    onRejected: (p1: FirebaseStorageError) => T | Promise<T>\n  ): Promise<T> {\n    return this.then(null, onRejected);\n  }\n\n  /**\n   * Adds the given observer.\n   */\n  private _addObserver(observer: Observer<UploadTaskSnapshot>): void {\n    this._observers.push(observer);\n    this._notifyObserver(observer);\n  }\n\n  /**\n   * Removes the given observer.\n   */\n  private _removeObserver(observer: Observer<UploadTaskSnapshot>): void {\n    const i = this._observers.indexOf(observer);\n    if (i !== -1) {\n      this._observers.splice(i, 1);\n    }\n  }\n\n  private _notifyObservers(): void {\n    this._finishPromise();\n    const observers = this._observers.slice();\n    observers.forEach(observer => {\n      this._notifyObserver(observer);\n    });\n  }\n\n  private _finishPromise(): void {\n    if (this._resolve !== undefined) {\n      let triggered = true;\n      switch (taskStateFromInternalTaskState(this._state)) {\n        case TaskState.SUCCESS:\n          fbsAsync(this._resolve.bind(null, this.snapshot))();\n          break;\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          const toCall = this._reject as (p1: FirebaseStorageError) => void;\n          fbsAsync(toCall.bind(null, this._error as FirebaseStorageError))();\n          break;\n        default:\n          triggered = false;\n          break;\n      }\n      if (triggered) {\n        this._resolve = undefined;\n        this._reject = undefined;\n      }\n    }\n  }\n\n  private _notifyObserver(observer: Observer<UploadTaskSnapshot>): void {\n    const externalState = taskStateFromInternalTaskState(this._state);\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          fbsAsync(observer.next.bind(observer, this.snapshot))();\n        }\n        break;\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          fbsAsync(observer.complete.bind(observer))();\n        }\n        break;\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          fbsAsync(\n            observer.error.bind(observer, this._error as FirebaseStorageError)\n          )();\n        }\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          fbsAsync(\n            observer.error.bind(observer, this._error as FirebaseStorageError)\n          )();\n        }\n    }\n  }\n\n  /**\n   * Resumes a paused task. Has no effect on a currently running or failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  resume(): boolean {\n    const valid =\n      this._state === InternalTaskState.PAUSED ||\n      this._state === InternalTaskState.PAUSING;\n    if (valid) {\n      this._transition(InternalTaskState.RUNNING);\n    }\n    return valid;\n  }\n\n  /**\n   * Pauses a currently running task. Has no effect on a paused or failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  pause(): boolean {\n    const valid = this._state === InternalTaskState.RUNNING;\n    if (valid) {\n      this._transition(InternalTaskState.PAUSING);\n    }\n    return valid;\n  }\n\n  /**\n   * Cancels a currently running or paused task. Has no effect on a complete or\n   * failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  cancel(): boolean {\n    const valid =\n      this._state === InternalTaskState.RUNNING ||\n      this._state === InternalTaskState.PAUSING;\n    if (valid) {\n      this._transition(InternalTaskState.CANCELING);\n    }\n    return valid;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the Firebase StorageReference class.\n */\n\nimport { FbsBlob } from './implementation/blob';\nimport { Location } from './implementation/location';\nimport { getMappings } from './implementation/metadata';\nimport { child, parent, lastComponent } from './implementation/path';\nimport {\n  list as requestsList,\n  getMetadata as requestsGetMetadata,\n  updateMetadata as requestsUpdateMetadata,\n  getDownloadUrl as requestsGetDownloadUrl,\n  deleteObject as requestsDeleteObject,\n  multipartUpload\n} from './implementation/requests';\nimport { ListOptions } from '@firebase/storage-types/exp';\nimport { StringFormat, dataFromString } from './implementation/string';\nimport { Metadata } from './metadata';\nimport { StorageService } from './service';\nimport { ListResult } from './list';\nimport { UploadTask } from './task';\nimport { invalidRootOperation, noDownloadURL } from './implementation/error';\nimport { validateNumber } from './implementation/type';\nimport { UploadResult } from './tasksnapshot';\n\n/**\n * Provides methods to interact with a bucket in the Firebase Storage service.\n * @public\n * @param _location - An fbs.location, or the URL at\n *     which to base this object, in one of the following forms:\n *         gs://<bucket>/<object-path>\n *         http[s]://firebasestorage.googleapis.com/\n *                     <api-version>/b/<bucket>/o/<object-path>\n *     Any query or fragment strings will be ignored in the http[s]\n *     format. If no value is passed, the storage object will use a URL based on\n *     the project ID of the base firebase.App instance.\n */\nexport class Reference {\n  _location: Location;\n\n  constructor(private _service: StorageService, location: string | Location) {\n    if (location instanceof Location) {\n      this._location = location;\n    } else {\n      this._location = Location.makeFromUrl(location);\n    }\n  }\n\n  /**\n   * Returns the URL for the bucket and path this object references,\n   *     in the form gs://<bucket>/<object-path>\n   * @override\n   */\n  toString(): string {\n    return 'gs://' + this._location.bucket + '/' + this._location.path;\n  }\n\n  protected _newRef(service: StorageService, location: Location): Reference {\n    return new Reference(service, location);\n  }\n\n  /**\n   * A reference to the root of this object's bucket.\n   */\n  get root(): Reference {\n    const location = new Location(this._location.bucket, '');\n    return this._newRef(this._service, location);\n  }\n\n  /**\n   * The name of the bucket containing this reference's object.\n   */\n  get bucket(): string {\n    return this._location.bucket;\n  }\n\n  /**\n   * The full path of this object.\n   */\n  get fullPath(): string {\n    return this._location.path;\n  }\n\n  /**\n   * The short name of this object, which is the last component of the full path.\n   * For example, if fullPath is 'full/path/image.png', name is 'image.png'.\n   */\n  get name(): string {\n    return lastComponent(this._location.path);\n  }\n\n  /**\n   * The `StorageService` instance this `StorageReference` is associated with.\n   */\n  get storage(): StorageService {\n    return this._service;\n  }\n\n  /**\n   * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if\n   * this reference is the root.\n   */\n  get parent(): Reference | null {\n    const newPath = parent(this._location.path);\n    if (newPath === null) {\n      return null;\n    }\n    const location = new Location(this._location.bucket, newPath);\n    return new Reference(this._service, location);\n  }\n\n  /**\n   * Utility function to throw an error in methods that do not accept a root reference.\n   */\n  _throwIfRoot(name: string): void {\n    if (this._location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  }\n}\n\n/**\n * Uploads data to this object's location.\n * The upload is not resumable.\n *\n * @param ref - StorageReference where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the newly uploaded data.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadBytes(\n  ref: Reference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: Metadata\n): Promise<UploadResult> {\n  ref._throwIfRoot('uploadBytes');\n  return ref.storage\n    ._getAuthToken()\n    .then(authToken => {\n      const requestInfo = multipartUpload(\n        ref.storage,\n        ref._location,\n        getMappings(),\n        new FbsBlob(data, true),\n        metadata\n      );\n      const multipartRequest = ref.storage._makeRequest(requestInfo, authToken);\n      return multipartRequest.getPromise();\n    })\n    .then(finalMetadata => {\n      return {\n        metadata: finalMetadata,\n        ref\n      };\n    });\n}\n\n/**\n * Uploads data to this object's location.\n * The upload can be paused and resumed, and exposes progress updates.\n * @public\n * @param ref - StorageReference where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the newly uploaded data.\n * @returns An UploadTask\n */\nexport function uploadBytesResumable(\n  ref: Reference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: Metadata\n): UploadTask {\n  ref._throwIfRoot('uploadBytesResumable');\n  return new UploadTask(ref, new FbsBlob(data), metadata);\n}\n\n/**\n * Uploads a string to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - StorageReference where string should be uploaded.\n * @param value - The string to upload.\n * @param format - The format of the string to upload.\n * @param metadata - Metadata for the newly uploaded string.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadString(\n  ref: Reference,\n  value: string,\n  format: StringFormat = StringFormat.RAW,\n  metadata?: Metadata\n): Promise<UploadResult> {\n  ref._throwIfRoot('uploadString');\n  const data = dataFromString(format, value);\n  const metadataClone = { ...metadata } as Metadata;\n  if (metadataClone['contentType'] == null && data.contentType != null) {\n    metadataClone['contentType'] = data.contentType!;\n  }\n  return uploadBytes(ref, data.data, metadataClone);\n}\n\n/**\n * List all items (files) and prefixes (folders) under this storage reference.\n *\n * This is a helper method for calling list() repeatedly until there are\n * no more results. The default pagination size is 1000.\n *\n * Note: The results may not be consistent if objects are changed while this\n * operation is running.\n *\n * Warning: listAll may potentially consume too many resources if there are\n * too many results.\n * @public\n * @param ref - StorageReference to get list from.\n *\n * @returns A Promise that resolves with all the items and prefixes under\n *      the current storage reference. `prefixes` contains references to\n *      sub-directories and `items` contains references to objects in this\n *      folder. `nextPageToken` is never returned.\n */\nexport function listAll(ref: Reference): Promise<ListResult> {\n  const accumulator: ListResult = {\n    prefixes: [],\n    items: []\n  };\n  return listAllHelper(ref, accumulator).then(() => accumulator);\n}\n\n/**\n * Separated from listAll because async functions can't use \"arguments\".\n * @param ref\n * @param accumulator\n * @param pageToken\n */\nasync function listAllHelper(\n  ref: Reference,\n  accumulator: ListResult,\n  pageToken?: string\n): Promise<void> {\n  const opt: ListOptions = {\n    // maxResults is 1000 by default.\n    pageToken\n  };\n  const nextPage = await list(ref, opt);\n  accumulator.prefixes.push(...nextPage.prefixes);\n  accumulator.items.push(...nextPage.items);\n  if (nextPage.nextPageToken != null) {\n    await listAllHelper(ref, accumulator, nextPage.nextPageToken);\n  }\n}\n\n/**\n * List items (files) and prefixes (folders) under this storage reference.\n *\n * List API is only available for Firebase Rules Version 2.\n *\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n * delimited folder structure.\n * Refer to GCS's List API if you want to learn more.\n *\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n * support objects whose paths end with \"/\" or contain two consecutive\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n * list() may fail if there are too many unsupported objects in the bucket.\n * @public\n *\n * @param ref - StorageReference to get list from.\n * @param options - See ListOptions for details.\n * @returns A Promise that resolves with the items and prefixes.\n *      `prefixes` contains references to sub-folders and `items`\n *      contains references to objects in this folder. `nextPageToken`\n *      can be used to get the rest of the results.\n */\nexport async function list(\n  ref: Reference,\n  options?: ListOptions | null\n): Promise<ListResult> {\n  if (options != null) {\n    if (typeof options.maxResults === 'number') {\n      validateNumber(\n        'options.maxResults',\n        /* minValue= */ 1,\n        /* maxValue= */ 1000,\n        options.maxResults\n      );\n    }\n  }\n  const authToken = await ref.storage._getAuthToken();\n  const op = options || {};\n  const requestInfo = requestsList(\n    ref.storage,\n    ref._location,\n    /*delimiter= */ '/',\n    op.pageToken,\n    op.maxResults\n  );\n  return ref.storage._makeRequest(requestInfo, authToken).getPromise();\n}\n\n/**\n * A promise that resolves with the metadata for this object. If this\n * object doesn't exist or metadata cannot be retreived, the promise is\n * rejected.\n * @public\n * @param ref - StorageReference to get metadata from.\n */\nexport async function getMetadata(ref: Reference): Promise<Metadata> {\n  ref._throwIfRoot('getMetadata');\n  const authToken = await ref.storage._getAuthToken();\n  const requestInfo = requestsGetMetadata(\n    ref.storage,\n    ref._location,\n    getMappings()\n  );\n  return ref.storage._makeRequest(requestInfo, authToken).getPromise();\n}\n\n/**\n * Updates the metadata for this object.\n * @public\n * @param ref - StorageReference to update metadata for.\n * @param metadata - The new metadata for the object.\n *     Only values that have been explicitly set will be changed. Explicitly\n *     setting a value to null will remove the metadata.\n * @returns A promise that resolves\n *     with the new metadata for this object.\n *     See `firebaseStorage.Reference.prototype.getMetadata`\n */\nexport async function updateMetadata(\n  ref: Reference,\n  metadata: Partial<Metadata>\n): Promise<Metadata> {\n  ref._throwIfRoot('updateMetadata');\n  const authToken = await ref.storage._getAuthToken();\n  const requestInfo = requestsUpdateMetadata(\n    ref.storage,\n    ref._location,\n    metadata,\n    getMappings()\n  );\n  return ref.storage._makeRequest(requestInfo, authToken).getPromise();\n}\n\n/**\n * Returns the download URL for the given Reference.\n * @public\n * @returns A promise that resolves with the download\n *     URL for this object.\n */\nexport async function getDownloadURL(ref: Reference): Promise<string> {\n  ref._throwIfRoot('getDownloadURL');\n  const authToken = await ref.storage._getAuthToken();\n  const requestInfo = requestsGetDownloadUrl(\n    ref.storage,\n    ref._location,\n    getMappings()\n  );\n  return ref.storage\n    ._makeRequest(requestInfo, authToken)\n    .getPromise()\n    .then(url => {\n      if (url === null) {\n        throw noDownloadURL();\n      }\n      return url;\n    });\n}\n\n/**\n * Deletes the object at this location.\n * @public\n * @param ref - StorageReference for object to delete.\n * @returns A promise that resolves if the deletion succeeds.\n */\nexport async function deleteObject(ref: Reference): Promise<void> {\n  ref._throwIfRoot('deleteObject');\n  const authToken = await ref.storage._getAuthToken();\n  const requestInfo = requestsDeleteObject(ref.storage, ref._location);\n  return ref.storage._makeRequest(requestInfo, authToken).getPromise();\n}\n\n/**\n * Returns reference for object obtained by appending `childPath` to `ref`.\n *\n * @param ref - StorageReference to get child of.\n * @param childPath - Child path from provided ref.\n * @returns A reference to the object obtained by\n * appending childPath, removing any duplicate, beginning, or trailing\n * slashes.\n */\nexport function _getChild(ref: Reference, childPath: string): Reference {\n  const newPath = child(ref._location.path, childPath);\n  const location = new Location(ref._location.bucket, newPath);\n  return new Reference(ref.storage, location);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as types from '@firebase/storage-types';\nimport { ReferenceCompat } from './reference';\nimport { UploadTaskCompat } from './task';\nimport { UploadTaskSnapshot } from '../src/tasksnapshot';\n\nexport class UploadTaskSnapshotCompat implements types.UploadTaskSnapshot {\n  constructor(\n    readonly _delegate: UploadTaskSnapshot,\n    readonly task: UploadTaskCompat,\n    readonly ref: ReferenceCompat\n  ) {}\n\n  get bytesTransferred(): number {\n    return this._delegate.bytesTransferred;\n  }\n  get metadata(): types.FullMetadata {\n    return this._delegate.metadata as types.FullMetadata;\n  }\n  get state(): string {\n    return this._delegate.state;\n  }\n  get totalBytes(): number {\n    return this._delegate.totalBytes;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UploadTask } from '../src/task';\nimport { UploadTaskSnapshotCompat } from './tasksnapshot';\nimport { TaskEvent } from '../src/implementation/taskenums';\nimport * as types from '@firebase/storage-types';\nimport {\n  StorageObserver,\n  ErrorFn,\n  CompleteFn,\n  Subscribe,\n  Unsubscribe\n} from '../src/implementation/observer';\nimport { UploadTaskSnapshot } from '../src/tasksnapshot';\nimport { ReferenceCompat } from './reference';\nimport { FirebaseStorageError } from '../src/implementation/error';\n\nexport class UploadTaskCompat implements types.UploadTask {\n  constructor(\n    private readonly _delegate: UploadTask,\n    private readonly _ref: ReferenceCompat\n  ) {}\n\n  get snapshot(): UploadTaskSnapshotCompat {\n    return new UploadTaskSnapshotCompat(\n      this._delegate.snapshot,\n      this,\n      this._ref\n    );\n  }\n\n  cancel = this._delegate.cancel.bind(this._delegate);\n  catch = this._delegate.catch.bind(this._delegate);\n  pause = this._delegate.pause.bind(this._delegate);\n  resume = this._delegate.resume.bind(this._delegate);\n\n  then(\n    onFulfilled?: ((a: UploadTaskSnapshotCompat) => unknown) | null,\n    onRejected?: ((a: FirebaseStorageError) => unknown) | null\n  ): Promise<unknown> {\n    return this._delegate.then(snapshot => {\n      if (onFulfilled) {\n        return onFulfilled(\n          new UploadTaskSnapshotCompat(snapshot, this, this._ref)\n        );\n      }\n    }, onRejected);\n  }\n\n  on(\n    type: TaskEvent,\n    nextOrObserver?:\n      | types.StorageObserver<UploadTaskSnapshotCompat>\n      | null\n      | ((a: UploadTaskSnapshotCompat) => unknown),\n    error?: ErrorFn | null,\n    completed?: CompleteFn | null\n  ): Unsubscribe | Subscribe<UploadTaskSnapshotCompat> {\n    let wrappedNextOrObserver:\n      | StorageObserver<UploadTaskSnapshot>\n      | undefined\n      | ((a: UploadTaskSnapshot) => unknown) = undefined;\n    if (!!nextOrObserver) {\n      if (typeof nextOrObserver === 'function') {\n        wrappedNextOrObserver = (taskSnapshot: UploadTaskSnapshot) =>\n          nextOrObserver(\n            new UploadTaskSnapshotCompat(taskSnapshot, this, this._ref)\n          );\n      } else {\n        wrappedNextOrObserver = {\n          next: !!nextOrObserver.next\n            ? (taskSnapshot: UploadTaskSnapshot) =>\n                nextOrObserver.next!(\n                  new UploadTaskSnapshotCompat(taskSnapshot, this, this._ref)\n                )\n            : undefined,\n          complete: nextOrObserver.complete || undefined,\n          error: nextOrObserver.error || undefined\n        };\n      }\n    }\n    return this._delegate.on(\n      type,\n      wrappedNextOrObserver,\n      error || undefined,\n      completed || undefined\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as types from '@firebase/storage-types';\nimport { ListResult } from '../src/list';\nimport { ReferenceCompat } from './reference';\nimport { StorageServiceCompat } from './service';\n\nexport class ListResultCompat implements types.ListResult {\n  constructor(\n    private readonly _delegate: ListResult,\n    private readonly _service: StorageServiceCompat\n  ) {}\n\n  get prefixes(): ReferenceCompat[] {\n    return this._delegate.prefixes.map(\n      ref => new ReferenceCompat(ref, this._service)\n    );\n  }\n  get items(): ReferenceCompat[] {\n    return this._delegate.items.map(\n      ref => new ReferenceCompat(ref, this._service)\n    );\n  }\n  get nextPageToken(): string | null {\n    return this._delegate.nextPageToken || null;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Reference,\n  _getChild,\n  uploadBytesResumable,\n  list,\n  listAll,\n  getDownloadURL,\n  getMetadata,\n  updateMetadata,\n  deleteObject\n} from '../src/reference';\nimport * as types from '@firebase/storage-types';\nimport { Metadata } from '../src/metadata';\nimport { dataFromString, StringFormat } from '../src/implementation/string';\nimport { UploadTaskCompat } from './task';\nimport { ListResultCompat } from './list';\nimport { StorageServiceCompat } from './service';\nimport { invalidRootOperation } from '../src/implementation/error';\nimport { UploadTask } from '../src/task';\nimport { FbsBlob } from '../src/implementation/blob';\n\nexport class ReferenceCompat implements types.Reference {\n  constructor(\n    private readonly _delegate: Reference,\n    public storage: StorageServiceCompat\n  ) {}\n\n  get name(): string {\n    return this._delegate.name;\n  }\n\n  get bucket(): string {\n    return this._delegate.bucket;\n  }\n\n  get fullPath(): string {\n    return this._delegate.fullPath;\n  }\n\n  toString(): string {\n    return this._delegate.toString();\n  }\n\n  /**\n   * @returns A reference to the object obtained by\n   * appending childPath, removing any duplicate, beginning, or trailing\n   * slashes.\n   */\n  child(childPath: string): types.Reference {\n    const reference = _getChild(this._delegate, childPath);\n    return new ReferenceCompat(reference, this.storage);\n  }\n\n  get root(): types.Reference {\n    return new ReferenceCompat(this._delegate.root, this.storage);\n  }\n\n  /**\n   * @returns A reference to the parent of the\n   * current object, or null if the current object is the root.\n   */\n  get parent(): types.Reference | null {\n    const reference = this._delegate.parent;\n    if (reference == null) {\n      return null;\n    }\n    return new ReferenceCompat(reference, this.storage);\n  }\n\n  /**\n   * Uploads a blob to this object's location.\n   * @param data - The blob to upload.\n   * @returns An UploadTask that lets you control and\n   * observe the upload.\n   */\n  put(\n    data: Blob | Uint8Array | ArrayBuffer,\n    metadata?: types.FullMetadata\n  ): types.UploadTask {\n    this._throwIfRoot('put');\n    return new UploadTaskCompat(\n      uploadBytesResumable(this._delegate, data, metadata as Metadata),\n      this\n    );\n  }\n\n  /**\n   * Uploads a string to this object's location.\n   * @param value - The string to upload.\n   * @param format - The format of the string to upload.\n   * @returns An UploadTask that lets you control and\n   * observe the upload.\n   */\n  putString(\n    value: string,\n    format: StringFormat = StringFormat.RAW,\n    metadata?: Metadata\n  ): types.UploadTask {\n    this._throwIfRoot('putString');\n    const data = dataFromString(format, value);\n    const metadataClone = { ...metadata } as Metadata;\n    if (metadataClone['contentType'] == null && data.contentType != null) {\n      metadataClone['contentType'] = data.contentType;\n    }\n    return new UploadTaskCompat(\n      new UploadTask(\n        this._delegate,\n        new FbsBlob(data.data, true),\n        metadataClone\n      ),\n      this\n    );\n  }\n\n  /**\n   * List all items (files) and prefixes (folders) under this storage reference.\n   *\n   * This is a helper method for calling list() repeatedly until there are\n   * no more results. The default pagination size is 1000.\n   *\n   * Note: The results may not be consistent if objects are changed while this\n   * operation is running.\n   *\n   * Warning: listAll may potentially consume too many resources if there are\n   * too many results.\n   *\n   * @returns A Promise that resolves with all the items and prefixes under\n   *  the current storage reference. `prefixes` contains references to\n   *  sub-directories and `items` contains references to objects in this\n   *  folder. `nextPageToken` is never returned.\n   */\n  listAll(): Promise<types.ListResult> {\n    return listAll(this._delegate).then(\n      r => new ListResultCompat(r, this.storage)\n    );\n  }\n\n  /**\n   * List items (files) and prefixes (folders) under this storage reference.\n   *\n   * List API is only available for Firebase Rules Version 2.\n   *\n   * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n   * delimited folder structure. Refer to GCS's List API if you want to learn more.\n   *\n   * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n   * support objects whose paths end with \"/\" or contain two consecutive\n   * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n   * list() may fail if there are too many unsupported objects in the bucket.\n   *\n   * @param options - See ListOptions for details.\n   * @returns A Promise that resolves with the items and prefixes.\n   * `prefixes` contains references to sub-folders and `items`\n   * contains references to objects in this folder. `nextPageToken`\n   * can be used to get the rest of the results.\n   */\n  list(options?: types.ListOptions | null): Promise<types.ListResult> {\n    return list(this._delegate, options).then(\n      r => new ListResultCompat(r, this.storage)\n    );\n  }\n\n  /**\n   * A promise that resolves with the metadata for this object. If this\n   * object doesn't exist or metadata cannot be retreived, the promise is\n   * rejected.\n   */\n  getMetadata(): Promise<types.FullMetadata> {\n    return getMetadata(this._delegate) as Promise<types.FullMetadata>;\n  }\n\n  /**\n   * Updates the metadata for this object.\n   * @param metadata - The new metadata for the object.\n   * Only values that have been explicitly set will be changed. Explicitly\n   * setting a value to null will remove the metadata.\n   * @returns A promise that resolves\n   * with the new metadata for this object.\n   * @see firebaseStorage.Reference.prototype.getMetadata\n   */\n  updateMetadata(\n    metadata: types.SettableMetadata\n  ): Promise<types.FullMetadata> {\n    return updateMetadata(\n      this._delegate,\n      metadata as Metadata\n    ) as Promise<types.FullMetadata>;\n  }\n\n  /**\n   * @returns A promise that resolves with the download\n   * URL for this object.\n   */\n  getDownloadURL(): Promise<string> {\n    return getDownloadURL(this._delegate);\n  }\n\n  /**\n   * Deletes the object at this location.\n   * @returns A promise that resolves if the deletion succeeds.\n   */\n  delete(): Promise<void> {\n    this._throwIfRoot('delete');\n    return deleteObject(this._delegate);\n  }\n\n  private _throwIfRoot(name: string): void {\n    if (this._delegate._location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FirebaseStorageError } from './error';\nimport { Request } from './request';\n\n/**\n * A request whose promise always fails.\n */\nexport class FailRequest<T> implements Request<T> {\n  promise_: Promise<T>;\n\n  constructor(error: FirebaseStorageError) {\n    this.promise_ = Promise.reject<T>(error);\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<T> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(_appDelete = false): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides a method for running a function with exponential\n * backoff.\n */\ntype id = (p1: boolean) => void;\n\nexport { id };\n\n/**\n * @param f May be invoked\n *     before the function returns.\n * @param callback Get all the arguments passed to the function\n *     passed to f, including the initial boolean.\n */\nexport function start(\n  f: (p1: (success: boolean) => void, canceled: boolean) => void,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  callback: (...args: any[]) => unknown,\n  timeout: number\n): id {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  let waitSeconds = 1;\n  // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let timeoutId: any = null;\n  let hitTimeout = false;\n  let cancelState = 0;\n\n  function canceled(): boolean {\n    return cancelState === 2;\n  }\n  let triggeredCallback = false;\n\n  function triggerCallback(...args: any[]): void {\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis: number): void {\n    timeoutId = setTimeout(() => {\n      timeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  }\n\n  function handler(success: boolean, ...args: any[]): void {\n    if (triggeredCallback) {\n      return;\n    }\n    if (success) {\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    const mustStop = canceled() || hitTimeout;\n    if (mustStop) {\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n    let waitMillis;\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n    callWithDelay(waitMillis);\n  }\n  let stopped = false;\n\n  function stop(wasTimeout: boolean): void {\n    if (stopped) {\n      return;\n    }\n    stopped = true;\n    if (triggeredCallback) {\n      return;\n    }\n    if (timeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n      clearTimeout(timeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n  callWithDelay(0);\n  setTimeout(() => {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n\n/**\n * Stops the retry loop from repeating.\n * If the function is currently \"in between\" retries, it is invoked immediately\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\n * after the current invocation finishes iff the current invocation would have\n * triggered another retry.\n */\nexport function stop(id: id): void {\n  id(false);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods used to actually send HTTP requests from\n * abstract representations.\n */\n\nimport { start, stop, id as backoffId } from './backoff';\nimport {\n  FirebaseStorageError,\n  unknown,\n  appDeleted,\n  canceled,\n  retryLimitExceeded\n} from './error';\nimport { RequestInfo } from './requestinfo';\nimport { isJustDef } from './type';\nimport { makeQueryString } from './url';\nimport { Headers, XhrIo, ErrorCode } from './xhrio';\nimport { XhrIoPool } from './xhriopool';\n\nexport interface Request<T> {\n  getPromise(): Promise<T>;\n\n  /**\n   * Cancels the request. IMPORTANT: the promise may still be resolved with an\n   * appropriate value (if the request is finished before you call this method,\n   * but the promise has not yet been resolved), so don't just assume it will be\n   * rejected if you call this function.\n   * @param appDelete - True if the cancelation came from the app being deleted.\n   */\n  cancel(appDelete?: boolean): void;\n}\n\nclass NetworkRequest<T> implements Request<T> {\n  private url_: string;\n  private method_: string;\n  private headers_: Headers;\n  private body_: string | Blob | Uint8Array | null;\n  private successCodes_: number[];\n  private additionalRetryCodes_: number[];\n  private pendingXhr_: XhrIo | null = null;\n  private backoffId_: backoffId | null = null;\n  private resolve_!: (value?: T | PromiseLike<T>) => void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private reject_!: (reason?: any) => void;\n  private canceled_: boolean = false;\n  private appDelete_: boolean = false;\n  private callback_: (p1: XhrIo, p2: string) => T;\n  private errorCallback_:\n    | ((p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError)\n    | null;\n  private progressCallback_: ((p1: number, p2: number) => void) | null;\n  private timeout_: number;\n  private pool_: XhrIoPool;\n  promise_: Promise<T>;\n\n  constructor(\n    url: string,\n    method: string,\n    headers: Headers,\n    body: string | Blob | Uint8Array | null,\n    successCodes: number[],\n    additionalRetryCodes: number[],\n    callback: (p1: XhrIo, p2: string) => T,\n    errorCallback:\n      | ((p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError)\n      | null,\n    timeout: number,\n    progressCallback: ((p1: number, p2: number) => void) | null,\n    pool: XhrIoPool\n  ) {\n    this.url_ = url;\n    this.method_ = method;\n    this.headers_ = headers;\n    this.body_ = body;\n    this.successCodes_ = successCodes.slice();\n    this.additionalRetryCodes_ = additionalRetryCodes.slice();\n    this.callback_ = callback;\n    this.errorCallback_ = errorCallback;\n    this.progressCallback_ = progressCallback;\n    this.timeout_ = timeout;\n    this.pool_ = pool;\n    this.promise_ = new Promise((resolve, reject) => {\n      this.resolve_ = resolve as (value?: T | PromiseLike<T>) => void;\n      this.reject_ = reject;\n      this.start_();\n    });\n  }\n\n  /**\n   * Actually starts the retry loop.\n   */\n  private start_(): void {\n    const self = this;\n\n    function doTheRequest(\n      backoffCallback: (p1: boolean, ...p2: unknown[]) => void,\n      canceled: boolean\n    ): void {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n      const xhr = self.pool_.createXhrIo();\n      self.pendingXhr_ = xhr;\n\n      function progressListener(progressEvent: ProgressEvent): void {\n        const loaded = progressEvent.loaded;\n        const total = progressEvent.lengthComputable ? progressEvent.total : -1;\n        if (self.progressCallback_ !== null) {\n          self.progressCallback_(loaded, total);\n        }\n      }\n      if (self.progressCallback_ !== null) {\n        xhr.addUploadProgressListener(progressListener);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      xhr\n        .send(self.url_, self.method_, self.body_, self.headers_)\n        .then((xhr: XhrIo) => {\n          if (self.progressCallback_ !== null) {\n            xhr.removeUploadProgressListener(progressListener);\n          }\n          self.pendingXhr_ = null;\n          xhr = xhr as XhrIo;\n          const hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\n          const status = xhr.getStatus();\n          if (!hitServer || self.isRetryStatusCode_(status)) {\n            const wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\n            backoffCallback(\n              false,\n              new RequestEndStatus(false, null, wasCanceled)\n            );\n            return;\n          }\n          const successCode = self.successCodes_.indexOf(status) !== -1;\n          backoffCallback(true, new RequestEndStatus(successCode, xhr));\n        });\n    }\n\n    /**\n     * @param requestWentThrough - True if the request eventually went\n     *     through, false if it hit the retry limit or was canceled.\n     */\n    function backoffDone(\n      requestWentThrough: boolean,\n      status: RequestEndStatus\n    ): void {\n      const resolve = self.resolve_;\n      const reject = self.reject_;\n      const xhr = status.xhr as XhrIo;\n      if (status.wasSuccessCode) {\n        try {\n          const result = self.callback_(xhr, xhr.getResponseText());\n          if (isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (xhr !== null) {\n          const err = unknown();\n          err.serverResponse = xhr.getResponseText();\n          if (self.errorCallback_) {\n            reject(self.errorCallback_(xhr, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            const err = self.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            const err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    }\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n    }\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<T> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(appDelete?: boolean): void {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n    if (this.backoffId_ !== null) {\n      stop(this.backoffId_);\n    }\n    if (this.pendingXhr_ !== null) {\n      this.pendingXhr_.abort();\n    }\n  }\n\n  private isRetryStatusCode_(status: number): boolean {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    const isFiveHundredCode = status >= 500 && status < 600;\n    const extraRetryCodes = [\n      // Request Timeout: web server didn't receive full request in time.\n      408,\n      // Too Many Requests: you're getting rate-limited, basically.\n      429\n    ];\n    const isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n    const isRequestSpecificRetryCode =\n      this.additionalRetryCodes_.indexOf(status) !== -1;\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  }\n}\n\n/**\n * A collection of information about the result of a network request.\n * @param opt_canceled - Defaults to false.\n */\nexport class RequestEndStatus {\n  /**\n   * True if the request was canceled.\n   */\n  canceled: boolean;\n\n  constructor(\n    public wasSuccessCode: boolean,\n    public xhr: XhrIo | null,\n    canceled?: boolean\n  ) {\n    this.canceled = !!canceled;\n  }\n}\n\nexport function addAuthHeader_(\n  headers: Headers,\n  authToken: string | null\n): void {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nexport function addVersionHeader_(\n  headers: Headers,\n  firebaseVersion?: string\n): void {\n  headers['X-Firebase-Storage-Version'] =\n    'webjs/' + (firebaseVersion ?? 'AppManager');\n}\n\nexport function addGmpidHeader_(headers: Headers, appId: string | null): void {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\n\nexport function makeRequest<T>(\n  requestInfo: RequestInfo<T>,\n  appId: string | null,\n  authToken: string | null,\n  pool: XhrIoPool,\n  firebaseVersion?: string\n): Request<T> {\n  const queryPart = makeQueryString(requestInfo.urlParams);\n  const url = requestInfo.url + queryPart;\n  const headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers, firebaseVersion);\n  return new NetworkRequest<T>(\n    url,\n    requestInfo.method,\n    headers,\n    requestInfo.body,\n    requestInfo.successCodes,\n    requestInfo.additionalRetryCodes,\n    requestInfo.handler,\n    requestInfo.errorHandler,\n    requestInfo.timeout,\n    requestInfo.progressCallback,\n    pool\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Location } from './implementation/location';\nimport { FailRequest } from './implementation/failrequest';\nimport { Request, makeRequest } from './implementation/request';\nimport { RequestInfo } from './implementation/requestinfo';\nimport { XhrIoPool } from './implementation/xhriopool';\nimport { Reference, _getChild } from './reference';\nimport { Provider } from '@firebase/component';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  _FirebaseService\n  // eslint-disable-next-line import/no-extraneous-dependencies\n} from '@firebase/app-exp';\nimport {\n  CONFIG_STORAGE_BUCKET_KEY,\n  DEFAULT_MAX_OPERATION_RETRY_TIME,\n  DEFAULT_MAX_UPLOAD_RETRY_TIME\n} from '../src/implementation/constants';\nimport {\n  invalidArgument,\n  appDeleted,\n  noDefaultBucket\n} from './implementation/error';\nimport { validateNumber } from './implementation/type';\n\nexport function isUrl(path?: string): boolean {\n  return /^[A-Za-z]+:\\/\\//.test(path as string);\n}\n\n/**\n * Returns a firebaseStorage.Reference for the given url.\n */\nfunction refFromURL(service: StorageService, url: string): Reference {\n  return new Reference(service, url);\n}\n\n/**\n * Returns a firebaseStorage.Reference for the given path in the default\n * bucket.\n */\nfunction refFromPath(\n  ref: StorageService | Reference,\n  path?: string\n): Reference {\n  if (ref instanceof StorageService) {\n    const service = ref;\n    if (service._bucket == null) {\n      throw noDefaultBucket();\n    }\n    const reference = new Reference(service, service._bucket!);\n    if (path != null) {\n      return refFromPath(reference, path);\n    } else {\n      return reference;\n    }\n  } else {\n    // ref is a Reference\n    if (path !== undefined) {\n      if (path.includes('..')) {\n        throw invalidArgument('`path` param cannot contain \"..\"');\n      }\n      return _getChild(ref, path);\n    } else {\n      return ref;\n    }\n  }\n}\n\n/**\n * Returns a storage Reference for the given url.\n * @param storage - `Storage` instance.\n * @param url - URL. If empty, returns root reference.\n * @public\n */\nexport function ref(storage: StorageService, url?: string): Reference;\n/**\n * Returns a storage Reference for the given path in the\n * default bucket.\n * @param storageOrRef - `Storage` service or storage `Reference`.\n * @param pathOrUrlStorage - path. If empty, returns root reference (if Storage\n * instance provided) or returns same reference (if Reference provided).\n * @public\n */\nexport function ref(\n  storageOrRef: StorageService | Reference,\n  path?: string\n): Reference;\nexport function ref(\n  serviceOrRef: StorageService | Reference,\n  pathOrUrl?: string\n): Reference | null {\n  if (pathOrUrl && isUrl(pathOrUrl)) {\n    if (serviceOrRef instanceof StorageService) {\n      return refFromURL(serviceOrRef, pathOrUrl);\n    } else {\n      throw invalidArgument(\n        'To use ref(service, url), the first argument must be a Storage instance.'\n      );\n    }\n  } else {\n    return refFromPath(serviceOrRef, pathOrUrl);\n  }\n}\n\nfunction extractBucket(config?: FirebaseOptions): Location | null {\n  const bucketString = config?.[CONFIG_STORAGE_BUCKET_KEY];\n  if (bucketString == null) {\n    return null;\n  }\n  return Location.makeFromBucketSpec(bucketString);\n}\n\n/**\n * A service that provides Firebase Storage Reference instances.\n * @public\n * @param opt_url - gs:// url to a custom Storage Bucket\n */\nexport class StorageService implements _FirebaseService {\n  readonly _bucket: Location | null = null;\n  protected readonly _appId: string | null = null;\n  private readonly _requests: Set<Request<unknown>>;\n  private _deleted: boolean = false;\n  private _maxOperationRetryTime: number;\n  private _maxUploadRetryTime: number;\n\n  constructor(\n    /**\n     * FirebaseApp associated with this StorageService instance.\n     */\n    readonly app: FirebaseApp,\n    readonly _authProvider: Provider<FirebaseAuthInternalName>,\n    readonly _pool: XhrIoPool,\n    readonly _url?: string,\n    readonly _firebaseVersion?: string\n  ) {\n    this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this._requests = new Set();\n    if (_url != null) {\n      this._bucket = Location.makeFromBucketSpec(_url);\n    } else {\n      this._bucket = extractBucket(this.app.options);\n    }\n  }\n\n  /**\n   * The maximum time to retry uploads in milliseconds.\n   */\n  get maxUploadRetryTime(): number {\n    return this._maxUploadRetryTime;\n  }\n\n  set maxUploadRetryTime(time: number) {\n    validateNumber(\n      'time',\n      /* minValue=*/ 0,\n      /* maxValue= */ Number.POSITIVE_INFINITY,\n      time\n    );\n    this._maxUploadRetryTime = time;\n  }\n\n  /**\n   * The maximum time to retry operations other than uploads or downloads in\n   * milliseconds.\n   */\n  get maxOperationRetryTime(): number {\n    return this._maxOperationRetryTime;\n  }\n\n  set maxOperationRetryTime(time: number) {\n    validateNumber(\n      'time',\n      /* minValue=*/ 0,\n      /* maxValue= */ Number.POSITIVE_INFINITY,\n      time\n    );\n    this._maxOperationRetryTime = time;\n  }\n\n  async _getAuthToken(): Promise<string | null> {\n    const auth = this._authProvider.getImmediate({ optional: true });\n    if (auth) {\n      const tokenData = await auth.getToken();\n      if (tokenData !== null) {\n        return tokenData.accessToken;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Stop running requests and prevent more from being created.\n   */\n  _delete(): Promise<void> {\n    this._deleted = true;\n    this._requests.forEach(request => request.cancel());\n    this._requests.clear();\n    return Promise.resolve();\n  }\n\n  /**\n   * Returns a new firebaseStorage.Reference object referencing this StorageService\n   * at the given Location.\n   */\n  _makeStorageReference(loc: Location): Reference {\n    return new Reference(this, loc);\n  }\n\n  /**\n   * @param requestInfo - HTTP RequestInfo object\n   * @param authToken - Firebase auth token\n   */\n  _makeRequest<T>(\n    requestInfo: RequestInfo<T>,\n    authToken: string | null\n  ): Request<T> {\n    if (!this._deleted) {\n      const request = makeRequest(\n        requestInfo,\n        this._appId,\n        authToken,\n        this._pool,\n        this._firebaseVersion\n      );\n      this._requests.add(request);\n      // Request removes itself from set when complete.\n      request.getPromise().then(\n        () => this._requests.delete(request),\n        () => this._requests.delete(request)\n      );\n      return request;\n    } else {\n      return new FailRequest(appDeleted());\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as types from '@firebase/storage-types';\nimport { StorageService, isUrl, ref } from '../src/service';\nimport { Location } from '../src/implementation/location';\nimport { ReferenceCompat } from './reference';\nimport { invalidArgument } from '../src/implementation/error';\nimport { FirebaseApp } from '@firebase/app-types';\n\n/**\n * A service that provides firebaseStorage.Reference instances.\n * @param opt_url gs:// url to a custom Storage Bucket\n */\nexport class StorageServiceCompat implements types.FirebaseStorage {\n  constructor(public app: FirebaseApp, readonly _delegate: StorageService) {}\n\n  INTERNAL = {\n    /**\n     * Called when the associated app is deleted.\n     */\n    delete: () => {\n      return this._delegate._delete();\n    }\n  };\n\n  get maxOperationRetryTime(): number {\n    return this._delegate.maxOperationRetryTime;\n  }\n\n  get maxUploadRetryTime(): number {\n    return this._delegate.maxUploadRetryTime;\n  }\n\n  /**\n   * Returns a firebaseStorage.Reference for the given path in the default\n   * bucket.\n   */\n  ref(path?: string): types.Reference {\n    if (isUrl(path)) {\n      throw invalidArgument(\n        'ref() expected a child path but got a URL, use refFromURL instead.'\n      );\n    }\n    return new ReferenceCompat(ref(this._delegate, path), this);\n  }\n\n  /**\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\n   * which must be a gs:// or http[s]:// URL.\n   */\n  refFromURL(url: string): types.Reference {\n    if (!isUrl(url)) {\n      throw invalidArgument(\n        'refFromURL() expected a full URL but got a child path, use ref() instead.'\n      );\n    }\n    try {\n      Location.makeFromUrl(url);\n    } catch (e) {\n      throw invalidArgument(\n        'refFromUrl() expected a valid full URL but got an invalid one.'\n      );\n    }\n    return new ReferenceCompat(ref(this._delegate, url), this);\n  }\n\n  setMaxUploadRetryTime(time: number): void {\n    this._delegate.maxUploadRetryTime = time;\n  }\n\n  setMaxOperationRetryTime(time: number): void {\n    this._delegate.maxOperationRetryTime = time;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport { _FirebaseNamespace } from '@firebase/app-types/private';\nimport { StringFormat } from '../src/implementation/string';\nimport { TaskEvent, TaskState } from '../src/implementation/taskenums';\n\nimport { XhrIoPool } from '../src/implementation/xhriopool';\nimport { ReferenceCompat } from './reference';\nimport { StorageServiceCompat } from './service';\nimport { StorageService } from '../src/service';\nimport * as types from '@firebase/storage-types';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer\n} from '@firebase/component';\n\nimport { name, version } from '../package.json';\n\n/**\n * Type constant for Firebase Storage.\n */\nconst STORAGE_TYPE = 'storage';\n\nfunction factory(\n  container: ComponentContainer,\n  url?: string\n): types.FirebaseStorage {\n  // Dependencies\n  // TODO: This should eventually be 'app-compat'\n  const app = container.getProvider('app').getImmediate();\n  const authProvider = container.getProvider('auth-internal');\n\n  // TODO: get StorageService instance from component framework instead\n  // of creating a new one.\n  const storageServiceCompat: StorageServiceCompat = new StorageServiceCompat(\n    app,\n    new StorageService(\n      app,\n      authProvider,\n      new XhrIoPool(),\n      url,\n      firebase.SDK_VERSION\n    )\n  );\n  return storageServiceCompat;\n}\n\nexport function registerStorage(instance: _FirebaseNamespace): void {\n  const namespaceExports = {\n    // no-inline\n    TaskState,\n    TaskEvent,\n    StringFormat,\n    Storage: StorageService,\n    Reference: ReferenceCompat\n  };\n  instance.INTERNAL.registerComponent(\n    new Component(STORAGE_TYPE, factory, ComponentType.PUBLIC)\n      .setServiceProps(namespaceExports)\n      .setMultipleInstances(true)\n  );\n\n  instance.registerVersion(name, version);\n}\n\nregisterStorage(firebase as _FirebaseNamespace);\n\n/**\n * Define extension behavior for `registerStorage`\n */\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    storage?: {\n      (app?: FirebaseApp, url?: string): types.FirebaseStorage;\n      Storage: typeof types.FirebaseStorage;\n\n      StringFormat: {\n        BASE64: types.StringFormat;\n        BASE64URL: types.StringFormat;\n        DATA_URL: types.StringFormat;\n        RAW: types.StringFormat;\n      };\n      TaskEvent: {\n        STATE_CHANGED: types.TaskEvent;\n      };\n      TaskState: {\n        CANCELED: types.TaskState;\n        ERROR: types.TaskState;\n        PAUSED: types.TaskState;\n        RUNNING: types.TaskState;\n        SUCCESS: types.TaskState;\n      };\n    };\n  }\n  interface FirebaseApp {\n    storage?(storageBucket?: string): types.FirebaseStorage;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar'\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class NotificationsService {\r\n\r\n    constructor(public snackBar: MatSnackBar) { }\r\n\r\n    config: MatSnackBarConfig = {\r\n        duration: 3000,\r\n        horizontalPosition: 'right',\r\n        verticalPosition: 'top'\r\n    }\r\n\r\n\r\n    success(msg) {\r\n        this.config['panelClass'] = ['notification', 'success'];\r\n        this.snackBar.open(msg, '', this.config);\r\n    }\r\n\r\n    warn(msg) {\r\n        this.config['panelClass'] = ['notification', 'warn'];\r\n        this.snackBar.open(msg, '', this.config);\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}